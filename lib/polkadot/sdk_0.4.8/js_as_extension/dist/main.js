/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={8926:e=>{function t(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}e.exports=function(e){return function(){var r=this,n=arguments;return new Promise((function(o,i){var a=e.apply(r,n);function s(e){t(a,o,i,s,u,"next",e)}function u(e){t(a,o,i,s,u,"throw",e)}s(void 0)}))}},e.exports.default=e.exports,e.exports.__esModule=!0},9713:e=>{e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e},e.exports.default=e.exports,e.exports.__esModule=!0},5318:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.default=e.exports,e.exports.__esModule=!0},7757:(e,t,r)=>{e.exports=r(5666)},7395:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BLAKE2=t.SIGMA=void 0;const n=r(8089);t.SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class o extends n.Hash{constructor(e,t,r={},o,i,a){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,(0,n.assertNumber)(e),(0,n.assertNumber)(t),(0,n.assertNumber)(o),t<0||t>o)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==r.key&&(r.key.length<1||r.key.length>o))throw new Error(`Key should be up 1..${o} byte long or undefined`);if(void 0!==r.salt&&r.salt.length!==i)throw new Error(`Salt should be ${i} byte long or undefined`);if(void 0!==r.personalization&&r.personalization.length!==a)throw new Error(`Personalization should be ${a} byte long or undefined`);this.buffer32=(0,n.u32)(this.buffer=new Uint8Array(e))}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{finished:t,blockLen:r,buffer:o,buffer32:i}=this;if(t)throw new Error("digest() was already called");const a=(e=(0,n.toBytes)(e)).length;for(let t=0;t<a;){this.pos===r&&(this.compress(i,0,!1),this.pos=0);const n=Math.min(r-this.pos,a-t),s=e.byteOffset+t;if(n!==r||s%4||!(t+n<a))o.set(e.subarray(t,t+n),this.pos),this.pos+=n,this.length+=n,t+=n;else{const n=new Uint32Array(e.buffer,s,Math.floor((a-t)/4));for(let e=0;t+r<a;e+=i.length,t+=r)this.length+=r,this.compress(n,e,!1)}}return this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Blake2: Invalid output buffer");const{finished:t,pos:r,buffer32:o}=this;if(t)throw new Error("digest() was already called");this.finished=!0,this.buffer.subarray(r).fill(0),this.compress(o,0,!0);const i=(0,n.u32)(e);this.get().forEach(((e,t)=>i[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){const{buffer:t,length:r,finished:n,destroyed:o,outputLen:i,pos:a}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.length=r,e.finished=n,e.destroyed=o,e.outputLen=i,e.buffer.set(t),e.pos=a,e}}t.BLAKE2=o},7505:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SHA2=void 0;const n=r(8089);class o extends n.Hash{constructor(e,t,r,o){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,n.createView)(this.buffer)}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{view:t,buffer:r,blockLen:o,finished:i}=this;if(i)throw new Error("digest() was already called");const a=(e=(0,n.toBytes)(e)).length;for(let i=0;i<a;){const s=Math.min(o-this.pos,a-i);if(s!==o)r.set(e.subarray(i,i+s),this.pos),this.pos+=s,i+=s,this.pos===o&&(this.process(t,0),this.pos=0);else{const t=(0,n.createView)(e);for(;o<=a-i;i+=o)this.process(t,i)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Sha2: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0;const{buffer:t,view:r,blockLen:o,isLE:i}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>o-a&&(this.process(r,0),a=0);for(let e=a;e<o;e++)t[e]=0;!function(e,t,r,n){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const o=BigInt(32),i=BigInt(4294967295),a=Number(r>>o&i),s=Number(r&i),u=n?4:0,c=n?0:4;e.setUint32(t+u,a,n),e.setUint32(t+c,s,n)}(r,o-8,BigInt(8*this.length),i),this.process(r,0);const s=(0,n.createView)(e);this.get().forEach(((e,t)=>s.setUint32(4*t,e,i)))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:o,destroyed:i,pos:a}=this;return e.length=n,e.pos=a,e.finished=o,e.destroyed=i,n%t&&e.buffer.set(r),e}}t.SHA2=o},6873:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.add5H=t.add5L=t.add4H=t.add4L=t.add3H=t.add3L=t.add=t.rotlBL=t.rotlBH=t.rotlSL=t.rotlSH=t.rotr32L=t.rotr32H=t.rotrBL=t.rotrBH=t.rotrSL=t.rotrSH=t.shrSL=t.shrSH=t.toBig=t.split=t.fromBig=void 0;const r=BigInt(2**32-1),n=BigInt(32);function o(e,t=!1){return t?{h:Number(e&r),l:Number(e>>n&r)}:{h:0|Number(e>>n&r),l:0|Number(e&r)}}t.fromBig=o,t.split=function(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:a,l:s}=o(e[i],t);[r[i],n[i]]=[a,s]}return[r,n]},t.toBig=(e,t)=>BigInt(e>>>0)<<n|BigInt(t>>>0),t.shrSH=(e,t,r)=>e>>>r,t.shrSL=(e,t,r)=>e<<32-r|t>>>r,t.rotrSH=(e,t,r)=>e>>>r|t<<32-r,t.rotrSL=(e,t,r)=>e<<32-r|t>>>r,t.rotrBH=(e,t,r)=>e<<64-r|t>>>r-32,t.rotrBL=(e,t,r)=>e>>>r-32|t<<64-r,t.rotr32H=(e,t)=>t,t.rotr32L=(e,t)=>e,t.rotlSH=(e,t,r)=>e<<r|t>>>32-r,t.rotlSL=(e,t,r)=>t<<r|e>>>32-r,t.rotlBH=(e,t,r)=>t<<r-32|e>>>64-r,t.rotlBL=(e,t,r)=>e<<r-32|t>>>64-r,t.add=function(e,t,r,n){const o=(t>>>0)+(n>>>0);return{h:e+r+(o/2**32|0)|0,l:0|o}},t.add3L=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),t.add3H=(e,t,r,n)=>t+r+n+(e/2**32|0)|0,t.add4L=(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),t.add4H=(e,t,r,n,o)=>t+r+n+o+(e/2**32|0)|0,t.add5L=(e,t,r,n,o)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(o>>>0),t.add5H=(e,t,r,n,o,i)=>t+r+n+o+i+(e/2**32|0)|0},3803:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.blake2b=void 0;const a=i(r(7395)),s=i(r(6873)),u=r(8089),c=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),f=new Uint32Array(32);function l(e,t,r,n,o,i){const a=o[i],u=o[i+1];let c=f[2*e],l=f[2*e+1],d=f[2*t],h=f[2*t+1],p=f[2*r],y=f[2*r+1],v=f[2*n],b=f[2*n+1],m=s.add3L(c,d,a);l=s.add3H(m,l,h,u),c=0|m,({Dh:b,Dl:v}={Dh:b^l,Dl:v^c}),({Dh:b,Dl:v}={Dh:s.rotr32H(b,v),Dl:s.rotr32L(b,v)}),({h:y,l:p}=s.add(y,p,b,v)),({Bh:h,Bl:d}={Bh:h^y,Bl:d^p}),({Bh:h,Bl:d}={Bh:s.rotrSH(h,d,24),Bl:s.rotrSL(h,d,24)}),f[2*e]=c,f[2*e+1]=l,f[2*t]=d,f[2*t+1]=h,f[2*r]=p,f[2*r+1]=y,f[2*n]=v,f[2*n+1]=b}function d(e,t,r,n,o,i){const a=o[i],u=o[i+1];let c=f[2*e],l=f[2*e+1],d=f[2*t],h=f[2*t+1],p=f[2*r],y=f[2*r+1],v=f[2*n],b=f[2*n+1],m=s.add3L(c,d,a);l=s.add3H(m,l,h,u),c=0|m,({Dh:b,Dl:v}={Dh:b^l,Dl:v^c}),({Dh:b,Dl:v}={Dh:s.rotrSH(b,v,16),Dl:s.rotrSL(b,v,16)}),({h:y,l:p}=s.add(y,p,b,v)),({Bh:h,Bl:d}={Bh:h^y,Bl:d^p}),({Bh:h,Bl:d}={Bh:s.rotrBH(h,d,63),Bl:s.rotrBL(h,d,63)}),f[2*e]=c,f[2*e+1]=l,f[2*t]=d,f[2*t+1]=h,f[2*r]=p,f[2*r+1]=y,f[2*n]=v,f[2*n+1]=b}class h extends a.BLAKE2{constructor(e={}){super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|c[0],this.v0h=0|c[1],this.v1l=0|c[2],this.v1h=0|c[3],this.v2l=0|c[4],this.v2h=0|c[5],this.v3l=0|c[6],this.v3h=0|c[7],this.v4l=0|c[8],this.v4h=0|c[9],this.v5l=0|c[10],this.v5h=0|c[11],this.v6l=0|c[12],this.v6h=0|c[13],this.v7l=0|c[14],this.v7h=0|c[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=(0,u.u32)((0,u.toBytes)(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=(0,u.u32)((0,u.toBytes)(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set((0,u.toBytes)(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:r,v1h:n,v2l:o,v2h:i,v3l:a,v3h:s,v4l:u,v4h:c,v5l:f,v5h:l,v6l:d,v6h:h,v7l:p,v7h:y}=this;return[e,t,r,n,o,i,a,s,u,c,f,l,d,h,p,y]}set(e,t,r,n,o,i,a,s,u,c,f,l,d,h,p,y){this.v0l=0|e,this.v0h=0|t,this.v1l=0|r,this.v1h=0|n,this.v2l=0|o,this.v2h=0|i,this.v3l=0|a,this.v3h=0|s,this.v4l=0|u,this.v4h=0|c,this.v5l=0|f,this.v5h=0|l,this.v6l=0|d,this.v6h=0|h,this.v7l=0|p,this.v7h=0|y}compress(e,t,r){this.get().forEach(((e,t)=>f[t]=e)),f.set(c,16);let{h:n,l:o}=s.fromBig(BigInt(this.length));f[24]=c[8]^o,f[25]=c[9]^n,r&&(f[28]=~f[28],f[29]=~f[29]);let i=0;const u=a.SIGMA;for(let r=0;r<12;r++)l(0,4,8,12,e,t+2*u[i++]),d(0,4,8,12,e,t+2*u[i++]),l(1,5,9,13,e,t+2*u[i++]),d(1,5,9,13,e,t+2*u[i++]),l(2,6,10,14,e,t+2*u[i++]),d(2,6,10,14,e,t+2*u[i++]),l(3,7,11,15,e,t+2*u[i++]),d(3,7,11,15,e,t+2*u[i++]),l(0,5,10,15,e,t+2*u[i++]),d(0,5,10,15,e,t+2*u[i++]),l(1,6,11,12,e,t+2*u[i++]),d(1,6,11,12,e,t+2*u[i++]),l(2,7,8,13,e,t+2*u[i++]),d(2,7,8,13,e,t+2*u[i++]),l(3,4,9,14,e,t+2*u[i++]),d(3,4,9,14,e,t+2*u[i++]);this.v0l^=f[0]^f[16],this.v0h^=f[1]^f[17],this.v1l^=f[2]^f[18],this.v1h^=f[3]^f[19],this.v2l^=f[4]^f[20],this.v2h^=f[5]^f[21],this.v3l^=f[6]^f[22],this.v3h^=f[7]^f[23],this.v4l^=f[8]^f[24],this.v4h^=f[9]^f[25],this.v5l^=f[10]^f[26],this.v5h^=f[11]^f[27],this.v6l^=f[12]^f[28],this.v6h^=f[13]^f[29],this.v7l^=f[14]^f[30],this.v7h^=f[15]^f[31],f.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.blake2b=(0,u.wrapConstructorWithOpts)((e=>new h(e)))},4421:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.crypto=void 0,t.crypto={node:void 0,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0}},9569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmac=void 0;const n=r(8089);class o extends n.Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,(0,n.assertHash)(e);const r=(0,n.toBytes)(t);if(this.iHash=e.create(),!(this.iHash instanceof n.Hash))throw new TypeError("Expected instance of class which extends utils.Hash");const o=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(o);i.set(r.length>this.iHash.blockLen?e.create().update(r).digest():r);for(let e=0;e<i.length;e++)i[e]^=54;this.iHash.update(i),this.oHash=e.create();for(let e=0;e<i.length;e++)i[e]^=106;this.oHash.update(i),i.fill(0)}update(e){if(this.destroyed)throw new Error("instance is destroyed");return this.iHash.update(e),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length!==this.outputLen)throw new Error("HMAC: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:n,destroyed:o,blockLen:i,outputLen:a}=this;return e.finished=n,e.destroyed=o,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}t.hmac=(e,t,r)=>new o(e,t).update(r).digest(),t.hmac.create=(e,t)=>new o(e,t)},9023:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Async=t.pbkdf2=void 0;const n=r(9569),o=r(8089);function i(e,t,r,i){(0,o.assertHash)(e);const a=(0,o.checkOpts)({dkLen:32,asyncTick:10},i),{c:s,dkLen:u,asyncTick:c}=a;if((0,o.assertNumber)(s),(0,o.assertNumber)(u),(0,o.assertNumber)(c),s<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const f=(0,o.toBytes)(t),l=(0,o.toBytes)(r),d=new Uint8Array(u),h=n.hmac.create(e,f),p=h._cloneInto().update(l);return{c:s,dkLen:u,asyncTick:c,DK:d,PRF:h,PRFSalt:p}}function a(e,t,r,n,o){return e.destroy(),t.destroy(),n&&n.destroy(),o.fill(0),r}t.pbkdf2=function(e,t,r,n){const{c:s,dkLen:u,DK:c,PRF:f,PRFSalt:l}=i(e,t,r,n);let d;const h=new Uint8Array(4),p=(0,o.createView)(h),y=new Uint8Array(f.outputLen);for(let e=1,t=0;t<u;e++,t+=f.outputLen){const r=c.subarray(t,t+f.outputLen);p.setInt32(0,e,!1),(d=l._cloneInto(d)).update(h).digestInto(y),r.set(y.subarray(0,r.length));for(let e=1;e<s;e++){f._cloneInto(d).update(y).digestInto(y);for(let e=0;e<r.length;e++)r[e]^=y[e]}}return a(f,l,c,d,y)},t.pbkdf2Async=async function(e,t,r,n){const{c:s,dkLen:u,asyncTick:c,DK:f,PRF:l,PRFSalt:d}=i(e,t,r,n);let h;const p=new Uint8Array(4),y=(0,o.createView)(p),v=new Uint8Array(l.outputLen);for(let e=1,t=0;t<u;e++,t+=l.outputLen){const r=f.subarray(t,t+l.outputLen);y.setInt32(0,e,!1),(h=d._cloneInto(h)).update(p).digestInto(v),r.set(v.subarray(0,r.length)),await(0,o.asyncLoop)(s-1,c,(e=>{l._cloneInto(h).update(v).digestInto(v);for(let e=0;e<r.length;e++)r[e]^=v[e]}))}return a(l,d,f,h,v)}},9514:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptAsync=t.scrypt=void 0;const n=r(3061),o=r(9023),i=r(8089),a=(e,t)=>e<<t|e>>>32-t;function s(e,t,r,n,o,i){let s=e[t++]^r[n++],u=e[t++]^r[n++],c=e[t++]^r[n++],f=e[t++]^r[n++],l=e[t++]^r[n++],d=e[t++]^r[n++],h=e[t++]^r[n++],p=e[t++]^r[n++],y=e[t++]^r[n++],v=e[t++]^r[n++],b=e[t++]^r[n++],m=e[t++]^r[n++],g=e[t++]^r[n++],w=e[t++]^r[n++],x=e[t++]^r[n++],P=e[t++]^r[n++],j=s,O=u,M=c,k=f,T=l,z=d,N=h,E=p,A=y,H=v,L=b,U=m,X=g,S=w,B=x,Z=P;for(let e=0;e<8;e+=2)T^=a(j+X|0,7),A^=a(T+j|0,9),X^=a(A+T|0,13),j^=a(X+A|0,18),H^=a(z+O|0,7),S^=a(H+z|0,9),O^=a(S+H|0,13),z^=a(O+S|0,18),B^=a(L+N|0,7),M^=a(B+L|0,9),N^=a(M+B|0,13),L^=a(N+M|0,18),k^=a(Z+U|0,7),E^=a(k+Z|0,9),U^=a(E+k|0,13),Z^=a(U+E|0,18),O^=a(j+k|0,7),M^=a(O+j|0,9),k^=a(M+O|0,13),j^=a(k+M|0,18),N^=a(z+T|0,7),E^=a(N+z|0,9),T^=a(E+N|0,13),z^=a(T+E|0,18),U^=a(L+H|0,7),A^=a(U+L|0,9),H^=a(A+U|0,13),L^=a(H+A|0,18),X^=a(Z+B|0,7),S^=a(X+Z|0,9),B^=a(S+X|0,13),Z^=a(B+S|0,18);o[i++]=s+j|0,o[i++]=u+O|0,o[i++]=c+M|0,o[i++]=f+k|0,o[i++]=l+T|0,o[i++]=d+z|0,o[i++]=h+N|0,o[i++]=p+E|0,o[i++]=y+A|0,o[i++]=v+H|0,o[i++]=b+L|0,o[i++]=m+U|0,o[i++]=g+X|0,o[i++]=w+S|0,o[i++]=x+B|0,o[i++]=P+Z|0}function u(e,t,r,n,o){let i=n+0,a=n+16*o;for(let n=0;n<16;n++)r[a+n]=e[t+16*(2*o-1)+n];for(let n=0;n<o;n++,i+=16,t+=16)s(r,a,e,t,r,i),n>0&&(a+=16),s(r,i,e,t+=16,r,a)}function c(e,t,r){const a=(0,i.checkOpts)({dkLen:32,asyncTick:10,maxmem:1073742848},r),{N:s,r:u,p:c,dkLen:f,asyncTick:l,maxmem:d,onProgress:h}=a;if((0,i.assertNumber)(s),(0,i.assertNumber)(u),(0,i.assertNumber)(c),(0,i.assertNumber)(f),(0,i.assertNumber)(l),(0,i.assertNumber)(d),void 0!==h&&"function"!=typeof h)throw new Error("progressCb should be function");const p=128*u,y=p/4;if(s<=1||0!=(s&s-1)||s>=2**(p/8)||s>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(c<0||c>137438953440/p)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(f<0||f>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const v=p*(s+c);if(v>d)throw new Error(`Scrypt: parameters too large, ${v} (128 * r * (N + p)) > ${d} (maxmem)`);const b=(0,o.pbkdf2)(n.sha256,e,t,{c:1,dkLen:p*c}),m=(0,i.u32)(b),g=(0,i.u32)(new Uint8Array(p*s)),w=(0,i.u32)(new Uint8Array(p));let x=()=>{};if(h){const e=2*s*c,t=Math.max(Math.floor(e/1e4),1);let r=0;x=()=>{r++,!h||r%t&&r!==e||h(r/e)}}return{N:s,r:u,p:c,dkLen:f,blockSize32:y,V:g,B32:m,B:b,tmp:w,blockMixCb:x,asyncTick:l}}function f(e,t,r,i,a){const s=(0,o.pbkdf2)(n.sha256,e,r,{c:1,dkLen:t});return r.fill(0),i.fill(0),a.fill(0),s}t.scrypt=function(e,t,r){const{N:n,r:o,p:i,dkLen:a,blockSize32:s,V:l,B32:d,B:h,tmp:p,blockMixCb:y}=c(e,t,r);for(let e=0;e<i;e++){const t=s*e;for(let e=0;e<s;e++)l[e]=d[t+e];for(let e=0,t=0;e<n-1;e++)u(l,t,l,t+=s,o),y();u(l,(n-1)*s,d,t,o),y();for(let e=0;e<n;e++){const e=d[t+s-16]%n;for(let r=0;r<s;r++)p[r]=d[t+r]^l[e*s+r];u(p,0,d,t,o),y()}}return f(e,a,h,l,p)},t.scryptAsync=async function(e,t,r){const{N:n,r:o,p:a,dkLen:s,blockSize32:l,V:d,B32:h,B:p,tmp:y,blockMixCb:v,asyncTick:b}=c(e,t,r);for(let e=0;e<a;e++){const t=l*e;for(let e=0;e<l;e++)d[e]=h[t+e];let r=0;await(0,i.asyncLoop)(n-1,b,(e=>{u(d,r,d,r+=l,o),v()})),u(d,(n-1)*l,h,t,o),v(),await(0,i.asyncLoop)(n,b,(e=>{const r=h[t+l-16]%n;for(let e=0;e<l;e++)y[e]=h[t+e]^d[r*l+e];u(y,0,h,t,o),v()}))}return f(e,s,p,d,y)}},3061:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha256=void 0;const n=r(7505),o=r(8089),i=(e,t,r)=>e&t^e&r^t&r,a=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),s=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),u=new Uint32Array(64);class c extends n.SHA2{constructor(){super(64,32,8,!1),this.A=0|s[0],this.B=0|s[1],this.C=0|s[2],this.D=0|s[3],this.E=0|s[4],this.F=0|s[5],this.G=0|s[6],this.H=0|s[7]}get(){const{A:e,B:t,C:r,D:n,E:o,F:i,G:a,H:s}=this;return[e,t,r,n,o,i,a,s]}set(e,t,r,n,o,i,a,s){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|o,this.F=0|i,this.G=0|a,this.H=0|s}process(e,t){for(let r=0;r<16;r++,t+=4)u[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=u[e-15],r=u[e-2],n=(0,o.rotr)(t,7)^(0,o.rotr)(t,18)^t>>>3,i=(0,o.rotr)(r,17)^(0,o.rotr)(r,19)^r>>>10;u[e]=i+u[e-7]+n+u[e-16]|0}let{A:r,B:n,C:s,D:c,E:f,F:l,G:d,H:h}=this;for(let e=0;e<64;e++){const t=h+((0,o.rotr)(f,6)^(0,o.rotr)(f,11)^(0,o.rotr)(f,25))+((p=f)&l^~p&d)+a[e]+u[e]|0,y=((0,o.rotr)(r,2)^(0,o.rotr)(r,13)^(0,o.rotr)(r,22))+i(r,n,s)|0;h=d,d=l,l=f,f=c+t|0,c=s,s=n,n=r,r=t+y|0}var p;r=r+this.A|0,n=n+this.B|0,s=s+this.C|0,c=c+this.D|0,f=f+this.E|0,l=l+this.F|0,d=d+this.G|0,h=h+this.H|0,this.set(r,n,s,c,f,l,d,h)}roundClean(){u.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}t.sha256=(0,o.wrapConstructor)((()=>new c))},5426:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.shake256=t.shake128=t.keccak_512=t.keccak_384=t.keccak_256=t.keccak_224=t.sha3_512=t.sha3_384=t.sha3_256=t.sha3_224=t.Keccak=t.keccakP=void 0;const a=i(r(6873)),s=r(8089),[u,c,f]=[[],[],[]],l=BigInt(0),d=BigInt(1),h=BigInt(2),p=BigInt(7),y=BigInt(256),v=BigInt(113);for(let e=0,t=d,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],u.push(2*(5*n+r)),c.push((e+1)*(e+2)/2%64);let o=l;for(let e=0;e<7;e++)t=(t<<d^(t>>p)*v)%y,t&h&&(o^=d<<(d<<BigInt(e))-d);f.push(o)}const[b,m]=a.split(f,!0),g=(e,t,r)=>r>32?a.rotlBH(e,t,r):a.rotlSH(e,t,r),w=(e,t,r)=>r>32?a.rotlBL(e,t,r):a.rotlSL(e,t,r);function x(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const n=(t+8)%10,o=(t+2)%10,i=r[o],a=r[o+1],s=g(i,a,1)^r[n],u=w(i,a,1)^r[n+1];for(let r=0;r<50;r+=10)e[t+r]^=s,e[t+r+1]^=u}let t=e[2],o=e[3];for(let r=0;r<24;r++){const n=c[r],i=g(t,o,n),a=w(t,o,n),s=u[r];t=e[s],o=e[s+1],e[s]=i,e[s+1]=a}for(let t=0;t<50;t+=10){for(let n=0;n<10;n++)r[n]=e[t+n];for(let n=0;n<10;n++)e[t+n]^=~r[(n+2)%10]&r[(n+4)%10]}e[0]^=b[n],e[1]^=m[n]}r.fill(0)}t.keccakP=x;class P extends s.Hash{constructor(e,t,r,n=!1,o=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=r,this.enableXOF=n,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,(0,s.assertNumber)(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,s.u32)(this.state)}keccak(){x(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){if(this.destroyed)throw new Error("instance is destroyed");if(this.finished)throw new Error("digest() was already called");const{blockLen:t,state:r}=this,n=(e=(0,s.toBytes)(e)).length;for(let o=0;o<n;){const i=Math.min(t-this.pos,n-o);for(let t=0;t<i;t++)r[this.pos++]^=e[o++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:r,blockLen:n}=this;e[r]^=t,0!=(128&t)&&r===n-1&&this.keccak(),e[n-1]^=128,this.keccak()}writeInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array))throw new Error("Keccak: invalid output buffer");this.finish();for(let t=0,r=e.length;t<r;){this.posOut>=this.blockLen&&this.keccak();const n=Math.min(this.blockLen-this.posOut,r-t);e.set(this.state.subarray(this.posOut,this.posOut+n),t),this.posOut+=n,t+=n}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return(0,s.assertNumber)(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(e.length<this.outputLen)throw new Error("Keccak: invalid output buffer");if(this.finished)throw new Error("digest() was already called");return this.finish(),this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:n,rounds:o,enableXOF:i}=this;return e||(e=new P(t,r,n,i,o)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=o,e.suffix=r,e.outputLen=n,e.enableXOF=i,e.destroyed=this.destroyed,e}}t.Keccak=P;const j=(e,t,r)=>(0,s.wrapConstructor)((()=>new P(t,e,r)));t.sha3_224=j(6,144,28),t.sha3_256=j(6,136,32),t.sha3_384=j(6,104,48),t.sha3_512=j(6,72,64),t.keccak_224=j(1,144,28),t.keccak_256=j(1,136,32),t.keccak_384=j(1,104,48),t.keccak_512=j(1,72,64);const O=(e,t,r)=>(0,s.wrapConstructorWithOpts)(((n={})=>new P(t,e,void 0!==n.dkLen?n.dkLen:r,!0)));t.shake128=O(31,168,16),t.shake256=O(31,136,32)},6262:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.sha384=t.sha512_256=t.sha512=t.SHA512=void 0;const a=r(7505),s=i(r(6873)),u=r(8089),[c,f]=s.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))),l=new Uint32Array(80),d=new Uint32Array(80);class h extends a.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:r,Bl:n,Ch:o,Cl:i,Dh:a,Dl:s,Eh:u,El:c,Fh:f,Fl:l,Gh:d,Gl:h,Hh:p,Hl:y}=this;return[e,t,r,n,o,i,a,s,u,c,f,l,d,h,p,y]}set(e,t,r,n,o,i,a,s,u,c,f,l,d,h,p,y){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|n,this.Ch=0|o,this.Cl=0|i,this.Dh=0|a,this.Dl=0|s,this.Eh=0|u,this.El=0|c,this.Fh=0|f,this.Fl=0|l,this.Gh=0|d,this.Gl=0|h,this.Hh=0|p,this.Hl=0|y}process(e,t){for(let r=0;r<16;r++,t+=4)l[r]=e.getUint32(t),d[r]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|l[e-15],r=0|d[e-15],n=s.rotrSH(t,r,1)^s.rotrSH(t,r,8)^s.shrSH(t,r,7),o=s.rotrSL(t,r,1)^s.rotrSL(t,r,8)^s.shrSL(t,r,7),i=0|l[e-2],a=0|d[e-2],u=s.rotrSH(i,a,19)^s.rotrBH(i,a,61)^s.shrSH(i,a,6),c=s.rotrSL(i,a,19)^s.rotrBL(i,a,61)^s.shrSL(i,a,6),f=s.add4L(o,c,d[e-7],d[e-16]),h=s.add4H(f,n,u,l[e-7],l[e-16]);l[e]=0|h,d[e]=0|f}let{Ah:r,Al:n,Bh:o,Bl:i,Ch:a,Cl:u,Dh:h,Dl:p,Eh:y,El:v,Fh:b,Fl:m,Gh:g,Gl:w,Hh:x,Hl:P}=this;for(let e=0;e<80;e++){const t=s.rotrSH(y,v,14)^s.rotrSH(y,v,18)^s.rotrBH(y,v,41),j=s.rotrSL(y,v,14)^s.rotrSL(y,v,18)^s.rotrBL(y,v,41),O=y&b^~y&g,M=v&m^~v&w,k=s.add5L(P,j,M,f[e],d[e]),T=s.add5H(k,x,t,O,c[e],l[e]),z=0|k,N=s.rotrSH(r,n,28)^s.rotrBH(r,n,34)^s.rotrBH(r,n,39),E=s.rotrSL(r,n,28)^s.rotrBL(r,n,34)^s.rotrBL(r,n,39),A=r&o^r&a^o&a,H=n&i^n&u^i&u;x=0|g,P=0|w,g=0|b,w=0|m,b=0|y,m=0|v,({h:y,l:v}=s.add(0|h,0|p,0|T,0|z)),h=0|a,p=0|u,a=0|o,u=0|i,o=0|r,i=0|n;const L=s.add3L(z,E,H);r=s.add3H(L,T,N,A),n=0|L}({h:r,l:n}=s.add(0|this.Ah,0|this.Al,0|r,0|n)),({h:o,l:i}=s.add(0|this.Bh,0|this.Bl,0|o,0|i)),({h:a,l:u}=s.add(0|this.Ch,0|this.Cl,0|a,0|u)),({h,l:p}=s.add(0|this.Dh,0|this.Dl,0|h,0|p)),({h:y,l:v}=s.add(0|this.Eh,0|this.El,0|y,0|v)),({h:b,l:m}=s.add(0|this.Fh,0|this.Fl,0|b,0|m)),({h:g,l:w}=s.add(0|this.Gh,0|this.Gl,0|g,0|w)),({h:x,l:P}=s.add(0|this.Hh,0|this.Hl,0|x,0|P)),this.set(r,n,o,i,a,u,h,p,y,v,b,m,g,w,x,P)}roundClean(){l.fill(0),d.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=h;class p extends h{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class y extends h{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}t.sha512=(0,u.wrapConstructor)((()=>new h)),t.sha512_256=(0,u.wrapConstructor)((()=>new p)),t.sha384=(0,u.wrapConstructor)((()=>new y))},8089:(e,t,r)=>{"use strict";e=r.nmd(e),Object.defineProperty(t,"__esModule",{value:!0}),t.randomBytes=t.wrapConstructorWithOpts=t.wrapConstructor=t.checkOpts=t.Hash=t.assertHash=t.assertBytes=t.assertBool=t.assertNumber=t.concatBytes=t.toBytes=t.utf8ToBytes=t.asyncLoop=t.nextTick=t.hexToBytes=t.bytesToHex=t.isLE=t.rotr=t.createView=t.u32=t.u8=void 0;const n=r(4421);if(t.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),t.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),t.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),t.rotr=(e,t)=>e<<32-t|e>>>t,t.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!t.isLE)throw new Error("Non little-endian hardware is not supported");const o=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function i(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}function a(e){if("string"==typeof e&&(e=i(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function s(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}t.bytesToHex=function(e){let t="";for(let r=0;r<e.length;r++)t+=o[e[r]];return t},t.hexToBytes=function(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,o=e.slice(n,n+2),i=Number.parseInt(o,16);if(Number.isNaN(i))throw new Error("Invalid byte sequence");t[r]=i}return t},t.nextTick=(()=>{const t="function"==typeof e.require&&e.require.bind(e);try{if(t){const{setImmediate:e}=t("timers");return()=>new Promise((t=>e(t)))}}catch(e){}return()=>new Promise((e=>setTimeout(e,0)))})(),t.asyncLoop=async function(e,r,n){let o=Date.now();for(let i=0;i<e;i++){n(i);const e=Date.now()-o;e>=0&&e<r||(await(0,t.nextTick)(),o+=e)}},t.utf8ToBytes=i,t.toBytes=a,t.concatBytes=function(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const o=e[t];r.set(o,n),n+=o.length}return r},t.assertNumber=s,t.assertBool=function(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)},t.assertBytes=function(e,...t){if(!(e instanceof Uint8Array)||t.length&&!t.includes(e.length))throw new TypeError(`Expected ${t} bytes, not ${typeof e} with length=${e.length}`)},t.assertHash=function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");s(e.outputLen),s(e.blockLen)},t.Hash=class{clone(){return this._cloneInto()}},t.checkOpts=function(e,t){if(void 0!==t&&("object"!=typeof t||(r=t,"[object Object]"!==Object.prototype.toString.call(r)||r.constructor!==Object)))throw new TypeError("Options should be object or undefined");var r;return Object.assign(e,t)},t.wrapConstructor=function(e){const t=t=>e().update(a(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t},t.wrapConstructorWithOpts=function(e){const t=(t,r)=>e(r).update(a(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t},t.randomBytes=function(e=32){if(n.crypto.web)return n.crypto.web.getRandomValues(new Uint8Array(e));if(n.crypto.node)return new Uint8Array(n.crypto.node.randomBytes(e).buffer);throw new Error("The environment doesn't have randomBytes function")}},9656:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.utils=t.schnorr=t.verify=t.signSync=t.sign=t.getSharedSecret=t.recoverPublicKey=t.getPublicKey=t.Signature=t.Point=t.CURVE=void 0;const o=n(r(9159)),i=BigInt(0),a=BigInt(1),s=BigInt(2),u=BigInt(3),c=BigInt(8),f=s**BigInt(256),l={a:i,b:BigInt(7),P:f-s**BigInt(32)-BigInt(977),n:f-BigInt("432420386565659656852420866394968145599"),h:a,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function d(e){const{a:t,b:r}=l,n=H(e*e),o=H(n*e);return H(o+t*e+r)}t.CURVE=l;const h=l.a===i;class p{constructor(e,t,r){this.x=e,this.y=t,this.z=r}static fromAffine(e){if(!(e instanceof v))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new p(e.x,e.y,a)}static toAffineBatch(e){const t=function(e,t=l.P){const r=new Array(e.length),n=U(e.reduce(((e,n,o)=>n===i?e:(r[o]=e,H(e*n,t))),a),t);return e.reduceRight(((e,n,o)=>n===i?e:(r[o]=H(e*r[o],t),H(e*n,t))),n),r}(e.map((e=>e.z)));return e.map(((e,r)=>e.toAffine(t[r])))}static normalizeZ(e){return p.toAffineBatch(e).map(p.fromAffine)}equals(e){if(!(e instanceof p))throw new TypeError("JacobianPoint expected");const{x:t,y:r,z:n}=this,{x:o,y:i,z:a}=e,u=H(n**s),c=H(a**s),f=H(t*c),l=H(o*u),d=H(H(r*a)*c),h=H(H(i*n)*u);return f===l&&d===h}negate(){return new p(this.x,H(-this.y),this.z)}double(){const{x:e,y:t,z:r}=this,n=H(e**s),o=H(t**s),i=H(o**s),a=H(s*(H((e+o)**s)-n-i)),f=H(u*n),l=H(f**s),d=H(l-s*a),h=H(f*(a-d)-c*i),y=H(s*t*r);return new p(d,h,y)}add(e){if(!(e instanceof p))throw new TypeError("JacobianPoint expected");const{x:t,y:r,z:n}=this,{x:o,y:a,z:u}=e;if(o===i||a===i)return this;if(t===i||r===i)return e;const c=H(n**s),f=H(u**s),l=H(t*f),d=H(o*c),h=H(H(r*u)*f),y=H(H(a*n)*c),v=H(d-l),b=H(y-h);if(v===i)return b===i?this.double():p.ZERO;const m=H(v**s),g=H(v*m),w=H(l*m),x=H(b**s-g-s*w),P=H(b*(w-x)-h*g),j=H(n*u*v);return new p(x,P,j)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=A(e);p.BASE;const r=p.ZERO;if(t===i)return r;if(t===a)return this;if(!h){let e=r,n=this;for(;t>i;)t&a&&(e=e.add(n)),n=n.double(),t>>=a;return e}let{k1neg:n,k1:o,k2neg:s,k2:u}=B(t),c=r,f=r,d=this;for(;o>i||u>i;)o&a&&(c=c.add(d)),u&a&&(f=f.add(d)),d=d.double(),o>>=a,u>>=a;return n&&(c=c.negate()),s&&(f=f.negate()),f=new p(H(f.x*l.beta),f.y,f.z),c.add(f)}precomputeWindow(e){const t=h?128/e+1:256/e+1,r=[];let n=this,o=n;for(let i=0;i<t;i++){o=n,r.push(o);for(let t=1;t<2**(e-1);t++)o=o.add(n),r.push(o);n=o.double()}return r}wNAF(e,t){!t&&this.equals(p.BASE)&&(t=v.BASE);const r=t&&t._WINDOW_SIZE||1;if(256%r)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=t&&y.get(t);n||(n=this.precomputeWindow(r),t&&1!==r&&(n=p.normalizeZ(n),y.set(t,n)));let o=p.ZERO,i=p.ZERO;const s=1+(h?128/r:256/r),u=2**(r-1),c=BigInt(2**r-1),f=2**r,l=BigInt(r);for(let t=0;t<s;t++){const r=t*u;let s=Number(e&c);if(e>>=l,s>u&&(s-=f,e+=a),0===s){let e=n[r];t%2&&(e=e.negate()),i=i.add(e)}else{let e=n[r+Math.abs(s)-1];s<0&&(e=e.negate()),o=o.add(e)}}return{p:o,f:i}}multiply(e,t){let r,n,o=A(e);if(h){const{k1neg:e,k1:i,k2neg:a,k2:s}=B(o);let{p:u,f:c}=this.wNAF(i,t),{p:f,f:d}=this.wNAF(s,t);e&&(u=u.negate()),a&&(f=f.negate()),f=new p(H(f.x*l.beta),f.y,f.z),r=u.add(f),n=c.add(d)}else{const{p:e,f:i}=this.wNAF(o,t);r=e,n=i}return p.normalizeZ([r,n])[0]}toAffine(e=U(this.z)){const{x:t,y:r,z:n}=this,o=e,i=H(o*o),s=H(i*o),u=H(t*i),c=H(r*s);if(H(n*o)!==a)throw new Error("invZ was invalid");return new v(u,c)}}p.BASE=new p(l.Gx,l.Gy,a),p.ZERO=new p(i,a,i);const y=new WeakMap;class v{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,y.delete(this)}static fromCompressedHex(e){const t=32===e.length,r=N(t?e:e.subarray(1));if(!D(r))throw new Error("Point is not on curve");let n=function(e){const{P:t}=l,r=BigInt(6),n=BigInt(11),o=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),f=e*e*e%t,d=f*f*e%t,h=L(d,u)*d%t,p=L(h,u)*d%t,y=L(p,s)*f%t,v=L(y,n)*y%t,b=L(v,o)*v%t,m=L(b,a)*b%t,g=L(m,c)*m%t,w=L(g,a)*b%t,x=L(w,u)*d%t,P=L(x,i)*v%t,j=L(P,r)*f%t;return L(j,s)}(d(r));const o=(n&a)===a;t?o&&(n=H(-n)):1==(1&e[0])!==o&&(n=H(-n));const i=new v(r,n);return i.assertValidity(),i}static fromUncompressedHex(e){const t=N(e.subarray(1,33)),r=N(e.subarray(33,65)),n=new v(t,r);return n.assertValidity(),n}static fromHex(e){const t=E(e),r=t.length,n=t[0];if(32===r||33===r&&(2===n||3===n))return this.fromCompressedHex(t);if(65===r&&4===n)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${r}`)}static fromPrivateKey(e){return v.BASE.multiply(W(e))}static fromSignature(e,t,r){const n=Z(e=E(e)),{r:o,s:a}=V(t);if(0!==r&&1!==r)throw new Error("Cannot recover signature: invalid recovery bit");if(n===i)throw new Error("Cannot recover signature: msgHash cannot be 0");const s=1&r?"03":"02",u=v.fromHex(s+O(o)),{n:c}=l,f=U(o,c),d=H(-n*f,c),h=H(a*f,c),p=v.BASE.multiplyAndAddUnsafe(u,d,h);if(!p)throw new Error("Cannot recover signature: point at infinify");return p.assertValidity(),p}toRawBytes(e=!1){return z(this.toHex(e))}toHex(e=!1){const t=O(this.x);return e?`${this.y&a?"03":"02"}${t}`:`04${t}${O(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:r}=this;if(!D(t)||!D(r))throw new Error(e);const n=H(r*r);if(H(n-d(t))!==i)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new v(this.x,H(-this.y))}double(){return p.fromAffine(this).double().toAffine()}add(e){return p.fromAffine(this).add(p.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return p.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,t,r){const n=p.fromAffine(this).multiply(t),o=p.fromAffine(e).multiplyUnsafe(r),i=n.add(o);return i.equals(p.ZERO)?void 0:i.toAffine()}}function b(e){return Number.parseInt(e[0],16)>=8?"00"+e:e}function m(e){if(e.length<2||2!==e[0])throw new Error(`Invalid signature integer tag: ${j(e)}`);const t=e[1],r=e.subarray(2,t+2);if(!t||r.length!==t)throw new Error("Invalid signature integer: wrong length");if(0===r[0]&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:N(r),left:e.subarray(t+2)}}t.Point=v,v.BASE=new v(l.Gx,l.Gy),v.ZERO=new v(i,i);class g{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=x(e),r="Signature.fromCompact";if("string"!=typeof e&&!t)throw new TypeError(`${r}: Expected string or Uint8Array`);const n=t?j(e):e;if(128!==n.length)throw new Error(`${r}: Expected 64-byte hex`);return new g(T(n.slice(0,64)),T(n.slice(64,128)))}static fromDER(e){const t=x(e);if("string"!=typeof e&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r,s:n}=function(e){if(e.length<2||48!=e[0])throw new Error(`Invalid signature tag: ${j(e)}`);if(e[1]!==e.length-2)throw new Error("Invalid signature: incorrect length");const{data:t,left:r}=m(e.subarray(2)),{data:n,left:o}=m(r);if(o.length)throw new Error(`Invalid signature: left bytes after parsing: ${j(o)}`);return{r:t,s:n}}(t?e:z(e));return new g(r,n)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!F(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!F(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=l.n>>a;return this.s>e}normalizeS(){return this.hasHighS()?new g(this.r,l.n-this.s):this}toDERRawBytes(e=!1){return z(this.toDERHex(e))}toDERHex(e=!1){const t=b(k(this.s));if(e)return t;const r=b(k(this.r)),n=k(r.length/2),o=k(t.length/2);return`30${k(r.length/2+t.length/2+4)}02${n}${r}02${o}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return z(this.toCompactHex())}toCompactHex(){return O(this.r)+O(this.s)}}function w(...e){if(!e.every(x))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const o=e[t];r.set(o,n),n+=o.length}return r}function x(e){return e instanceof Uint8Array}t.Signature=g;const P=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function j(e){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");let t="";for(let r=0;r<e.length;r++)t+=P[e[r]];return t}function O(e){if(e>f)throw new Error("Expected number < 2^256");return e.toString(16).padStart(64,"0")}function M(e){return z(O(e))}function k(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function T(e){if("string"!=typeof e)throw new TypeError("hexToNumber: expected string, got "+typeof e);return BigInt(`0x${e}`)}function z(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+e.length);const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,o=e.slice(n,n+2),i=Number.parseInt(o,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");t[r]=i}return t}function N(e){return T(j(e))}function E(e){return e instanceof Uint8Array?Uint8Array.from(e):z(e)}function A(e){if("number"==typeof e&&Number.isSafeInteger(e)&&e>0)return BigInt(e);if("bigint"==typeof e&&F(e))return e;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function H(e,t=l.P){const r=e%t;return r>=i?r:t+r}function L(e,t){const{P:r}=l;let n=e;for(;t-- >i;)n*=n,n%=r;return n}function U(e,t=l.P){if(e===i||t<=i)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=H(e,t),n=t,o=i,s=a,u=a,c=i;for(;r!==i;){const e=n/r,t=n%r,i=o-u*e,a=s-c*e;n=r,r=t,o=u,s=c,u=i,c=a}if(n!==a)throw new Error("invert: does not exist");return H(o,t)}const X=(e,t)=>(e+t/s)/t,S=s**BigInt(128);function B(e){const{n:t}=l,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-a*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=r,s=X(i*e,t),u=X(-n*e,t);let c=H(e-s*r-u*o,t),f=H(-s*n-u*i,t);const d=c>S,h=f>S;if(d&&(c=t-c),h&&(f=t-f),c>S||f>S)throw new Error("splitScalarEndo: Endomorphism failed, k="+e);return{k1neg:d,k1:c,k2neg:h,k2:f}}function Z(e){const{n:t}=l,r=8*e.length-256;let n=N(e);return r>0&&(n>>=BigInt(r)),n>=t&&(n-=t),n}class R{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...e){return t.utils.hmacSha256(this.k,...e)}hmacSync(...e){if("function"!=typeof t.utils.hmacSha256Sync)throw new Error("utils.hmacSha256Sync is undefined, you need to set it");const r=t.utils.hmacSha256Sync(this.k,...e);if(r instanceof Promise)throw new Error("To use sync sign(), ensure utils.hmacSha256 is sync");return r}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),0!==e.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),0!==e.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}}function F(e){return i<e&&e<l.n}function D(e){return i<e&&e<l.P}function I(e,t,r){const n=N(e);if(!F(n))return;const{n:o}=l,s=v.BASE.multiply(n),u=H(s.x,o);if(u===i)return;const c=H(U(n,o)*H(t+r*u,o),o);if(c===i)return;const f=new g(u,c);return{sig:f,recovery:(s.x===f.r?0:2)|Number(s.y&a)}}function W(e){let t;if("bigint"==typeof e)t=e;else if("number"==typeof e&&Number.isSafeInteger(e)&&e>0)t=BigInt(e);else if("string"==typeof e){if(64!==e.length)throw new Error("Expected 32 bytes of private key");t=T(e)}else{if(!x(e))throw new TypeError("Expected valid private key");if(32!==e.length)throw new Error("Expected 32 bytes of private key");t=N(e)}if(!F(t))throw new Error("Expected private key: 0 < key < n");return t}function q(e){return e instanceof v?(e.assertValidity(),e):v.fromHex(e)}function V(e){if(e instanceof g)return e.assertValidity(),e;try{return g.fromDER(e)}catch(t){return g.fromCompact(e)}}function G(e){const t=x(e),r="string"==typeof e,n=(t||r)&&e.length;return t?33===n||65===n:r?66===n||130===n:e instanceof v}function K(e){return N(e.length>32?e.slice(0,32):e)}function Y(e){const t=K(e),r=H(t,l.n);return C(r<i?t:r)}function C(e){if("bigint"!=typeof e)throw new Error("Expected bigint");return z(O(e))}function J(e,r,n){if(null==e)throw new Error(`sign: expected valid message hash, not "${e}"`);const o=E(e),i=W(r),a=[C(i),Y(o)];if(null!=n){!0===n&&(n=t.utils.randomBytes(32));const e=E(n);if(32!==e.length)throw new Error("sign: Expected 32 bytes of extra data");a.push(e)}return{seed:w(...a),m:K(o),d:i}}function Q(e,t){let{sig:r,recovery:n}=e;const{canonical:o,der:i,recovered:a}=Object.assign({canonical:!0,der:!0},t);o&&r.hasHighS()&&(r=r.normalizeS(),n^=1);const s=i?r.toDERRawBytes():r.toCompactRawBytes();return a?[s,n]:s}t.getPublicKey=function(e,t=!1){return v.fromPrivateKey(e).toRawBytes(t)},t.recoverPublicKey=function(e,t,r,n=!1){return v.fromSignature(e,t,r).toRawBytes(n)},t.getSharedSecret=function(e,t,r=!1){if(G(e))throw new TypeError("getSharedSecret: first arg must be private key");if(!G(t))throw new TypeError("getSharedSecret: second arg must be public key");const n=q(t);return n.assertValidity(),n.multiply(W(e)).toRawBytes(r)},t.sign=async function(e,t,r={}){const{seed:n,m:o,d:i}=J(e,t,r.extraEntropy);let a;const s=new R;for(await s.reseed(n);!(a=I(await s.generate(),o,i));)await s.reseed();return Q(a,r)},t.signSync=function(e,t,r={}){const{seed:n,m:o,d:i}=J(e,t,r.extraEntropy);let a;const s=new R;for(s.reseedSync(n);!(a=I(s.generateSync(),o,i));)s.reseedSync();return Q(a,r)};const _={strict:!0};async function $(e,...r){const n=new Uint8Array(e.split("").map((e=>e.charCodeAt(0)))),o=await t.utils.sha256(n);return N(await t.utils.sha256(w(o,o,...r)))}async function ee(e,t,r){const n=M(e);return H(await $("BIP0340/challenge",n,t.toRawX(),r),l.n)}function te(e){return(e.y&a)===i}t.verify=function(e,t,r,n=_){let o;try{o=V(e),t=E(t)}catch(e){return!1}const{r:a,s}=o;if(n.strict&&o.hasHighS())return!1;const u=Z(t);if(u===i)return!1;let c;try{c=q(r)}catch(e){return!1}const{n:f}=l,d=U(s,f),h=H(u*d,f),p=H(a*d,f),y=v.BASE.multiplyAndAddUnsafe(c,h,p);return!!y&&H(y.x,f)===a};class re{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromHex(e){const t=E(e);if(64!==t.length)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${t.length}`);const r=N(t.subarray(0,32)),n=N(t.subarray(32,64));return new re(r,n)}assertValidity(){const{r:e,s:t}=this;if(!D(e)||!F(t))throw new Error("Invalid signature")}toHex(){return O(this.r)+O(this.s)}toRawBytes(){return z(this.toHex())}}async function ne(e,t,r){const n=e instanceof re;let o;try{o=n?e:re.fromHex(e),n&&o.assertValidity()}catch(e){return!1}const{r:i,s:a}=o,s=E(t);let u;try{u=q(r)}catch(e){return!1}const c=await ee(i,u,s),f=v.BASE.multiplyAndAddUnsafe(u,W(a),H(-c,l.n));return!(!f||!te(f)||f.x!==i)}t.schnorr={Signature:re,getPublicKey:function(e){return v.fromPrivateKey(e).toRawX()},sign:async function(e,r,n=t.utils.randomBytes()){if(null==e)throw new TypeError(`sign: Expected valid message, not "${e}"`);const{n:o}=l,a=E(e),s=W(r),u=E(n);if(32!==u.length)throw new TypeError("sign: Expected 32 bytes of aux randomness");const c=v.fromPrivateKey(s),f=te(c)?s:o-s,d=f^await $("BIP0340/aux",u),h=H(await $("BIP0340/nonce",M(d),c.toRawX(),a),o);if(h===i)throw new Error("sign: Creation of signature failed. k is zero");const p=v.fromPrivateKey(h),y=te(p)?h:o-h,b=await ee(p.x,c,a),m=new re(p.x,H(y+b*f,o)).toRawBytes();if(!await ne(m,a,c.toRawX()))throw new Error("sign: Invalid signature produced");return m},verify:ne},v.BASE._setWindowSize(8);const oe={node:o.default,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0};t.utils={isValidPrivateKey(e){try{return W(e),!0}catch(e){return!1}},hashToPrivateKey:e=>{if((e=E(e)).length<40||e.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const t=H(N(e),l.n);if(t===i||t===a)throw new Error("Invalid private key");return M(t)},randomBytes:(e=32)=>{if(oe.web)return oe.web.getRandomValues(new Uint8Array(e));if(oe.node){const{randomBytes:t}=oe.node;return Uint8Array.from(t(e))}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>t.utils.hashToPrivateKey(t.utils.randomBytes(40)),bytesToHex:j,mod:H,sha256:async e=>{if(oe.web){const t=await oe.web.subtle.digest("SHA-256",e.buffer);return new Uint8Array(t)}if(oe.node){const{createHash:t}=oe.node;return Uint8Array.from(t("sha256").update(e).digest())}throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(e,...t)=>{if(oe.web){const r=await oe.web.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=w(...t),o=await oe.web.subtle.sign("HMAC",r,n);return new Uint8Array(o)}if(oe.node){const{createHmac:r}=oe.node,n=r("sha256",e);return t.forEach((e=>n.update(e))),Uint8Array.from(n.digest())}throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(e=8,t=v.BASE){const r=t===v.BASE?t:new v(t.x,t.y);return r._setWindowSize(e),r.multiply(u),r}}},6090:(e,t)=>{"use strict";function r(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function n(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce(((e,r)=>e?t(e,r.encode):r.encode),void 0),decode:e.reduce(((e,r)=>e?t(e,r.decode):r.decode),void 0)}}function o(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(r(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return r}))}}}function i(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function a(e,t="="){if(r(e),"string"!=typeof t)throw new Error("padding chr should be string");return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===t;n--)if(!((n-1)*e%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function s(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function u(e,t,n){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let o=0;const i=[],a=Array.from(e);for(a.forEach((e=>{if(r(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,r=!0;for(let i=o;i<a.length;i++){const s=a[i],u=t*e+s;if(!Number.isSafeInteger(u)||t*e/t!==e||u-s!=t*e)throw new Error("convertRadix: carry overflow");if(e=u%n,a[i]=Math.floor(u/n),!Number.isSafeInteger(a[i])||a[i]*n+e!==u)throw new Error("convertRadix: carry overflow");r&&(a[i]?r=!1:o=i)}if(i.push(e),r)break}for(let t=0;t<e.length-1&&0===e[t];t++)i.push(0);return i.reverse()}Object.defineProperty(t,"__esModule",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=t.assertNumber=void 0,t.assertNumber=r;const c=(e,t)=>t?c(t,e%t):e,f=(e,t)=>e+(t-c(e,t));function l(e,t,n,o){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(f(t,n)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${n} carryBits=${f(t,n)}`);let i=0,a=0;const s=2**n-1,u=[];for(const o of e){if(r(o),o>=2**t)throw new Error(`convertRadix2: invalid data word=${o} from=${t}`);if(i=i<<t|o,a+t>32)throw new Error(`convertRadix2: carry overflow pos=${a} from=${t}`);for(a+=t;a>=n;a-=n)u.push((i>>a-n&s)>>>0);i&=2**a-1}if(i=i<<n-a&s,!o&&a>=t)throw new Error("Excess padding");if(!o&&i)throw new Error(`Non-zero padding: ${i}`);return o&&a>0&&u.push(i>>>0),u}function d(e){return r(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return u(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(u(t,e,256))}}}function h(e,t=!1){if(r(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(f(8,e)>32||f(e,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return l(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(l(r,e,8,t))}}}function p(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...t){try{return e.apply(null,t)}catch(e){}}}function y(e,t){if(r(e),"function"!=typeof t)throw new Error("checksum fn should be function");return{encode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const n=t(r).slice(0,e),o=new Uint8Array(r.length+e);return o.set(r),o.set(n,r.length),o},decode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const n=r.slice(0,-e),o=t(n).slice(0,e),i=r.slice(-e);for(let t=0;t<e;t++)if(o[t]!==i[t])throw new Error("Invalid checksum");return n}}}t.utils={alphabet:o,chain:n,checksum:y,radix:d,radix2:h,join:i,padding:a},t.base16=n(h(4),o("0123456789ABCDEF"),i("")),t.base32=n(h(5),o("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),a(5),i("")),t.base32hex=n(h(5),o("0123456789ABCDEFGHIJKLMNOPQRSTUV"),a(5),i("")),t.base32crockford=n(h(5),o("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),i(""),s((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.base64=n(h(6),o("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),a(6),i("")),t.base64url=n(h(6),o("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),a(6),i(""));const v=e=>n(d(58),o(e),i(""));t.base58=v("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),t.base58flickr=v("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),t.base58xrp=v("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const b=[0,2,3,5,6,7,9,10,11];t.base58xmr={encode(e){let r="";for(let n=0;n<e.length;n+=8){const o=e.subarray(n,n+8);r+=t.base58.encode(o).padStart(b[o.length],"1")}return r},decode(e){let r=[];for(let n=0;n<e.length;n+=11){const o=e.slice(n,n+11),i=b.indexOf(o.length),a=t.base58.decode(o);for(let e=0;e<a.length-i;e++)if(0!==a[e])throw new Error("base58xmr: wrong padding");r=r.concat(Array.from(a.slice(a.length-i)))}return Uint8Array.from(r)}},t.base58check=e=>n(y(4,(t=>e(e(t)))),t.base58);const m=n(o("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),i("")),g=[996825010,642813549,513874426,1027748829,705979059];function w(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<g.length;e++)1==(t>>e&1)&&(r^=g[e]);return r}function x(e,t,r=1){const n=e.length;let o=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);o=w(o)^r>>5}o=w(o);for(let t=0;t<n;t++)o=w(o)^31&e.charCodeAt(t);for(let e of t)o=w(o)^e;for(let e=0;e<6;e++)o=w(o);return o^=r,m.encode(l([o%2**30],30,5,!1))}function P(e){const t="bech32"===e?1:734539939,r=h(5),n=r.decode,o=r.encode,i=p(n);function a(e,r=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const o=(e=n).lastIndexOf("1");if(0===o||-1===o)throw new Error('Letter "1" must be present between prefix and data only');const[i,a]=[e.slice(0,o),e.slice(o+1)];if(a.length<6)throw new Error("Data must be at least 6 characters long");const s=m.decode(a).slice(0,-6),u=x(i,s,t);if(!a.endsWith(u))throw new Error(`Invalid checksum in ${e}: expected "${u}"`);return{prefix:i,words:s}}return{encode:function(e,r,n=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof r);const o=e.length+7+r.length;if(!1!==n&&o>n)throw new TypeError(`Length ${o} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${m.encode(r)}${x(e,r,t)}`},decode:a,decodeToBytes:function(e){const{prefix:t,words:r}=a(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:p(a),fromWords:n,fromWordsUnsafe:i,toWords:o}}t.bech32=P("bech32"),t.bech32m=P("bech32m"),t.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.hex=n(h(4),o("0123456789abcdef"),i(""),s((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const j={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},O=`Invalid encoding type. Available types: ${Object.keys(j).join(", ")}`;t.bytesToString=(e,t)=>{if("string"!=typeof e||!j.hasOwnProperty(e))throw new TypeError(O);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return j[e].encode(t)},t.str=t.bytesToString,t.stringToBytes=(e,t)=>{if(!j.hasOwnProperty(e))throw new TypeError(O);if("string"!=typeof t)throw new TypeError("stringToBytes() expects string");return j[e].decode(t)},t.bytes=t.stringToBytes},7258:e=>{"use strict";function t(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}e.exports=function(e){return function(){var r=this,n=arguments;return new Promise((function(o,i){var a=e.apply(r,n);function s(e){t(a,o,i,s,u,"next",e)}function u(e){t(a,o,i,s,u,"throw",e)}s(void 0)}))}},e.exports.__esModule=!0,e.exports.default=e.exports},3398:e=>{"use strict";e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},4201:e=>{"use strict";e.exports=function(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e},e.exports.__esModule=!0,e.exports.default=e.exports},7468:e=>{"use strict";var t=0;e.exports=function(e){return"__private_"+t+++"_"+e},e.exports.__esModule=!0,e.exports.default=e.exports},6573:e=>{"use strict";function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},9041:e=>{"use strict";e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e},e.exports.__esModule=!0,e.exports.default=e.exports},9442:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},2045:(e,t,r)=>{"use strict";e.exports=r(5666)},6307:e=>{"use strict";e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},7946:e=>{"use strict";e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},6182:(e,t,r)=>{"use strict";var n=r(6307);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},918:e=>{"use strict";function t(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}e.exports=function(e){return function(){var r=this,n=arguments;return new Promise((function(o,i){var a=e.apply(r,n);function s(e){t(a,o,i,s,u,"next",e)}function u(e){t(a,o,i,s,u,"throw",e)}s(void 0)}))}},e.exports.__esModule=!0,e.exports.default=e.exports},762:e=>{"use strict";e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e},e.exports.__esModule=!0,e.exports.default=e.exports},6391:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},3713:e=>{"use strict";e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},220:e=>{"use strict";e.exports=function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}},e.exports.__esModule=!0,e.exports.default=e.exports},4482:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},9170:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},6497:(e,t,r)=>{"use strict";var n=r(7946),o=r(220),i=r(3777),a=r(4482);e.exports=function(e,t){return n(e)||o(e,t)||i(e,t)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},6490:(e,t,r)=>{"use strict";var n=r(6182),o=r(3713),i=r(3777),a=r(9170);e.exports=function(e){return n(e)||o(e)||i(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},3777:(e,t,r)=>{"use strict";var n=r(6307);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},4965:(e,t,r)=>{"use strict";e.exports=r(5666)},8749:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},2441:e=>{"use strict";e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},176:e=>{"use strict";e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},7306:(e,t,r)=>{"use strict";var n=r(2441);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},651:e=>{"use strict";e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},2808:e=>{"use strict";e.exports=function(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e},e.exports.__esModule=!0,e.exports.default=e.exports},8100:e=>{"use strict";var t=0;e.exports=function(e){return"__private_"+t+++"_"+e},e.exports.__esModule=!0,e.exports.default=e.exports},348:e=>{"use strict";function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},2395:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},9406:e=>{"use strict";e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},6595:e=>{"use strict";e.exports=function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}},e.exports.__esModule=!0,e.exports.default=e.exports},7077:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},9596:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},5692:(e,t,r)=>{"use strict";var n=r(176),o=r(6595),i=r(1262),a=r(7077);e.exports=function(e,t){return n(e)||o(e,t)||i(e,t)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},1407:(e,t,r)=>{"use strict";var n=r(7306),o=r(9406),i=r(1262),a=r(9596);e.exports=function(e){return n(e)||o(e)||i(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},1262:(e,t,r)=>{"use strict";var n=r(2441);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},3110:(e,t,r)=>{"use strict";!function(e){var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},n=function(){throw new Error("no PRNG")},o=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=t(),s=t([1]),u=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),f=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function y(e,t,r,n,o){var i,a=0;for(i=0;i<o;i++)a|=e[t+i]^r[n+i];return(1&a-1>>>8)-1}function v(e,t,r,n){return y(e,t,r,n,16)}function b(e,t,r,n){return y(e,t,r,n,32)}function m(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,v=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=i,P=a,j=s,O=u,M=c,k=f,T=l,z=d,N=h,E=p,A=y,H=v,L=b,U=m,X=g,S=w,B=0;B<20;B+=2)x^=(o=(L^=(o=(N^=(o=(M^=(o=x+L|0)<<7|o>>>25)+x|0)<<9|o>>>23)+M|0)<<13|o>>>19)+N|0)<<18|o>>>14,k^=(o=(P^=(o=(U^=(o=(E^=(o=k+P|0)<<7|o>>>25)+k|0)<<9|o>>>23)+E|0)<<13|o>>>19)+U|0)<<18|o>>>14,A^=(o=(T^=(o=(j^=(o=(X^=(o=A+T|0)<<7|o>>>25)+A|0)<<9|o>>>23)+X|0)<<13|o>>>19)+j|0)<<18|o>>>14,S^=(o=(H^=(o=(z^=(o=(O^=(o=S+H|0)<<7|o>>>25)+S|0)<<9|o>>>23)+O|0)<<13|o>>>19)+z|0)<<18|o>>>14,x^=(o=(O^=(o=(j^=(o=(P^=(o=x+O|0)<<7|o>>>25)+x|0)<<9|o>>>23)+P|0)<<13|o>>>19)+j|0)<<18|o>>>14,k^=(o=(M^=(o=(z^=(o=(T^=(o=k+M|0)<<7|o>>>25)+k|0)<<9|o>>>23)+T|0)<<13|o>>>19)+z|0)<<18|o>>>14,A^=(o=(E^=(o=(N^=(o=(H^=(o=A+E|0)<<7|o>>>25)+A|0)<<9|o>>>23)+H|0)<<13|o>>>19)+N|0)<<18|o>>>14,S^=(o=(X^=(o=(U^=(o=(L^=(o=S+X|0)<<7|o>>>25)+S|0)<<9|o>>>23)+L|0)<<13|o>>>19)+U|0)<<18|o>>>14;x=x+i|0,P=P+a|0,j=j+s|0,O=O+u|0,M=M+c|0,k=k+f|0,T=T+l|0,z=z+d|0,N=N+h|0,E=E+p|0,A=A+y|0,H=H+v|0,L=L+b|0,U=U+m|0,X=X+g|0,S=S+w|0,e[0]=x>>>0&255,e[1]=x>>>8&255,e[2]=x>>>16&255,e[3]=x>>>24&255,e[4]=P>>>0&255,e[5]=P>>>8&255,e[6]=P>>>16&255,e[7]=P>>>24&255,e[8]=j>>>0&255,e[9]=j>>>8&255,e[10]=j>>>16&255,e[11]=j>>>24&255,e[12]=O>>>0&255,e[13]=O>>>8&255,e[14]=O>>>16&255,e[15]=O>>>24&255,e[16]=M>>>0&255,e[17]=M>>>8&255,e[18]=M>>>16&255,e[19]=M>>>24&255,e[20]=k>>>0&255,e[21]=k>>>8&255,e[22]=k>>>16&255,e[23]=k>>>24&255,e[24]=T>>>0&255,e[25]=T>>>8&255,e[26]=T>>>16&255,e[27]=T>>>24&255,e[28]=z>>>0&255,e[29]=z>>>8&255,e[30]=z>>>16&255,e[31]=z>>>24&255,e[32]=N>>>0&255,e[33]=N>>>8&255,e[34]=N>>>16&255,e[35]=N>>>24&255,e[36]=E>>>0&255,e[37]=E>>>8&255,e[38]=E>>>16&255,e[39]=E>>>24&255,e[40]=A>>>0&255,e[41]=A>>>8&255,e[42]=A>>>16&255,e[43]=A>>>24&255,e[44]=H>>>0&255,e[45]=H>>>8&255,e[46]=H>>>16&255,e[47]=H>>>24&255,e[48]=L>>>0&255,e[49]=L>>>8&255,e[50]=L>>>16&255,e[51]=L>>>24&255,e[52]=U>>>0&255,e[53]=U>>>8&255,e[54]=U>>>16&255,e[55]=U>>>24&255,e[56]=X>>>0&255,e[57]=X>>>8&255,e[58]=X>>>16&255,e[59]=X>>>24&255,e[60]=S>>>0&255,e[61]=S>>>8&255,e[62]=S>>>16&255,e[63]=S>>>24&255}(e,t,r,n)}function g(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,v=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=0;x<20;x+=2)i^=(o=(b^=(o=(h^=(o=(c^=(o=i+b|0)<<7|o>>>25)+i|0)<<9|o>>>23)+c|0)<<13|o>>>19)+h|0)<<18|o>>>14,f^=(o=(a^=(o=(m^=(o=(p^=(o=f+a|0)<<7|o>>>25)+f|0)<<9|o>>>23)+p|0)<<13|o>>>19)+m|0)<<18|o>>>14,y^=(o=(l^=(o=(s^=(o=(g^=(o=y+l|0)<<7|o>>>25)+y|0)<<9|o>>>23)+g|0)<<13|o>>>19)+s|0)<<18|o>>>14,w^=(o=(v^=(o=(d^=(o=(u^=(o=w+v|0)<<7|o>>>25)+w|0)<<9|o>>>23)+u|0)<<13|o>>>19)+d|0)<<18|o>>>14,i^=(o=(u^=(o=(s^=(o=(a^=(o=i+u|0)<<7|o>>>25)+i|0)<<9|o>>>23)+a|0)<<13|o>>>19)+s|0)<<18|o>>>14,f^=(o=(c^=(o=(d^=(o=(l^=(o=f+c|0)<<7|o>>>25)+f|0)<<9|o>>>23)+l|0)<<13|o>>>19)+d|0)<<18|o>>>14,y^=(o=(p^=(o=(h^=(o=(v^=(o=y+p|0)<<7|o>>>25)+y|0)<<9|o>>>23)+v|0)<<13|o>>>19)+h|0)<<18|o>>>14,w^=(o=(g^=(o=(m^=(o=(b^=(o=w+g|0)<<7|o>>>25)+w|0)<<9|o>>>23)+b|0)<<13|o>>>19)+m|0)<<18|o>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=f>>>0&255,e[5]=f>>>8&255,e[6]=f>>>16&255,e[7]=f>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=l>>>0&255,e[17]=l>>>8&255,e[18]=l>>>16&255,e[19]=l>>>24&255,e[20]=d>>>0&255,e[21]=d>>>8&255,e[22]=d>>>16&255,e[23]=d>>>24&255,e[24]=h>>>0&255,e[25]=h>>>8&255,e[26]=h>>>16&255,e[27]=h>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function x(e,t,r,n,o,i,a){var s,u,c=new Uint8Array(16),f=new Uint8Array(64);for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=i[u];for(;o>=64;){for(m(f,c,a,w),u=0;u<64;u++)e[t+u]=r[n+u]^f[u];for(s=1,u=8;u<16;u++)s=s+(255&c[u])|0,c[u]=255&s,s>>>=8;o-=64,t+=64,n+=64}if(o>0)for(m(f,c,a,w),u=0;u<o;u++)e[t+u]=r[n+u]^f[u];return 0}function P(e,t,r,n,o){var i,a,s=new Uint8Array(16),u=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;r>=64;){for(m(u,s,o,w),a=0;a<64;a++)e[t+a]=u[a];for(i=1,a=8;a<16;a++)i=i+(255&s[a])|0,s[a]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(m(u,s,o,w),a=0;a<r;a++)e[t+a]=u[a];return 0}function j(e,t,r,n,o){var i=new Uint8Array(32);g(i,n,o,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return P(e,t,r,a,i)}function O(e,t,r,n,o,i,a){var s=new Uint8Array(32);g(s,i,a,w);for(var u=new Uint8Array(8),c=0;c<8;c++)u[c]=i[c+16];return x(e,t,r,n,o,u,s)}var M=function(e){var t,r,n,o,i,a,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function k(e,t,r,n,o,i){var a=new M(i);return a.update(r,n,o),a.finish(e,t),0}function T(e,t,r,n,o,i){var a=new Uint8Array(16);return k(a,0,r,n,o,i),v(e,t,a,0)}function z(e,t,r,n,o){var i;if(r<32)return-1;for(O(e,0,t,0,r,n,o),k(e,16,e,32,r-32,e),i=0;i<16;i++)e[i]=0;return 0}function N(e,t,r,n,o){var i,a=new Uint8Array(32);if(r<32)return-1;if(j(a,0,32,n,o),0!==T(t,16,t,32,r-32,a))return-1;for(O(e,0,t,0,r,n,o),i=0;i<32;i++)e[i]=0;return 0}function E(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function A(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function H(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function L(e,r){var n,o,i,a=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(A(s),A(s),A(s),o=0;o<2;o++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),i=a[15]>>16&1,a[14]&=65535,H(s,a,1-i)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function U(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return L(r,e),L(n,t),b(r,0,n,0)}function X(e){var t=new Uint8Array(32);return L(t,e),1&t[0]}function S(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function B(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function Z(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function R(e,t,r){var n,o,i=0,a=0,s=0,u=0,c=0,f=0,l=0,d=0,h=0,p=0,y=0,v=0,b=0,m=0,g=0,w=0,x=0,P=0,j=0,O=0,M=0,k=0,T=0,z=0,N=0,E=0,A=0,H=0,L=0,U=0,X=0,S=r[0],B=r[1],Z=r[2],R=r[3],F=r[4],D=r[5],I=r[6],W=r[7],q=r[8],V=r[9],G=r[10],K=r[11],Y=r[12],C=r[13],J=r[14],Q=r[15];i+=(n=t[0])*S,a+=n*B,s+=n*Z,u+=n*R,c+=n*F,f+=n*D,l+=n*I,d+=n*W,h+=n*q,p+=n*V,y+=n*G,v+=n*K,b+=n*Y,m+=n*C,g+=n*J,w+=n*Q,a+=(n=t[1])*S,s+=n*B,u+=n*Z,c+=n*R,f+=n*F,l+=n*D,d+=n*I,h+=n*W,p+=n*q,y+=n*V,v+=n*G,b+=n*K,m+=n*Y,g+=n*C,w+=n*J,x+=n*Q,s+=(n=t[2])*S,u+=n*B,c+=n*Z,f+=n*R,l+=n*F,d+=n*D,h+=n*I,p+=n*W,y+=n*q,v+=n*V,b+=n*G,m+=n*K,g+=n*Y,w+=n*C,x+=n*J,P+=n*Q,u+=(n=t[3])*S,c+=n*B,f+=n*Z,l+=n*R,d+=n*F,h+=n*D,p+=n*I,y+=n*W,v+=n*q,b+=n*V,m+=n*G,g+=n*K,w+=n*Y,x+=n*C,P+=n*J,j+=n*Q,c+=(n=t[4])*S,f+=n*B,l+=n*Z,d+=n*R,h+=n*F,p+=n*D,y+=n*I,v+=n*W,b+=n*q,m+=n*V,g+=n*G,w+=n*K,x+=n*Y,P+=n*C,j+=n*J,O+=n*Q,f+=(n=t[5])*S,l+=n*B,d+=n*Z,h+=n*R,p+=n*F,y+=n*D,v+=n*I,b+=n*W,m+=n*q,g+=n*V,w+=n*G,x+=n*K,P+=n*Y,j+=n*C,O+=n*J,M+=n*Q,l+=(n=t[6])*S,d+=n*B,h+=n*Z,p+=n*R,y+=n*F,v+=n*D,b+=n*I,m+=n*W,g+=n*q,w+=n*V,x+=n*G,P+=n*K,j+=n*Y,O+=n*C,M+=n*J,k+=n*Q,d+=(n=t[7])*S,h+=n*B,p+=n*Z,y+=n*R,v+=n*F,b+=n*D,m+=n*I,g+=n*W,w+=n*q,x+=n*V,P+=n*G,j+=n*K,O+=n*Y,M+=n*C,k+=n*J,T+=n*Q,h+=(n=t[8])*S,p+=n*B,y+=n*Z,v+=n*R,b+=n*F,m+=n*D,g+=n*I,w+=n*W,x+=n*q,P+=n*V,j+=n*G,O+=n*K,M+=n*Y,k+=n*C,T+=n*J,z+=n*Q,p+=(n=t[9])*S,y+=n*B,v+=n*Z,b+=n*R,m+=n*F,g+=n*D,w+=n*I,x+=n*W,P+=n*q,j+=n*V,O+=n*G,M+=n*K,k+=n*Y,T+=n*C,z+=n*J,N+=n*Q,y+=(n=t[10])*S,v+=n*B,b+=n*Z,m+=n*R,g+=n*F,w+=n*D,x+=n*I,P+=n*W,j+=n*q,O+=n*V,M+=n*G,k+=n*K,T+=n*Y,z+=n*C,N+=n*J,E+=n*Q,v+=(n=t[11])*S,b+=n*B,m+=n*Z,g+=n*R,w+=n*F,x+=n*D,P+=n*I,j+=n*W,O+=n*q,M+=n*V,k+=n*G,T+=n*K,z+=n*Y,N+=n*C,E+=n*J,A+=n*Q,b+=(n=t[12])*S,m+=n*B,g+=n*Z,w+=n*R,x+=n*F,P+=n*D,j+=n*I,O+=n*W,M+=n*q,k+=n*V,T+=n*G,z+=n*K,N+=n*Y,E+=n*C,A+=n*J,H+=n*Q,m+=(n=t[13])*S,g+=n*B,w+=n*Z,x+=n*R,P+=n*F,j+=n*D,O+=n*I,M+=n*W,k+=n*q,T+=n*V,z+=n*G,N+=n*K,E+=n*Y,A+=n*C,H+=n*J,L+=n*Q,g+=(n=t[14])*S,w+=n*B,x+=n*Z,P+=n*R,j+=n*F,O+=n*D,M+=n*I,k+=n*W,T+=n*q,z+=n*V,N+=n*G,E+=n*K,A+=n*Y,H+=n*C,L+=n*J,U+=n*Q,w+=(n=t[15])*S,a+=38*(P+=n*Z),s+=38*(j+=n*R),u+=38*(O+=n*F),c+=38*(M+=n*D),f+=38*(k+=n*I),l+=38*(T+=n*W),d+=38*(z+=n*q),h+=38*(N+=n*V),p+=38*(E+=n*G),y+=38*(A+=n*K),v+=38*(H+=n*Y),b+=38*(L+=n*C),m+=38*(U+=n*J),g+=38*(X+=n*Q),i=(n=(i+=38*(x+=n*B))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i+=o-1+37*(o-1),e[0]=i,e[1]=a,e[2]=s,e[3]=u,e[4]=c,e[5]=f,e[6]=l,e[7]=d,e[8]=h,e[9]=p,e[10]=y,e[11]=v,e[12]=b,e[13]=m,e[14]=g,e[15]=w}function F(e,t){R(e,t,t)}function D(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)F(o,o),2!==n&&4!==n&&R(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function I(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)F(o,o),1!==n&&R(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function W(e,r,n){var o,i,a=new Uint8Array(32),s=new Float64Array(80),c=t(),f=t(),l=t(),d=t(),h=t(),p=t();for(i=0;i<31;i++)a[i]=r[i];for(a[31]=127&r[31]|64,a[0]&=248,S(s,n),i=0;i<16;i++)f[i]=s[i],d[i]=c[i]=l[i]=0;for(c[0]=d[0]=1,i=254;i>=0;--i)H(c,f,o=a[i>>>3]>>>(7&i)&1),H(l,d,o),B(h,c,l),Z(c,c,l),B(l,f,d),Z(f,f,d),F(d,h),F(p,c),R(c,l,c),R(l,f,h),B(h,c,l),Z(c,c,l),F(f,c),Z(l,d,p),R(c,l,u),B(c,c,d),R(l,l,c),R(c,d,p),R(d,f,s),F(f,h),H(c,f,o),H(l,d,o);for(i=0;i<16;i++)s[i+16]=c[i],s[i+32]=l[i],s[i+48]=f[i],s[i+64]=d[i];var y=s.subarray(32),v=s.subarray(16);return D(y,y),R(v,v,y),L(e,v),0}function q(e,t){return W(e,t,i)}function V(e,t){return n(t,32),q(e,t)}function G(e,t,r){var n=new Uint8Array(32);return W(n,r,t),g(e,o,n,w)}M.prototype.blocks=function(e,t,r){for(var n,o,i,a,s,u,c,f,l,d,h,p,y,v,b,m,g,w,x,P=this.fin?0:2048,j=this.h[0],O=this.h[1],M=this.h[2],k=this.h[3],T=this.h[4],z=this.h[5],N=this.h[6],E=this.h[7],A=this.h[8],H=this.h[9],L=this.r[0],U=this.r[1],X=this.r[2],S=this.r[3],B=this.r[4],Z=this.r[5],R=this.r[6],F=this.r[7],D=this.r[8],I=this.r[9];r>=16;)d=l=0,d+=(j+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*L,d+=(O+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*I),d+=(M+=8191&(o>>>10|(i=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*D),d+=(k+=8191&(i>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),l=(d+=(T+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*R))>>>13,d&=8191,d+=(z+=s>>>1&8191)*(5*Z),d+=(N+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*B),d+=(E+=8191&(u>>>11|(c=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*S),d+=(A+=8191&(c>>>8|(f=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*X),h=l+=(d+=(H+=f>>>5|P)*(5*U))>>>13,h+=j*U,h+=O*L,h+=M*(5*I),h+=k*(5*D),l=(h+=T*(5*F))>>>13,h&=8191,h+=z*(5*R),h+=N*(5*Z),h+=E*(5*B),h+=A*(5*S),l+=(h+=H*(5*X))>>>13,h&=8191,p=l,p+=j*X,p+=O*U,p+=M*L,p+=k*(5*I),l=(p+=T*(5*D))>>>13,p&=8191,p+=z*(5*F),p+=N*(5*R),p+=E*(5*Z),p+=A*(5*B),y=l+=(p+=H*(5*S))>>>13,y+=j*S,y+=O*X,y+=M*U,y+=k*L,l=(y+=T*(5*I))>>>13,y&=8191,y+=z*(5*D),y+=N*(5*F),y+=E*(5*R),y+=A*(5*Z),v=l+=(y+=H*(5*B))>>>13,v+=j*B,v+=O*S,v+=M*X,v+=k*U,l=(v+=T*L)>>>13,v&=8191,v+=z*(5*I),v+=N*(5*D),v+=E*(5*F),v+=A*(5*R),b=l+=(v+=H*(5*Z))>>>13,b+=j*Z,b+=O*B,b+=M*S,b+=k*X,l=(b+=T*U)>>>13,b&=8191,b+=z*L,b+=N*(5*I),b+=E*(5*D),b+=A*(5*F),m=l+=(b+=H*(5*R))>>>13,m+=j*R,m+=O*Z,m+=M*B,m+=k*S,l=(m+=T*X)>>>13,m&=8191,m+=z*U,m+=N*L,m+=E*(5*I),m+=A*(5*D),g=l+=(m+=H*(5*F))>>>13,g+=j*F,g+=O*R,g+=M*Z,g+=k*B,l=(g+=T*S)>>>13,g&=8191,g+=z*X,g+=N*U,g+=E*L,g+=A*(5*I),w=l+=(g+=H*(5*D))>>>13,w+=j*D,w+=O*F,w+=M*R,w+=k*Z,l=(w+=T*B)>>>13,w&=8191,w+=z*S,w+=N*X,w+=E*U,w+=A*L,x=l+=(w+=H*(5*I))>>>13,x+=j*I,x+=O*D,x+=M*F,x+=k*R,l=(x+=T*Z)>>>13,x&=8191,x+=z*B,x+=N*S,x+=E*X,x+=A*U,j=d=8191&(l=(l=((l+=(x+=H*L)>>>13)<<2)+l|0)+(d&=8191)|0),O=h+=l>>>=13,M=p&=8191,k=y&=8191,T=v&=8191,z=b&=8191,N=m&=8191,E=g&=8191,A=w&=8191,H=x&=8191,t+=16,r-=16;this.h[0]=j,this.h[1]=O,this.h[2]=M,this.h[3]=k,this.h[4]=T,this.h[5]=z,this.h[6]=N,this.h[7]=E,this.h[8]=A,this.h[9]=H},M.prototype.finish=function(e,t){var r,n,o,i,a=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=r,r=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,a[0]=this.h[0]+5,r=a[0]>>>13,a[0]&=8191,i=1;i<10;i++)a[i]=this.h[i]+r,r=a[i]>>>13,a[i]&=8191;for(a[9]-=8192,n=(1^r)-1,i=0;i<10;i++)a[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|a[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},M.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var K=z,Y=N,C=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,r,n){for(var o,i,a,s,u,c,f,l,d,h,p,y,v,b,m,g,w,x,P,j,O,M,k,T,z,N,E=new Int32Array(16),A=new Int32Array(16),H=e[0],L=e[1],U=e[2],X=e[3],S=e[4],B=e[5],Z=e[6],R=e[7],F=t[0],D=t[1],I=t[2],W=t[3],q=t[4],V=t[5],G=t[6],K=t[7],Y=0;n>=128;){for(P=0;P<16;P++)j=8*P+Y,E[P]=r[j+0]<<24|r[j+1]<<16|r[j+2]<<8|r[j+3],A[P]=r[j+4]<<24|r[j+5]<<16|r[j+6]<<8|r[j+7];for(P=0;P<80;P++)if(o=H,i=L,a=U,s=X,u=S,c=B,f=Z,d=F,h=D,p=I,y=W,v=q,b=V,m=G,k=65535&(M=K),T=M>>>16,z=65535&(O=R),N=O>>>16,k+=65535&(M=(q>>>14|S<<18)^(q>>>18|S<<14)^(S>>>9|q<<23)),T+=M>>>16,z+=65535&(O=(S>>>14|q<<18)^(S>>>18|q<<14)^(q>>>9|S<<23)),N+=O>>>16,k+=65535&(M=q&V^~q&G),T+=M>>>16,z+=65535&(O=S&B^~S&Z),N+=O>>>16,k+=65535&(M=C[2*P+1]),T+=M>>>16,z+=65535&(O=C[2*P]),N+=O>>>16,O=E[P%16],T+=(M=A[P%16])>>>16,z+=65535&O,N+=O>>>16,z+=(T+=(k+=65535&M)>>>16)>>>16,k=65535&(M=x=65535&k|T<<16),T=M>>>16,z=65535&(O=w=65535&z|(N+=z>>>16)<<16),N=O>>>16,k+=65535&(M=(F>>>28|H<<4)^(H>>>2|F<<30)^(H>>>7|F<<25)),T+=M>>>16,z+=65535&(O=(H>>>28|F<<4)^(F>>>2|H<<30)^(F>>>7|H<<25)),N+=O>>>16,T+=(M=F&D^F&I^D&I)>>>16,z+=65535&(O=H&L^H&U^L&U),N+=O>>>16,l=65535&(z+=(T+=(k+=65535&M)>>>16)>>>16)|(N+=z>>>16)<<16,g=65535&k|T<<16,k=65535&(M=y),T=M>>>16,z=65535&(O=s),N=O>>>16,T+=(M=x)>>>16,z+=65535&(O=w),N+=O>>>16,L=o,U=i,X=a,S=s=65535&(z+=(T+=(k+=65535&M)>>>16)>>>16)|(N+=z>>>16)<<16,B=u,Z=c,R=f,H=l,D=d,I=h,W=p,q=y=65535&k|T<<16,V=v,G=b,K=m,F=g,P%16==15)for(j=0;j<16;j++)O=E[j],k=65535&(M=A[j]),T=M>>>16,z=65535&O,N=O>>>16,O=E[(j+9)%16],k+=65535&(M=A[(j+9)%16]),T+=M>>>16,z+=65535&O,N+=O>>>16,w=E[(j+1)%16],k+=65535&(M=((x=A[(j+1)%16])>>>1|w<<31)^(x>>>8|w<<24)^(x>>>7|w<<25)),T+=M>>>16,z+=65535&(O=(w>>>1|x<<31)^(w>>>8|x<<24)^w>>>7),N+=O>>>16,w=E[(j+14)%16],T+=(M=((x=A[(j+14)%16])>>>19|w<<13)^(w>>>29|x<<3)^(x>>>6|w<<26))>>>16,z+=65535&(O=(w>>>19|x<<13)^(x>>>29|w<<3)^w>>>6),N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,E[j]=65535&z|N<<16,A[j]=65535&k|T<<16;k=65535&(M=F),T=M>>>16,z=65535&(O=H),N=O>>>16,O=e[0],T+=(M=t[0])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[0]=H=65535&z|N<<16,t[0]=F=65535&k|T<<16,k=65535&(M=D),T=M>>>16,z=65535&(O=L),N=O>>>16,O=e[1],T+=(M=t[1])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[1]=L=65535&z|N<<16,t[1]=D=65535&k|T<<16,k=65535&(M=I),T=M>>>16,z=65535&(O=U),N=O>>>16,O=e[2],T+=(M=t[2])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[2]=U=65535&z|N<<16,t[2]=I=65535&k|T<<16,k=65535&(M=W),T=M>>>16,z=65535&(O=X),N=O>>>16,O=e[3],T+=(M=t[3])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[3]=X=65535&z|N<<16,t[3]=W=65535&k|T<<16,k=65535&(M=q),T=M>>>16,z=65535&(O=S),N=O>>>16,O=e[4],T+=(M=t[4])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[4]=S=65535&z|N<<16,t[4]=q=65535&k|T<<16,k=65535&(M=V),T=M>>>16,z=65535&(O=B),N=O>>>16,O=e[5],T+=(M=t[5])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[5]=B=65535&z|N<<16,t[5]=V=65535&k|T<<16,k=65535&(M=G),T=M>>>16,z=65535&(O=Z),N=O>>>16,O=e[6],T+=(M=t[6])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[6]=Z=65535&z|N<<16,t[6]=G=65535&k|T<<16,k=65535&(M=K),T=M>>>16,z=65535&(O=R),N=O>>>16,O=e[7],T+=(M=t[7])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[7]=R=65535&z|N<<16,t[7]=K=65535&k|T<<16,Y+=128,n-=128}return n}function Q(e,t,r){var n,o=new Int32Array(8),i=new Int32Array(8),a=new Uint8Array(256),s=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,J(o,i,t,r),r%=128,n=0;n<r;n++)a[n]=t[s-r+n];for(a[r]=128,a[(r=256-128*(r<112?1:0))-9]=0,p(a,r-8,s/536870912|0,s<<3),J(o,i,a,r),n=0;n<8;n++)p(e,8*n,o[n],i[n]);return 0}function _(e,r){var n=t(),o=t(),i=t(),a=t(),s=t(),u=t(),c=t(),l=t(),d=t();Z(n,e[1],e[0]),Z(d,r[1],r[0]),R(n,n,d),B(o,e[0],e[1]),B(d,r[0],r[1]),R(o,o,d),R(i,e[3],r[3]),R(i,i,f),R(a,e[2],r[2]),B(a,a,a),Z(s,o,n),Z(u,a,i),B(c,a,i),B(l,o,n),R(e[0],s,u),R(e[1],l,c),R(e[2],c,u),R(e[3],s,l)}function $(e,t,r){var n;for(n=0;n<4;n++)H(e[n],t[n],r)}function ee(e,r){var n=t(),o=t(),i=t();D(i,r[2]),R(n,r[0],i),R(o,r[1],i),L(e,o),e[31]^=X(n)<<7}function te(e,t,r){var n,o;for(E(e[0],a),E(e[1],s),E(e[2],s),E(e[3],a),o=255;o>=0;--o)$(e,t,n=r[o/8|0]>>(7&o)&1),_(t,e),_(e,e),$(e,t,n)}function re(e,r){var n=[t(),t(),t(),t()];E(n[0],l),E(n[1],d),E(n[2],s),R(n[3],l,d),te(e,n,r)}function ne(e,r,o){var i,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(o||n(r,32),Q(a,r,32),a[0]&=248,a[31]&=127,a[31]|=64,re(s,a),ee(e,s),i=0;i<32;i++)r[i+32]=e[i];return 0}var oe=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ie(e,t){var r,n,o,i;for(n=63;n>=32;--n){for(r=0,o=n-32,i=n-12;o<i;++o)t[o]+=r-16*t[n]*oe[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*oe[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*oe[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ie(e,r)}function se(e,r,n,o){var i,a,s=new Uint8Array(64),u=new Uint8Array(64),c=new Uint8Array(64),f=new Float64Array(64),l=[t(),t(),t(),t()];Q(s,o,32),s[0]&=248,s[31]&=127,s[31]|=64;var d=n+64;for(i=0;i<n;i++)e[64+i]=r[i];for(i=0;i<32;i++)e[32+i]=s[32+i];for(Q(c,e.subarray(32),n+32),ae(c),re(l,c),ee(e,l),i=32;i<64;i++)e[i]=o[i];for(Q(u,e,n+64),ae(u),i=0;i<64;i++)f[i]=0;for(i=0;i<32;i++)f[i]=c[i];for(i=0;i<32;i++)for(a=0;a<32;a++)f[i+a]+=u[i]*s[a];return ie(e.subarray(32),f),d}function ue(e,r,n,o){var i,u=new Uint8Array(32),f=new Uint8Array(64),l=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),i=t(),u=t(),f=t(),l=t(),d=t();return E(e[2],s),S(e[1],r),F(i,e[1]),R(u,i,c),Z(i,i,e[2]),B(u,e[2],u),F(f,u),F(l,f),R(d,l,f),R(n,d,i),R(n,n,u),I(n,n),R(n,n,i),R(n,n,u),R(n,n,u),R(e[0],n,u),F(o,e[0]),R(o,o,u),U(o,i)&&R(e[0],e[0],h),F(o,e[0]),R(o,o,u),U(o,i)?-1:(X(e[0])===r[31]>>7&&Z(e[0],a,e[0]),R(e[3],e[0],e[1]),0)}(d,o))return-1;for(i=0;i<n;i++)e[i]=r[i];for(i=0;i<32;i++)e[i+32]=o[i];if(Q(f,e,n),ae(f),te(l,d,f),re(d,r.subarray(32)),_(l,d),ee(u,l),n-=64,b(r,0,u,0)){for(i=0;i<n;i++)e[i]=0;return-1}for(i=0;i<n;i++)e[i]=r[i+64];return n}var ce,fe=64,le=32,de=64;function he(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function ye(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:O,crypto_stream:j,crypto_stream_salsa20_xor:x,crypto_stream_salsa20:P,crypto_onetimeauth:k,crypto_onetimeauth_verify:T,crypto_verify_16:v,crypto_verify_32:b,crypto_secretbox:z,crypto_secretbox_open:N,crypto_scalarmult:W,crypto_scalarmult_base:q,crypto_box_beforenm:G,crypto_box_afternm:K,crypto_box:function(e,t,r,n,o,i){var a=new Uint8Array(32);return G(a,o,i),K(e,t,r,n,a)},crypto_box_open:function(e,t,r,n,o,i){var a=new Uint8Array(32);return G(a,o,i),Y(e,t,r,n,a)},crypto_box_keypair:V,crypto_hash:Q,crypto_sign:se,crypto_sign_keypair:ne,crypto_sign_open:ue,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:fe,crypto_sign_PUBLICKEYBYTES:le,crypto_sign_SECRETKEYBYTES:de,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:oe,pack25519:L,unpack25519:S,M:R,A:B,S:F,Z,pow2523:I,add:_,set25519:E,modL:ie,scalarmult:te,scalarbase:re},e.randomBytes=function(e){var t=new Uint8Array(e);return n(t,e),t},e.secretbox=function(e,t,r){pe(e,t,r),he(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+32]=e[i];return z(o,n,n.length,t,r),o.subarray(16)},e.secretbox.open=function(e,t,r){pe(e,t,r),he(r,t);for(var n=new Uint8Array(16+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+16]=e[i];return n.length<32||0!==N(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return W(r,e,t),r},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return q(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox(t,r,i)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return G(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox.open(t,r,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return V(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return q(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==de)throw new Error("bad secret key size");var r=new Uint8Array(fe+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(pe(e,t),t.length!==le)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ue(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=r[i];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(fe),i=0;i<o.length;i++)o[i]=n[i];return o},e.sign.detached.verify=function(e,t,r){if(pe(e,t,r),t.length!==fe)throw new Error("bad signature size");if(r.length!==le)throw new Error("bad public key size");var n,o=new Uint8Array(fe+e.length),i=new Uint8Array(fe+e.length);for(n=0;n<fe;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+fe]=e[n];return ue(i,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(le),t=new Uint8Array(de);return ne(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==de)throw new Error("bad secret key size");for(var t=new Uint8Array(le),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(le),r=new Uint8Array(de),n=0;n<32;n++)r[n]=e[n];return ne(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=le,e.sign.secretKeyLength=de,e.sign.seedLength=32,e.sign.signatureLength=fe,e.hash=function(e){pe(e);var t=new Uint8Array(64);return Q(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===y(e,0,t,0,e.length)},e.setPRNG=function(e){n=e},(ce="undefined"!=typeof self?self.crypto||self.msCrypto:null)&&ce.getRandomValues?e.setPRNG((function(e,t){var r,n=new Uint8Array(t);for(r=0;r<t;r+=65536)ce.getRandomValues(n.subarray(r,r+Math.min(t-r,65536)));for(r=0;r<t;r++)e[r]=n[r];ye(n)})):(ce=r(3399))&&ce.randomBytes&&e.setPRNG((function(e,t){var r,n=ce.randomBytes(t);for(r=0;r<t;r++)e[r]=n[r];ye(n)}))}(e.exports?e.exports:self.nacl=self.nacl||{})},3158:e=>{"use strict";e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},5111:e=>{"use strict";e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},8173:(e,t,r)=>{"use strict";var n=r(3158);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},4863:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},1788:e=>{"use strict";e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},3591:e=>{"use strict";e.exports=function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}},e.exports.__esModule=!0,e.exports.default=e.exports},3236:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},8380:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},8169:(e,t,r)=>{"use strict";var n=r(5111),o=r(3591),i=r(1113),a=r(3236);e.exports=function(e,t){return n(e)||o(e,t)||i(e,t)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},5041:(e,t,r)=>{"use strict";var n=r(8173),o=r(1788),i=r(1113),a=r(8380);e.exports=function(e){return n(e)||o(e)||i(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},4771:e=>{"use strict";function t(r){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(r)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},1113:(e,t,r)=>{"use strict";var n=r(3158);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},2780:(e,t,r)=>{"use strict";e=r.nmd(e);var n=r(4863)(r(4771));!function(e,t){function o(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function a(e,t,r){if(a.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var s;"object"===(0,n.default)(e)?e.exports=a:(void 0).BN=a,a.BN=a,a.wordSize=26;try{s="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(573).Buffer}catch(e){}function u(e,t){var r=e.charCodeAt(t);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void o(!1,"Invalid character in "+e)}function c(e,t,r){var n=u(e,r);return r-1>=t&&(n|=u(e,r-1)<<4),n}function f(e,t,r,n){for(var i=0,a=0,s=Math.min(e.length,r),u=t;u<s;u++){var c=e.charCodeAt(u)-48;i*=n,a=c>=49?c-49+10:c>=17?c-17+10:c,o(c>=0&&a<n,"Invalid character"),i+=a}return i}function l(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(a.isBN=function(e){return e instanceof a||null!==e&&"object"===(0,n.default)(e)&&e.constructor.wordSize===a.wordSize&&Array.isArray(e.words)},a.max=function(e,t){return e.cmp(t)>0?e:t},a.min=function(e,t){return e.cmp(t)<0?e:t},a.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"===(0,n.default)(e))return this._initArray(e,t,r);"hex"===t&&(t=16),o(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,r):(this._parseBase(e,t,i),"le"===r&&this._initArray(this.toArray(),t,r)))},a.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(o(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r)},a.prototype._initArray=function(e,t,r){if(o("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,a,s=0;if("be"===r)for(n=e.length-1,i=0;n>=0;n-=3)a=e[n]|e[n-1]<<8|e[n-2]<<16,this.words[i]|=a<<s&67108863,this.words[i+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,i++);else if("le"===r)for(n=0,i=0;n<e.length;n+=3)a=e[n]|e[n+1]<<8|e[n+2]<<16,this.words[i]|=a<<s&67108863,this.words[i+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,i++);return this._strip()},a.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var o,i=0,a=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)o=c(e,t,n)<<i,this.words[a]|=67108863&o,i>=18?(i-=18,a+=1,this.words[a]|=o>>>26):i+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)o=c(e,t,n)<<i,this.words[a]|=67108863&o,i>=18?(i-=18,a+=1,this.words[a]|=o>>>26):i+=8;this._strip()},a.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,o=1;o<=67108863;o*=t)n++;n--,o=o/t|0;for(var i=e.length-r,a=i%n,s=Math.min(i,i-a)+r,u=0,c=r;c<s;c+=n)u=f(e,c,c+n,t),this.imuln(o),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==a){var l=1;for(u=f(e,c,e.length,t),c=0;c<a;c++)l*=t;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},a.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},a.prototype._move=function(e){l(e,this)},a.prototype.clone=function(){var e=new a(null);return this.copy(e),e},a.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},a.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},a.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{a.prototype[Symbol.for("nodejs.util.inspect.custom")]=d}catch(e){a.prototype.inspect=d}else a.prototype.inspect=d;function d(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],p=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],y=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function v(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var o=0|e.words[0],i=0|t.words[0],a=o*i,s=67108863&a,u=a/67108864|0;r.words[0]=s;for(var c=1;c<n;c++){for(var f=u>>>26,l=67108863&u,d=Math.min(c,t.length-1),h=Math.max(0,c-e.length+1);h<=d;h++){var p=c-h|0;f+=(a=(o=0|e.words[p])*(i=0|t.words[h])+l)/67108864|0,l=67108863&a}r.words[c]=0|l,u=0|f}return 0!==u?r.words[c]=0|u:r.length--,r._strip()}a.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||"hex"===e){r="";for(var n=0,i=0,a=0;a<this.length;a++){var s=this.words[a],u=(16777215&(s<<n|i)).toString(16);r=0!=(i=s>>>24-n&16777215)||a!==this.length-1?h[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,a--)}for(0!==i&&(r=i.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var c=p[e],f=y[e];r="";var l=this.clone();for(l.negative=0;!l.isZero();){var d=l.modrn(f).toString(e);r=(l=l.idivn(f)).isZero()?d+r:h[c-d.length]+d+r}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}o(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&o(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},a.prototype.toJSON=function(){return this.toString(16,2)},s&&(a.prototype.toBuffer=function(e,t){return this.toArrayLike(s,e,t)}),a.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},a.prototype.toArrayLike=function(e,t,r){this._strip();var n=this.byteLength(),i=r||Math.max(1,n);o(n<=i,"byte array longer than desired length"),o(i>0,"Requested array length <= 0");var a=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,i);return this["_toArrayLike"+("le"===t?"LE":"BE")](a,n),a},a.prototype._toArrayLikeLE=function(e,t){for(var r=0,n=0,o=0,i=0;o<this.length;o++){var a=this.words[o]<<i|n;e[r++]=255&a,r<e.length&&(e[r++]=a>>8&255),r<e.length&&(e[r++]=a>>16&255),6===i?(r<e.length&&(e[r++]=a>>24&255),n=0,i=0):(n=a>>>24,i+=2)}if(r<e.length)for(e[r++]=n;r<e.length;)e[r++]=0},a.prototype._toArrayLikeBE=function(e,t){for(var r=e.length-1,n=0,o=0,i=0;o<this.length;o++){var a=this.words[o]<<i|n;e[r--]=255&a,r>=0&&(e[r--]=a>>8&255),r>=0&&(e[r--]=a>>16&255),6===i?(r>=0&&(e[r--]=a>>24&255),n=0,i=0):(n=a>>>24,i+=2)}if(r>=0)for(e[r--]=n;r>=0;)e[r--]=0},Math.clz32?a.prototype._countBits=function(e){return 32-Math.clz32(e)}:a.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},a.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},a.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},a.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return 0!==this.negative},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},a.prototype.ior=function(e){return o(0==(this.negative|e.negative)),this.iuor(e)},a.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},a.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},a.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this._strip()},a.prototype.iand=function(e){return o(0==(this.negative|e.negative)),this.iuand(e)},a.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},a.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},a.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this._strip()},a.prototype.ixor=function(e){return o(0==(this.negative|e.negative)),this.iuxor(e)},a.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},a.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},a.prototype.inotn=function(e){o("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var n=0;n<t;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this._strip()},a.prototype.notn=function(e){return this.clone().inotn(e)},a.prototype.setn=function(e,t){o("number"==typeof e&&e>=0);var r=e/26|0,n=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<n:this.words[r]&~(1<<n),this._strip()},a.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var o=0,i=0;i<n.length;i++)t=(0|r.words[i])+(0|n.words[i])+o,this.words[i]=67108863&t,o=t>>>26;for(;0!==o&&i<r.length;i++)t=(0|r.words[i])+o,this.words[i]=67108863&t,o=t>>>26;if(this.length=r.length,0!==o)this.words[this.length]=o,this.length++;else if(r!==this)for(;i<r.length;i++)this.words[i]=r.words[i];return this},a.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},a.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,o=this.cmp(e);if(0===o)return this.negative=0,this.length=1,this.words[0]=0,this;o>0?(r=this,n=e):(r=e,n=this);for(var i=0,a=0;a<n.length;a++)i=(t=(0|r.words[a])-(0|n.words[a])+i)>>26,this.words[a]=67108863&t;for(;0!==i&&a<r.length;a++)i=(t=(0|r.words[a])+i)>>26,this.words[a]=67108863&t;if(0===i&&a<r.length&&r!==this)for(;a<r.length;a++)this.words[a]=r.words[a];return this.length=Math.max(this.length,a),r!==this&&(this.negative=1),this._strip()},a.prototype.sub=function(e){return this.clone().isub(e)};var b=function(e,t,r){var n,o,i,a=e.words,s=t.words,u=r.words,c=0,f=0|a[0],l=8191&f,d=f>>>13,h=0|a[1],p=8191&h,y=h>>>13,v=0|a[2],b=8191&v,m=v>>>13,g=0|a[3],w=8191&g,x=g>>>13,P=0|a[4],j=8191&P,O=P>>>13,M=0|a[5],k=8191&M,T=M>>>13,z=0|a[6],N=8191&z,E=z>>>13,A=0|a[7],H=8191&A,L=A>>>13,U=0|a[8],X=8191&U,S=U>>>13,B=0|a[9],Z=8191&B,R=B>>>13,F=0|s[0],D=8191&F,I=F>>>13,W=0|s[1],q=8191&W,V=W>>>13,G=0|s[2],K=8191&G,Y=G>>>13,C=0|s[3],J=8191&C,Q=C>>>13,_=0|s[4],$=8191&_,ee=_>>>13,te=0|s[5],re=8191&te,ne=te>>>13,oe=0|s[6],ie=8191&oe,ae=oe>>>13,se=0|s[7],ue=8191&se,ce=se>>>13,fe=0|s[8],le=8191&fe,de=fe>>>13,he=0|s[9],pe=8191&he,ye=he>>>13;r.negative=e.negative^t.negative,r.length=19;var ve=(c+(n=Math.imul(l,D))|0)+((8191&(o=(o=Math.imul(l,I))+Math.imul(d,D)|0))<<13)|0;c=((i=Math.imul(d,I))+(o>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(p,D),o=(o=Math.imul(p,I))+Math.imul(y,D)|0,i=Math.imul(y,I);var be=(c+(n=n+Math.imul(l,q)|0)|0)+((8191&(o=(o=o+Math.imul(l,V)|0)+Math.imul(d,q)|0))<<13)|0;c=((i=i+Math.imul(d,V)|0)+(o>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(b,D),o=(o=Math.imul(b,I))+Math.imul(m,D)|0,i=Math.imul(m,I),n=n+Math.imul(p,q)|0,o=(o=o+Math.imul(p,V)|0)+Math.imul(y,q)|0,i=i+Math.imul(y,V)|0;var me=(c+(n=n+Math.imul(l,K)|0)|0)+((8191&(o=(o=o+Math.imul(l,Y)|0)+Math.imul(d,K)|0))<<13)|0;c=((i=i+Math.imul(d,Y)|0)+(o>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(w,D),o=(o=Math.imul(w,I))+Math.imul(x,D)|0,i=Math.imul(x,I),n=n+Math.imul(b,q)|0,o=(o=o+Math.imul(b,V)|0)+Math.imul(m,q)|0,i=i+Math.imul(m,V)|0,n=n+Math.imul(p,K)|0,o=(o=o+Math.imul(p,Y)|0)+Math.imul(y,K)|0,i=i+Math.imul(y,Y)|0;var ge=(c+(n=n+Math.imul(l,J)|0)|0)+((8191&(o=(o=o+Math.imul(l,Q)|0)+Math.imul(d,J)|0))<<13)|0;c=((i=i+Math.imul(d,Q)|0)+(o>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(j,D),o=(o=Math.imul(j,I))+Math.imul(O,D)|0,i=Math.imul(O,I),n=n+Math.imul(w,q)|0,o=(o=o+Math.imul(w,V)|0)+Math.imul(x,q)|0,i=i+Math.imul(x,V)|0,n=n+Math.imul(b,K)|0,o=(o=o+Math.imul(b,Y)|0)+Math.imul(m,K)|0,i=i+Math.imul(m,Y)|0,n=n+Math.imul(p,J)|0,o=(o=o+Math.imul(p,Q)|0)+Math.imul(y,J)|0,i=i+Math.imul(y,Q)|0;var we=(c+(n=n+Math.imul(l,$)|0)|0)+((8191&(o=(o=o+Math.imul(l,ee)|0)+Math.imul(d,$)|0))<<13)|0;c=((i=i+Math.imul(d,ee)|0)+(o>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(k,D),o=(o=Math.imul(k,I))+Math.imul(T,D)|0,i=Math.imul(T,I),n=n+Math.imul(j,q)|0,o=(o=o+Math.imul(j,V)|0)+Math.imul(O,q)|0,i=i+Math.imul(O,V)|0,n=n+Math.imul(w,K)|0,o=(o=o+Math.imul(w,Y)|0)+Math.imul(x,K)|0,i=i+Math.imul(x,Y)|0,n=n+Math.imul(b,J)|0,o=(o=o+Math.imul(b,Q)|0)+Math.imul(m,J)|0,i=i+Math.imul(m,Q)|0,n=n+Math.imul(p,$)|0,o=(o=o+Math.imul(p,ee)|0)+Math.imul(y,$)|0,i=i+Math.imul(y,ee)|0;var xe=(c+(n=n+Math.imul(l,re)|0)|0)+((8191&(o=(o=o+Math.imul(l,ne)|0)+Math.imul(d,re)|0))<<13)|0;c=((i=i+Math.imul(d,ne)|0)+(o>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(N,D),o=(o=Math.imul(N,I))+Math.imul(E,D)|0,i=Math.imul(E,I),n=n+Math.imul(k,q)|0,o=(o=o+Math.imul(k,V)|0)+Math.imul(T,q)|0,i=i+Math.imul(T,V)|0,n=n+Math.imul(j,K)|0,o=(o=o+Math.imul(j,Y)|0)+Math.imul(O,K)|0,i=i+Math.imul(O,Y)|0,n=n+Math.imul(w,J)|0,o=(o=o+Math.imul(w,Q)|0)+Math.imul(x,J)|0,i=i+Math.imul(x,Q)|0,n=n+Math.imul(b,$)|0,o=(o=o+Math.imul(b,ee)|0)+Math.imul(m,$)|0,i=i+Math.imul(m,ee)|0,n=n+Math.imul(p,re)|0,o=(o=o+Math.imul(p,ne)|0)+Math.imul(y,re)|0,i=i+Math.imul(y,ne)|0;var Pe=(c+(n=n+Math.imul(l,ie)|0)|0)+((8191&(o=(o=o+Math.imul(l,ae)|0)+Math.imul(d,ie)|0))<<13)|0;c=((i=i+Math.imul(d,ae)|0)+(o>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(H,D),o=(o=Math.imul(H,I))+Math.imul(L,D)|0,i=Math.imul(L,I),n=n+Math.imul(N,q)|0,o=(o=o+Math.imul(N,V)|0)+Math.imul(E,q)|0,i=i+Math.imul(E,V)|0,n=n+Math.imul(k,K)|0,o=(o=o+Math.imul(k,Y)|0)+Math.imul(T,K)|0,i=i+Math.imul(T,Y)|0,n=n+Math.imul(j,J)|0,o=(o=o+Math.imul(j,Q)|0)+Math.imul(O,J)|0,i=i+Math.imul(O,Q)|0,n=n+Math.imul(w,$)|0,o=(o=o+Math.imul(w,ee)|0)+Math.imul(x,$)|0,i=i+Math.imul(x,ee)|0,n=n+Math.imul(b,re)|0,o=(o=o+Math.imul(b,ne)|0)+Math.imul(m,re)|0,i=i+Math.imul(m,ne)|0,n=n+Math.imul(p,ie)|0,o=(o=o+Math.imul(p,ae)|0)+Math.imul(y,ie)|0,i=i+Math.imul(y,ae)|0;var je=(c+(n=n+Math.imul(l,ue)|0)|0)+((8191&(o=(o=o+Math.imul(l,ce)|0)+Math.imul(d,ue)|0))<<13)|0;c=((i=i+Math.imul(d,ce)|0)+(o>>>13)|0)+(je>>>26)|0,je&=67108863,n=Math.imul(X,D),o=(o=Math.imul(X,I))+Math.imul(S,D)|0,i=Math.imul(S,I),n=n+Math.imul(H,q)|0,o=(o=o+Math.imul(H,V)|0)+Math.imul(L,q)|0,i=i+Math.imul(L,V)|0,n=n+Math.imul(N,K)|0,o=(o=o+Math.imul(N,Y)|0)+Math.imul(E,K)|0,i=i+Math.imul(E,Y)|0,n=n+Math.imul(k,J)|0,o=(o=o+Math.imul(k,Q)|0)+Math.imul(T,J)|0,i=i+Math.imul(T,Q)|0,n=n+Math.imul(j,$)|0,o=(o=o+Math.imul(j,ee)|0)+Math.imul(O,$)|0,i=i+Math.imul(O,ee)|0,n=n+Math.imul(w,re)|0,o=(o=o+Math.imul(w,ne)|0)+Math.imul(x,re)|0,i=i+Math.imul(x,ne)|0,n=n+Math.imul(b,ie)|0,o=(o=o+Math.imul(b,ae)|0)+Math.imul(m,ie)|0,i=i+Math.imul(m,ae)|0,n=n+Math.imul(p,ue)|0,o=(o=o+Math.imul(p,ce)|0)+Math.imul(y,ue)|0,i=i+Math.imul(y,ce)|0;var Oe=(c+(n=n+Math.imul(l,le)|0)|0)+((8191&(o=(o=o+Math.imul(l,de)|0)+Math.imul(d,le)|0))<<13)|0;c=((i=i+Math.imul(d,de)|0)+(o>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(Z,D),o=(o=Math.imul(Z,I))+Math.imul(R,D)|0,i=Math.imul(R,I),n=n+Math.imul(X,q)|0,o=(o=o+Math.imul(X,V)|0)+Math.imul(S,q)|0,i=i+Math.imul(S,V)|0,n=n+Math.imul(H,K)|0,o=(o=o+Math.imul(H,Y)|0)+Math.imul(L,K)|0,i=i+Math.imul(L,Y)|0,n=n+Math.imul(N,J)|0,o=(o=o+Math.imul(N,Q)|0)+Math.imul(E,J)|0,i=i+Math.imul(E,Q)|0,n=n+Math.imul(k,$)|0,o=(o=o+Math.imul(k,ee)|0)+Math.imul(T,$)|0,i=i+Math.imul(T,ee)|0,n=n+Math.imul(j,re)|0,o=(o=o+Math.imul(j,ne)|0)+Math.imul(O,re)|0,i=i+Math.imul(O,ne)|0,n=n+Math.imul(w,ie)|0,o=(o=o+Math.imul(w,ae)|0)+Math.imul(x,ie)|0,i=i+Math.imul(x,ae)|0,n=n+Math.imul(b,ue)|0,o=(o=o+Math.imul(b,ce)|0)+Math.imul(m,ue)|0,i=i+Math.imul(m,ce)|0,n=n+Math.imul(p,le)|0,o=(o=o+Math.imul(p,de)|0)+Math.imul(y,le)|0,i=i+Math.imul(y,de)|0;var Me=(c+(n=n+Math.imul(l,pe)|0)|0)+((8191&(o=(o=o+Math.imul(l,ye)|0)+Math.imul(d,pe)|0))<<13)|0;c=((i=i+Math.imul(d,ye)|0)+(o>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(Z,q),o=(o=Math.imul(Z,V))+Math.imul(R,q)|0,i=Math.imul(R,V),n=n+Math.imul(X,K)|0,o=(o=o+Math.imul(X,Y)|0)+Math.imul(S,K)|0,i=i+Math.imul(S,Y)|0,n=n+Math.imul(H,J)|0,o=(o=o+Math.imul(H,Q)|0)+Math.imul(L,J)|0,i=i+Math.imul(L,Q)|0,n=n+Math.imul(N,$)|0,o=(o=o+Math.imul(N,ee)|0)+Math.imul(E,$)|0,i=i+Math.imul(E,ee)|0,n=n+Math.imul(k,re)|0,o=(o=o+Math.imul(k,ne)|0)+Math.imul(T,re)|0,i=i+Math.imul(T,ne)|0,n=n+Math.imul(j,ie)|0,o=(o=o+Math.imul(j,ae)|0)+Math.imul(O,ie)|0,i=i+Math.imul(O,ae)|0,n=n+Math.imul(w,ue)|0,o=(o=o+Math.imul(w,ce)|0)+Math.imul(x,ue)|0,i=i+Math.imul(x,ce)|0,n=n+Math.imul(b,le)|0,o=(o=o+Math.imul(b,de)|0)+Math.imul(m,le)|0,i=i+Math.imul(m,de)|0;var ke=(c+(n=n+Math.imul(p,pe)|0)|0)+((8191&(o=(o=o+Math.imul(p,ye)|0)+Math.imul(y,pe)|0))<<13)|0;c=((i=i+Math.imul(y,ye)|0)+(o>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(Z,K),o=(o=Math.imul(Z,Y))+Math.imul(R,K)|0,i=Math.imul(R,Y),n=n+Math.imul(X,J)|0,o=(o=o+Math.imul(X,Q)|0)+Math.imul(S,J)|0,i=i+Math.imul(S,Q)|0,n=n+Math.imul(H,$)|0,o=(o=o+Math.imul(H,ee)|0)+Math.imul(L,$)|0,i=i+Math.imul(L,ee)|0,n=n+Math.imul(N,re)|0,o=(o=o+Math.imul(N,ne)|0)+Math.imul(E,re)|0,i=i+Math.imul(E,ne)|0,n=n+Math.imul(k,ie)|0,o=(o=o+Math.imul(k,ae)|0)+Math.imul(T,ie)|0,i=i+Math.imul(T,ae)|0,n=n+Math.imul(j,ue)|0,o=(o=o+Math.imul(j,ce)|0)+Math.imul(O,ue)|0,i=i+Math.imul(O,ce)|0,n=n+Math.imul(w,le)|0,o=(o=o+Math.imul(w,de)|0)+Math.imul(x,le)|0,i=i+Math.imul(x,de)|0;var Te=(c+(n=n+Math.imul(b,pe)|0)|0)+((8191&(o=(o=o+Math.imul(b,ye)|0)+Math.imul(m,pe)|0))<<13)|0;c=((i=i+Math.imul(m,ye)|0)+(o>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(Z,J),o=(o=Math.imul(Z,Q))+Math.imul(R,J)|0,i=Math.imul(R,Q),n=n+Math.imul(X,$)|0,o=(o=o+Math.imul(X,ee)|0)+Math.imul(S,$)|0,i=i+Math.imul(S,ee)|0,n=n+Math.imul(H,re)|0,o=(o=o+Math.imul(H,ne)|0)+Math.imul(L,re)|0,i=i+Math.imul(L,ne)|0,n=n+Math.imul(N,ie)|0,o=(o=o+Math.imul(N,ae)|0)+Math.imul(E,ie)|0,i=i+Math.imul(E,ae)|0,n=n+Math.imul(k,ue)|0,o=(o=o+Math.imul(k,ce)|0)+Math.imul(T,ue)|0,i=i+Math.imul(T,ce)|0,n=n+Math.imul(j,le)|0,o=(o=o+Math.imul(j,de)|0)+Math.imul(O,le)|0,i=i+Math.imul(O,de)|0;var ze=(c+(n=n+Math.imul(w,pe)|0)|0)+((8191&(o=(o=o+Math.imul(w,ye)|0)+Math.imul(x,pe)|0))<<13)|0;c=((i=i+Math.imul(x,ye)|0)+(o>>>13)|0)+(ze>>>26)|0,ze&=67108863,n=Math.imul(Z,$),o=(o=Math.imul(Z,ee))+Math.imul(R,$)|0,i=Math.imul(R,ee),n=n+Math.imul(X,re)|0,o=(o=o+Math.imul(X,ne)|0)+Math.imul(S,re)|0,i=i+Math.imul(S,ne)|0,n=n+Math.imul(H,ie)|0,o=(o=o+Math.imul(H,ae)|0)+Math.imul(L,ie)|0,i=i+Math.imul(L,ae)|0,n=n+Math.imul(N,ue)|0,o=(o=o+Math.imul(N,ce)|0)+Math.imul(E,ue)|0,i=i+Math.imul(E,ce)|0,n=n+Math.imul(k,le)|0,o=(o=o+Math.imul(k,de)|0)+Math.imul(T,le)|0,i=i+Math.imul(T,de)|0;var Ne=(c+(n=n+Math.imul(j,pe)|0)|0)+((8191&(o=(o=o+Math.imul(j,ye)|0)+Math.imul(O,pe)|0))<<13)|0;c=((i=i+Math.imul(O,ye)|0)+(o>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,n=Math.imul(Z,re),o=(o=Math.imul(Z,ne))+Math.imul(R,re)|0,i=Math.imul(R,ne),n=n+Math.imul(X,ie)|0,o=(o=o+Math.imul(X,ae)|0)+Math.imul(S,ie)|0,i=i+Math.imul(S,ae)|0,n=n+Math.imul(H,ue)|0,o=(o=o+Math.imul(H,ce)|0)+Math.imul(L,ue)|0,i=i+Math.imul(L,ce)|0,n=n+Math.imul(N,le)|0,o=(o=o+Math.imul(N,de)|0)+Math.imul(E,le)|0,i=i+Math.imul(E,de)|0;var Ee=(c+(n=n+Math.imul(k,pe)|0)|0)+((8191&(o=(o=o+Math.imul(k,ye)|0)+Math.imul(T,pe)|0))<<13)|0;c=((i=i+Math.imul(T,ye)|0)+(o>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(Z,ie),o=(o=Math.imul(Z,ae))+Math.imul(R,ie)|0,i=Math.imul(R,ae),n=n+Math.imul(X,ue)|0,o=(o=o+Math.imul(X,ce)|0)+Math.imul(S,ue)|0,i=i+Math.imul(S,ce)|0,n=n+Math.imul(H,le)|0,o=(o=o+Math.imul(H,de)|0)+Math.imul(L,le)|0,i=i+Math.imul(L,de)|0;var Ae=(c+(n=n+Math.imul(N,pe)|0)|0)+((8191&(o=(o=o+Math.imul(N,ye)|0)+Math.imul(E,pe)|0))<<13)|0;c=((i=i+Math.imul(E,ye)|0)+(o>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(Z,ue),o=(o=Math.imul(Z,ce))+Math.imul(R,ue)|0,i=Math.imul(R,ce),n=n+Math.imul(X,le)|0,o=(o=o+Math.imul(X,de)|0)+Math.imul(S,le)|0,i=i+Math.imul(S,de)|0;var He=(c+(n=n+Math.imul(H,pe)|0)|0)+((8191&(o=(o=o+Math.imul(H,ye)|0)+Math.imul(L,pe)|0))<<13)|0;c=((i=i+Math.imul(L,ye)|0)+(o>>>13)|0)+(He>>>26)|0,He&=67108863,n=Math.imul(Z,le),o=(o=Math.imul(Z,de))+Math.imul(R,le)|0,i=Math.imul(R,de);var Le=(c+(n=n+Math.imul(X,pe)|0)|0)+((8191&(o=(o=o+Math.imul(X,ye)|0)+Math.imul(S,pe)|0))<<13)|0;c=((i=i+Math.imul(S,ye)|0)+(o>>>13)|0)+(Le>>>26)|0,Le&=67108863;var Ue=(c+(n=Math.imul(Z,pe))|0)+((8191&(o=(o=Math.imul(Z,ye))+Math.imul(R,pe)|0))<<13)|0;return c=((i=Math.imul(R,ye))+(o>>>13)|0)+(Ue>>>26)|0,Ue&=67108863,u[0]=ve,u[1]=be,u[2]=me,u[3]=ge,u[4]=we,u[5]=xe,u[6]=Pe,u[7]=je,u[8]=Oe,u[9]=Me,u[10]=ke,u[11]=Te,u[12]=ze,u[13]=Ne,u[14]=Ee,u[15]=Ae,u[16]=He,u[17]=Le,u[18]=Ue,0!==c&&(u[19]=c,r.length++),r};function m(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,o=0,i=0;i<r.length-1;i++){var a=o;o=0;for(var s=67108863&n,u=Math.min(i,t.length-1),c=Math.max(0,i-e.length+1);c<=u;c++){var f=i-c,l=(0|e.words[f])*(0|t.words[c]),d=67108863&l;s=67108863&(d=d+s|0),o+=(a=(a=a+(l/67108864|0)|0)+(d>>>26)|0)>>>26,a&=67108863}r.words[i]=s,n=a,a=o}return 0!==n?r.words[i]=n:r.length--,r._strip()}function g(e,t,r){return m(e,t,r)}function w(e,t){this.x=e,this.y=t}Math.imul||(b=v),a.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?b(this,e,t):r<63?v(this,e,t):r<1024?m(this,e,t):g(this,e,t)},w.prototype.makeRBT=function(e){for(var t=new Array(e),r=a.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},w.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,o=0;o<t;o++)n|=(1&e)<<t-o-1,e>>=1;return n},w.prototype.permute=function(e,t,r,n,o,i){for(var a=0;a<i;a++)n[a]=t[e[a]],o[a]=r[e[a]]},w.prototype.transform=function(e,t,r,n,o,i){this.permute(i,e,t,r,n,o);for(var a=1;a<o;a<<=1)for(var s=a<<1,u=Math.cos(2*Math.PI/s),c=Math.sin(2*Math.PI/s),f=0;f<o;f+=s)for(var l=u,d=c,h=0;h<a;h++){var p=r[f+h],y=n[f+h],v=r[f+h+a],b=n[f+h+a],m=l*v-d*b;b=l*b+d*v,v=m,r[f+h]=p+v,n[f+h]=y+b,r[f+h+a]=p-v,n[f+h+a]=y-b,h!==s&&(m=u*l-c*d,d=u*d+c*l,l=m)}},w.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,o=0;for(r=r/2|0;r;r>>>=1)o++;return 1<<o+1+n},w.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var o=e[n];e[n]=e[r-n-1],e[r-n-1]=o,o=t[n],t[n]=-t[r-n-1],t[r-n-1]=-o}},w.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var o=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&o,r=o<67108864?0:o/67108864|0}return e},w.prototype.convert13b=function(e,t,r,n){for(var i=0,a=0;a<t;a++)i+=0|e[a],r[2*a]=8191&i,i>>>=13,r[2*a+1]=8191&i,i>>>=13;for(a=2*t;a<n;++a)r[a]=0;o(0===i),o(0==(-8192&i))},w.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},w.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),o=this.makeRBT(n),i=this.stub(n),a=new Array(n),s=new Array(n),u=new Array(n),c=new Array(n),f=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(e.words,e.length,a,n),this.convert13b(t.words,t.length,c,n),this.transform(a,i,s,u,n,o),this.transform(c,i,f,l,n,o);for(var h=0;h<n;h++){var p=s[h]*f[h]-u[h]*l[h];u[h]=s[h]*l[h]+u[h]*f[h],s[h]=p}return this.conjugate(s,u,n),this.transform(s,u,d,i,n,o),this.conjugate(d,i,n),this.normalize13b(d,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r._strip()},a.prototype.mul=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},a.prototype.mulf=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),g(this,e,t)},a.prototype.imul=function(e){return this.clone().mulTo(e,this)},a.prototype.imuln=function(e){var t=e<0;t&&(e=-e),o("number"==typeof e),o(e<67108864);for(var r=0,n=0;n<this.length;n++){var i=(0|this.words[n])*e,a=(67108863&i)+(67108863&r);r>>=26,r+=i/67108864|0,r+=a>>>26,this.words[n]=67108863&a}return 0!==r&&(this.words[n]=r,this.length++),t?this.ineg():this},a.prototype.muln=function(e){return this.clone().imuln(e)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,o=r%26;t[r]=e.words[n]>>>o&1}return t}(e);if(0===t.length)return new a(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var o=r.sqr();n<t.length;n++,o=o.sqr())0!==t[n]&&(r=r.mul(o));return r},a.prototype.iushln=function(e){o("number"==typeof e&&e>=0);var t,r=e%26,n=(e-r)/26,i=67108863>>>26-r<<26-r;if(0!==r){var a=0;for(t=0;t<this.length;t++){var s=this.words[t]&i,u=(0|this.words[t])-s<<r;this.words[t]=u|a,a=s>>>26-r}a&&(this.words[t]=a,this.length++)}if(0!==n){for(t=this.length-1;t>=0;t--)this.words[t+n]=this.words[t];for(t=0;t<n;t++)this.words[t]=0;this.length+=n}return this._strip()},a.prototype.ishln=function(e){return o(0===this.negative),this.iushln(e)},a.prototype.iushrn=function(e,t,r){var n;o("number"==typeof e&&e>=0),n=t?(t-t%26)/26:0;var i=e%26,a=Math.min((e-i)/26,this.length),s=67108863^67108863>>>i<<i,u=r;if(n-=a,n=Math.max(0,n),u){for(var c=0;c<a;c++)u.words[c]=this.words[c];u.length=a}if(0===a);else if(this.length>a)for(this.length-=a,c=0;c<this.length;c++)this.words[c]=this.words[c+a];else this.words[0]=0,this.length=1;var f=0;for(c=this.length-1;c>=0&&(0!==f||c>=n);c--){var l=0|this.words[c];this.words[c]=f<<26-i|l>>>i,f=l&s}return u&&0!==f&&(u.words[u.length++]=f),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},a.prototype.ishrn=function(e,t,r){return o(0===this.negative),this.iushrn(e,t,r)},a.prototype.shln=function(e){return this.clone().ishln(e)},a.prototype.ushln=function(e){return this.clone().iushln(e)},a.prototype.shrn=function(e){return this.clone().ishrn(e)},a.prototype.ushrn=function(e){return this.clone().iushrn(e)},a.prototype.testn=function(e){o("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,n=1<<t;return!(this.length<=r||!(this.words[r]&n))},a.prototype.imaskn=function(e){o("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(o(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var n=67108863^67108863>>>t<<t;this.words[this.length-1]&=n}return this._strip()},a.prototype.maskn=function(e){return this.clone().imaskn(e)},a.prototype.iaddn=function(e){return o("number"==typeof e),o(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},a.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},a.prototype.isubn=function(e){if(o("number"==typeof e),o(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},a.prototype.addn=function(e){return this.clone().iaddn(e)},a.prototype.subn=function(e){return this.clone().isubn(e)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(e,t,r){var n,i,a=e.length+r;this._expand(a);var s=0;for(n=0;n<e.length;n++){i=(0|this.words[n+r])+s;var u=(0|e.words[n])*t;s=((i-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&i}for(;n<this.length-r;n++)s=(i=(0|this.words[n+r])+s)>>26,this.words[n+r]=67108863&i;if(0===s)return this._strip();for(o(-1===s),s=0,n=0;n<this.length;n++)s=(i=-(0|this.words[n])+s)>>26,this.words[n]=67108863&i;return this.negative=1,this._strip()},a.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),o=e,i=0|o.words[o.length-1];0!=(r=26-this._countBits(i))&&(o=o.ushln(r),n.iushln(r),i=0|o.words[o.length-1]);var s,u=n.length-o.length;if("mod"!==t){(s=new a(null)).length=u+1,s.words=new Array(s.length);for(var c=0;c<s.length;c++)s.words[c]=0}var f=n.clone()._ishlnsubmul(o,1,u);0===f.negative&&(n=f,s&&(s.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[o.length+l])+(0|n.words[o.length+l-1]);for(d=Math.min(d/i|0,67108863),n._ishlnsubmul(o,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(o,1,l),n.isZero()||(n.negative^=1);s&&(s.words[l]=d)}return s&&s._strip(),n._strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:s||null,mod:n}},a.prototype.divmod=function(e,t,r){return o(!e.isZero()),this.isZero()?{div:new a(0),mod:new a(0)}:0!==this.negative&&0===e.negative?(s=this.neg().divmod(e,t),"mod"!==t&&(n=s.div.neg()),"div"!==t&&(i=s.mod.neg(),r&&0!==i.negative&&i.iadd(e)),{div:n,mod:i}):0===this.negative&&0!==e.negative?(s=this.divmod(e.neg(),t),"mod"!==t&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&e.negative)?(s=this.neg().divmod(e.neg(),t),"div"!==t&&(i=s.mod.neg(),r&&0!==i.negative&&i.isub(e)),{div:s.div,mod:i}):e.length>this.length||this.cmp(e)<0?{div:new a(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new a(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new a(this.modrn(e.words[0]))}:this._wordDiv(e,t);var n,i,s},a.prototype.div=function(e){return this.divmod(e,"div",!1).div},a.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},a.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},a.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),o=e.andln(1),i=r.cmp(n);return i<0||1===o&&0===i?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},a.prototype.modrn=function(e){var t=e<0;t&&(e=-e),o(e<=67108863);for(var r=(1<<26)%e,n=0,i=this.length-1;i>=0;i--)n=(r*n+(0|this.words[i]))%e;return t?-n:n},a.prototype.modn=function(e){return this.modrn(e)},a.prototype.idivn=function(e){var t=e<0;t&&(e=-e),o(e<=67108863);for(var r=0,n=this.length-1;n>=0;n--){var i=(0|this.words[n])+67108864*r;this.words[n]=i/e|0,r=i%e}return this._strip(),t?this.ineg():this},a.prototype.divn=function(e){return this.clone().idivn(e)},a.prototype.egcd=function(e){o(0===e.negative),o(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n=new a(1),i=new a(0),s=new a(0),u=new a(1),c=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++c;for(var f=r.clone(),l=t.clone();!t.isZero();){for(var d=0,h=1;0==(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(n.isOdd()||i.isOdd())&&(n.iadd(f),i.isub(l)),n.iushrn(1),i.iushrn(1);for(var p=0,y=1;0==(r.words[0]&y)&&p<26;++p,y<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(f),u.isub(l)),s.iushrn(1),u.iushrn(1);t.cmp(r)>=0?(t.isub(r),n.isub(s),i.isub(u)):(r.isub(t),s.isub(n),u.isub(i))}return{a:s,b:u,gcd:r.iushln(c)}},a.prototype._invmp=function(e){o(0===e.negative),o(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n,i=new a(1),s=new a(0),u=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var c=0,f=1;0==(t.words[0]&f)&&c<26;++c,f<<=1);if(c>0)for(t.iushrn(c);c-- >0;)i.isOdd()&&i.iadd(u),i.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(s)):(r.isub(t),s.isub(i))}return(n=0===t.cmpn(1)?i:s).cmpn(0)<0&&n.iadd(e),n},a.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var o=t.cmp(r);if(o<0){var i=t;t=r,r=i}else if(0===o||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},a.prototype.invm=function(e){return this.egcd(e).a.umod(e)},a.prototype.isEven=function(){return 0==(1&this.words[0])},a.prototype.isOdd=function(){return 1==(1&this.words[0])},a.prototype.andln=function(e){return this.words[0]&e},a.prototype.bincn=function(e){o("number"==typeof e);var t=e%26,r=(e-t)/26,n=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var i=n,a=r;0!==i&&a<this.length;a++){var s=0|this.words[a];i=(s+=i)>>>26,s&=67108863,this.words[a]=s}return 0!==i&&(this.words[a]=i,this.length++),this},a.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},a.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)t=1;else{r&&(e=-e),o(e<=67108863,"Number is too big");var n=0|this.words[0];t=n===e?0:n<e?-1:1}return 0!==this.negative?0|-t:t},a.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},a.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],o=0|e.words[r];if(n!==o){n<o?t=-1:n>o&&(t=1);break}}return t},a.prototype.gtn=function(e){return 1===this.cmpn(e)},a.prototype.gt=function(e){return 1===this.cmp(e)},a.prototype.gten=function(e){return this.cmpn(e)>=0},a.prototype.gte=function(e){return this.cmp(e)>=0},a.prototype.ltn=function(e){return-1===this.cmpn(e)},a.prototype.lt=function(e){return-1===this.cmp(e)},a.prototype.lten=function(e){return this.cmpn(e)<=0},a.prototype.lte=function(e){return this.cmp(e)<=0},a.prototype.eqn=function(e){return 0===this.cmpn(e)},a.prototype.eq=function(e){return 0===this.cmp(e)},a.red=function(e){return new T(e)},a.prototype.toRed=function(e){return o(!this.red,"Already a number in reduction context"),o(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},a.prototype.fromRed=function(){return o(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(e){return this.red=e,this},a.prototype.forceRed=function(e){return o(!this.red,"Already a number in reduction context"),this._forceRed(e)},a.prototype.redAdd=function(e){return o(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},a.prototype.redIAdd=function(e){return o(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},a.prototype.redSub=function(e){return o(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},a.prototype.redISub=function(e){return o(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},a.prototype.redShl=function(e){return o(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},a.prototype.redMul=function(e){return o(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},a.prototype.redIMul=function(e){return o(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},a.prototype.redSqr=function(){return o(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return o(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return o(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return o(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return o(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(e){return o(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var x={k256:null,p224:null,p192:null,p25519:null};function P(e,t){this.name=e,this.p=new a(t,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function j(){P.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function O(){P.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){P.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){P.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function T(e){if("string"==typeof e){var t=a._prime(e);this.m=t.p,this.prime=t}else o(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function z(e){T.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}P.prototype._tmp=function(){var e=new a(null);return e.words=new Array(Math.ceil(this.n/13)),e},P.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},P.prototype.split=function(e,t){e.iushrn(this.n,0,t)},P.prototype.imulK=function(e){return e.imul(this.k)},i(j,P),j.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),o=0;o<n;o++)t.words[o]=e.words[o];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var i=e.words[9];for(t.words[t.length++]=i&r,o=10;o<e.length;o++){var a=0|e.words[o];e.words[o-10]=(a&r)<<4|i>>>22,i=a}i>>>=22,e.words[o-10]=i,0===i&&e.length>10?e.length-=10:e.length-=9},j.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(O,P),i(M,P),i(k,P),k.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,o=67108863&n;n>>>=26,e.words[r]=o,t=n}return 0!==t&&(e.words[e.length++]=t),e},a._prime=function(e){if(x[e])return x[e];var t;if("k256"===e)t=new j;else if("p224"===e)t=new O;else if("p192"===e)t=new M;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new k}return x[e]=t,t},T.prototype._verify1=function(e){o(0===e.negative,"red works only with positives"),o(e.red,"red works only with red numbers")},T.prototype._verify2=function(e,t){o(0==(e.negative|t.negative),"red works only with positives"),o(e.red&&e.red===t.red,"red works only with red numbers")},T.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(l(e,e.umod(this.m)._forceRed(this)),e)},T.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},T.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},T.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},T.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},T.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},T.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},T.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},T.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},T.prototype.isqr=function(e){return this.imul(e,e.clone())},T.prototype.sqr=function(e){return this.mul(e,e)},T.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(o(t%2==1),3===t){var r=this.m.add(new a(1)).iushrn(2);return this.pow(e,r)}for(var n=this.m.subn(1),i=0;!n.isZero()&&0===n.andln(1);)i++,n.iushrn(1);o(!n.isZero());var s=new a(1).toRed(this),u=s.redNeg(),c=this.m.subn(1).iushrn(1),f=this.m.bitLength();for(f=new a(2*f*f).toRed(this);0!==this.pow(f,c).cmp(u);)f.redIAdd(u);for(var l=this.pow(f,n),d=this.pow(e,n.addn(1).iushrn(1)),h=this.pow(e,n),p=i;0!==h.cmp(s);){for(var y=h,v=0;0!==y.cmp(s);v++)y=y.redSqr();o(v<p);var b=this.pow(l,new a(1).iushln(p-v-1));d=d.redMul(b),l=b.redSqr(),h=h.redMul(l),p=v}return d},T.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},T.prototype.pow=function(e,t){if(t.isZero())return new a(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new a(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var o=r[0],i=0,s=0,u=t.bitLength()%26;for(0===u&&(u=26),n=t.length-1;n>=0;n--){for(var c=t.words[n],f=u-1;f>=0;f--){var l=c>>f&1;o!==r[0]&&(o=this.sqr(o)),0!==l||0!==i?(i<<=1,i|=l,(4==++s||0===n&&0===f)&&(o=this.mul(o,r[i]),s=0,i=0)):s=0}u=26}return o},T.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},T.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},a.mont=function(e){return new z(e)},i(z,T),z.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},z.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},z.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),o=r.isub(n).iushrn(this.shift),i=o;return o.cmp(this.m)>=0?i=o.isub(this.m):o.cmpn(0)<0&&(i=o.iadd(this.m)),i._forceRed(this)},z.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new a(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),o=r.isub(n).iushrn(this.shift),i=o;return o.cmp(this.m)>=0?i=o.isub(this.m):o.cmpn(0)<0&&(i=o.iadd(this.m)),i._forceRed(this)},z.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e)},5224:e=>{"use strict";e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},3060:e=>{"use strict";e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},2555:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},5370:e=>{"use strict";e.exports=function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}},e.exports.__esModule=!0,e.exports.default=e.exports},4668:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},780:(e,t,r)=>{"use strict";var n=r(3060),o=r(5370),i=r(1414),a=r(4668);e.exports=function(e,t){return n(e)||o(e,t)||i(e,t)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},1414:(e,t,r)=>{"use strict";var n=r(5224);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},1138:e=>{"use strict";e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},552:(e,t,r)=>{"use strict";var n=r(1138);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},7262:e=>{"use strict";function t(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}e.exports=function(e){return function(){var r=this,n=arguments;return new Promise((function(o,i){var a=e.apply(r,n);function s(e){t(a,o,i,s,u,"next",e)}function u(e){t(a,o,i,s,u,"throw",e)}s(void 0)}))}},e.exports.__esModule=!0,e.exports.default=e.exports},3049:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},3439:e=>{"use strict";e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},7154:e=>{"use strict";e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},136:(e,t,r)=>{"use strict";var n=r(552),o=r(3439),i=r(5700),a=r(7154);e.exports=function(e){return n(e)||o(e)||i(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},289:e=>{"use strict";function t(r){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(r)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},5700:(e,t,r)=>{"use strict";var n=r(1138);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},6102:(e,t,r)=>{"use strict";e.exports=r(5666)},9002:e=>{"use strict";e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},198:e=>{"use strict";function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},2931:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},4766:e=>{"use strict";e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},296:e=>{"use strict";function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},2200:e=>{"use strict";e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},9959:(e,t,r)=>{"use strict";var n=r(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(r(7757)),i=n(r(9713)),a=n(r(8926));function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){(0,i.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var c="extensionRequest",f={};function l(e){return d.apply(this,arguments)}function d(){return(d=(0,a.default)(o.default.mark((function e(t){var r,n,i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.id,n=t.message,i=t.request,e.abrupt("return",new Promise((function(e,t){f[n]={resolve:e,reject:t},window.send(c,{id:r,msgType:n,request:i,url:window.location.href})})));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function h(e){window.postMessage(u(u({},e),{},{origin:"content"}),"*")}function p(){return(p=(0,a.default)(o.default.mark((function e(t){var r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=t.message,e.next="pub(authorize.tab)"===e.t0?3:"pub(accounts.list)"===e.t0?7:"pub(metadata.list)"===e.t0?11:"pub(metadata.provide)"===e.t0?12:"pub(accounts.subscribe)"===e.t0?13:"pub(bytes.sign)"===e.t0||"pub(extrinsic.sign)"===e.t0?15:25;break;case 3:return e.next=5,l(t);case 5:case 9:case 18:return r=e.sent,e.abrupt("return",h({id:t.id,response:r}));case 7:return e.next=9,l(t);case 11:return e.abrupt("return",h({id:t.id,response:!1}));case 12:return e.abrupt("return",h({id:t.id,response:!0}));case 13:return l(t).then((function(e){h({id:t.id,subscription:e})})),e.abrupt("return",h({id:t.id,response:!0}));case 15:return e.prev=15,e.next=18,l(t);case 22:return e.prev=22,e.t1=e.catch(15),e.abrupt("return",h({id:t.id,error:e.t1.message}));case 25:throw new Error("Unable to handle message: ".concat(t.message));case 26:case"end":return e.stop()}}),e,null,[[15,22]])})))).apply(this,arguments)}var y={handleMsg:function(e){return p.apply(this,arguments)},onAppResponse:function(e,t,r){f[e]&&(r?f[e].reject(r):f[e].resolve(t))}};t.default=y},5678:function(e,t,r){!function(t,n){"use strict";e.exports?e.exports=n(r(7181)):t.ed2curve=n(t.nacl)}(this,(function(e){"use strict";if(!e)throw new Error("tweetnacl not loaded");var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=t(),n=t([1]),o=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),i=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function a(e){var t,r;for(r=0;r<16;r++)e[r]+=65536,t=Math.floor(e[r]/65536),e[(r+1)*(r<15?1:0)]+=t-1+37*(t-1)*(15===r?1:0),e[r]-=65536*t}function s(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function u(e,t,r){var n;for(n=0;n<16;n++)e[n]=t[n]+r[n]|0}function c(e,t,r){var n;for(n=0;n<16;n++)e[n]=t[n]-r[n]|0}function f(e,t,r){var n,o,i=new Float64Array(31);for(n=0;n<31;n++)i[n]=0;for(n=0;n<16;n++)for(o=0;o<16;o++)i[n+o]+=t[n]*r[o];for(n=0;n<15;n++)i[n]+=38*i[n+16];for(n=0;n<16;n++)e[n]=i[n];a(e),a(e)}function l(e,t){f(e,t,t)}function d(e,r){var n,o,i,u=t(),c=t();for(n=0;n<16;n++)c[n]=r[n];for(a(c),a(c),a(c),o=0;o<2;o++){for(u[0]=c[0]-65517,n=1;n<15;n++)u[n]=c[n]-65535-(u[n-1]>>16&1),u[n-1]&=65535;u[15]=c[15]-32767-(u[14]>>16&1),i=u[15]>>16&1,u[14]&=65535,s(c,u,1-i)}for(n=0;n<16;n++)e[2*n]=255&c[n],e[2*n+1]=c[n]>>8}function h(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return d(r,e),d(n,t),function(e,t,r,n,o){var i,a=0;for(i=0;i<32;i++)a|=e[0+i]^r[0+i];return(1&a-1>>>8)-1}(r,0,n)}function p(e){var a=new Uint8Array(32),s=[t(),t(),t(),t()],p=t(),y=t();if(function(e,a){var s,p,y=t(),v=t(),b=t(),m=t(),g=t(),w=t(),x=t();return function(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}(e[2],n),function(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}(e[1],a),l(b,e[1]),f(m,b,o),c(b,b,e[2]),u(m,e[2],m),l(g,m),l(w,g),f(x,w,g),f(y,x,b),f(y,y,m),function(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)l(o,o),1!==n&&f(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}(y,y),f(y,y,b),f(y,y,m),f(y,y,m),f(e[0],y,m),l(v,e[0]),f(v,v,m),h(v,b)&&f(e[0],e[0],i),l(v,e[0]),f(v,v,m),h(v,b)?-1:(s=e[0],d(p=new Uint8Array(32),s),(1&p[0])==a[31]>>7&&c(e[0],r,e[0]),f(e[3],e[0],e[1]),0)}(s,e))return null;var v=s[1];return u(p,n,v),c(y,n,v),function(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)l(o,o),2!==n&&4!==n&&f(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}(y,y),f(p,p,y),d(a,p),a}function y(t){var r,n=new Uint8Array(64),o=new Uint8Array(32);for(e.lowlevel.crypto_hash(n,t,32),n[0]&=248,n[31]&=127,n[31]|=64,r=0;r<32;r++)o[r]=n[r];for(r=0;r<64;r++)n[r]=0;return o}return{convertPublicKey:p,convertSecretKey:y,convertKeyPair:function(e){var t=p(e.publicKey);return t?{publicKey:t,secretKey:y(e.secretKey)}:null}}}))},7181:(e,t,r)=>{!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},n=function(){throw new Error("no PRNG")},o=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=t(),s=t([1]),u=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),f=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function y(e,t,r,n,o){var i,a=0;for(i=0;i<o;i++)a|=e[t+i]^r[n+i];return(1&a-1>>>8)-1}function v(e,t,r,n){return y(e,t,r,n,16)}function b(e,t,r,n){return y(e,t,r,n,32)}function m(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,v=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=i,P=a,j=s,O=u,M=c,k=f,T=l,z=d,N=h,E=p,A=y,H=v,L=b,U=m,X=g,S=w,B=0;B<20;B+=2)x^=(o=(L^=(o=(N^=(o=(M^=(o=x+L|0)<<7|o>>>25)+x|0)<<9|o>>>23)+M|0)<<13|o>>>19)+N|0)<<18|o>>>14,k^=(o=(P^=(o=(U^=(o=(E^=(o=k+P|0)<<7|o>>>25)+k|0)<<9|o>>>23)+E|0)<<13|o>>>19)+U|0)<<18|o>>>14,A^=(o=(T^=(o=(j^=(o=(X^=(o=A+T|0)<<7|o>>>25)+A|0)<<9|o>>>23)+X|0)<<13|o>>>19)+j|0)<<18|o>>>14,S^=(o=(H^=(o=(z^=(o=(O^=(o=S+H|0)<<7|o>>>25)+S|0)<<9|o>>>23)+O|0)<<13|o>>>19)+z|0)<<18|o>>>14,x^=(o=(O^=(o=(j^=(o=(P^=(o=x+O|0)<<7|o>>>25)+x|0)<<9|o>>>23)+P|0)<<13|o>>>19)+j|0)<<18|o>>>14,k^=(o=(M^=(o=(z^=(o=(T^=(o=k+M|0)<<7|o>>>25)+k|0)<<9|o>>>23)+T|0)<<13|o>>>19)+z|0)<<18|o>>>14,A^=(o=(E^=(o=(N^=(o=(H^=(o=A+E|0)<<7|o>>>25)+A|0)<<9|o>>>23)+H|0)<<13|o>>>19)+N|0)<<18|o>>>14,S^=(o=(X^=(o=(U^=(o=(L^=(o=S+X|0)<<7|o>>>25)+S|0)<<9|o>>>23)+L|0)<<13|o>>>19)+U|0)<<18|o>>>14;x=x+i|0,P=P+a|0,j=j+s|0,O=O+u|0,M=M+c|0,k=k+f|0,T=T+l|0,z=z+d|0,N=N+h|0,E=E+p|0,A=A+y|0,H=H+v|0,L=L+b|0,U=U+m|0,X=X+g|0,S=S+w|0,e[0]=x>>>0&255,e[1]=x>>>8&255,e[2]=x>>>16&255,e[3]=x>>>24&255,e[4]=P>>>0&255,e[5]=P>>>8&255,e[6]=P>>>16&255,e[7]=P>>>24&255,e[8]=j>>>0&255,e[9]=j>>>8&255,e[10]=j>>>16&255,e[11]=j>>>24&255,e[12]=O>>>0&255,e[13]=O>>>8&255,e[14]=O>>>16&255,e[15]=O>>>24&255,e[16]=M>>>0&255,e[17]=M>>>8&255,e[18]=M>>>16&255,e[19]=M>>>24&255,e[20]=k>>>0&255,e[21]=k>>>8&255,e[22]=k>>>16&255,e[23]=k>>>24&255,e[24]=T>>>0&255,e[25]=T>>>8&255,e[26]=T>>>16&255,e[27]=T>>>24&255,e[28]=z>>>0&255,e[29]=z>>>8&255,e[30]=z>>>16&255,e[31]=z>>>24&255,e[32]=N>>>0&255,e[33]=N>>>8&255,e[34]=N>>>16&255,e[35]=N>>>24&255,e[36]=E>>>0&255,e[37]=E>>>8&255,e[38]=E>>>16&255,e[39]=E>>>24&255,e[40]=A>>>0&255,e[41]=A>>>8&255,e[42]=A>>>16&255,e[43]=A>>>24&255,e[44]=H>>>0&255,e[45]=H>>>8&255,e[46]=H>>>16&255,e[47]=H>>>24&255,e[48]=L>>>0&255,e[49]=L>>>8&255,e[50]=L>>>16&255,e[51]=L>>>24&255,e[52]=U>>>0&255,e[53]=U>>>8&255,e[54]=U>>>16&255,e[55]=U>>>24&255,e[56]=X>>>0&255,e[57]=X>>>8&255,e[58]=X>>>16&255,e[59]=X>>>24&255,e[60]=S>>>0&255,e[61]=S>>>8&255,e[62]=S>>>16&255,e[63]=S>>>24&255}(e,t,r,n)}function g(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,v=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=0;x<20;x+=2)i^=(o=(b^=(o=(h^=(o=(c^=(o=i+b|0)<<7|o>>>25)+i|0)<<9|o>>>23)+c|0)<<13|o>>>19)+h|0)<<18|o>>>14,f^=(o=(a^=(o=(m^=(o=(p^=(o=f+a|0)<<7|o>>>25)+f|0)<<9|o>>>23)+p|0)<<13|o>>>19)+m|0)<<18|o>>>14,y^=(o=(l^=(o=(s^=(o=(g^=(o=y+l|0)<<7|o>>>25)+y|0)<<9|o>>>23)+g|0)<<13|o>>>19)+s|0)<<18|o>>>14,w^=(o=(v^=(o=(d^=(o=(u^=(o=w+v|0)<<7|o>>>25)+w|0)<<9|o>>>23)+u|0)<<13|o>>>19)+d|0)<<18|o>>>14,i^=(o=(u^=(o=(s^=(o=(a^=(o=i+u|0)<<7|o>>>25)+i|0)<<9|o>>>23)+a|0)<<13|o>>>19)+s|0)<<18|o>>>14,f^=(o=(c^=(o=(d^=(o=(l^=(o=f+c|0)<<7|o>>>25)+f|0)<<9|o>>>23)+l|0)<<13|o>>>19)+d|0)<<18|o>>>14,y^=(o=(p^=(o=(h^=(o=(v^=(o=y+p|0)<<7|o>>>25)+y|0)<<9|o>>>23)+v|0)<<13|o>>>19)+h|0)<<18|o>>>14,w^=(o=(g^=(o=(m^=(o=(b^=(o=w+g|0)<<7|o>>>25)+w|0)<<9|o>>>23)+b|0)<<13|o>>>19)+m|0)<<18|o>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=f>>>0&255,e[5]=f>>>8&255,e[6]=f>>>16&255,e[7]=f>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=l>>>0&255,e[17]=l>>>8&255,e[18]=l>>>16&255,e[19]=l>>>24&255,e[20]=d>>>0&255,e[21]=d>>>8&255,e[22]=d>>>16&255,e[23]=d>>>24&255,e[24]=h>>>0&255,e[25]=h>>>8&255,e[26]=h>>>16&255,e[27]=h>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function x(e,t,r,n,o,i,a){var s,u,c=new Uint8Array(16),f=new Uint8Array(64);for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=i[u];for(;o>=64;){for(m(f,c,a,w),u=0;u<64;u++)e[t+u]=r[n+u]^f[u];for(s=1,u=8;u<16;u++)s=s+(255&c[u])|0,c[u]=255&s,s>>>=8;o-=64,t+=64,n+=64}if(o>0)for(m(f,c,a,w),u=0;u<o;u++)e[t+u]=r[n+u]^f[u];return 0}function P(e,t,r,n,o){var i,a,s=new Uint8Array(16),u=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;r>=64;){for(m(u,s,o,w),a=0;a<64;a++)e[t+a]=u[a];for(i=1,a=8;a<16;a++)i=i+(255&s[a])|0,s[a]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(m(u,s,o,w),a=0;a<r;a++)e[t+a]=u[a];return 0}function j(e,t,r,n,o){var i=new Uint8Array(32);g(i,n,o,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return P(e,t,r,a,i)}function O(e,t,r,n,o,i,a){var s=new Uint8Array(32);g(s,i,a,w);for(var u=new Uint8Array(8),c=0;c<8;c++)u[c]=i[c+16];return x(e,t,r,n,o,u,s)}var M=function(e){var t,r,n,o,i,a,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function k(e,t,r,n,o,i){var a=new M(i);return a.update(r,n,o),a.finish(e,t),0}function T(e,t,r,n,o,i){var a=new Uint8Array(16);return k(a,0,r,n,o,i),v(e,t,a,0)}function z(e,t,r,n,o){var i;if(r<32)return-1;for(O(e,0,t,0,r,n,o),k(e,16,e,32,r-32,e),i=0;i<16;i++)e[i]=0;return 0}function N(e,t,r,n,o){var i,a=new Uint8Array(32);if(r<32)return-1;if(j(a,0,32,n,o),0!==T(t,16,t,32,r-32,a))return-1;for(O(e,0,t,0,r,n,o),i=0;i<32;i++)e[i]=0;return 0}function E(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function A(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function H(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function L(e,r){var n,o,i,a=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(A(s),A(s),A(s),o=0;o<2;o++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),i=a[15]>>16&1,a[14]&=65535,H(s,a,1-i)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function U(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return L(r,e),L(n,t),b(r,0,n,0)}function X(e){var t=new Uint8Array(32);return L(t,e),1&t[0]}function S(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function B(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function Z(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function R(e,t,r){var n,o,i=0,a=0,s=0,u=0,c=0,f=0,l=0,d=0,h=0,p=0,y=0,v=0,b=0,m=0,g=0,w=0,x=0,P=0,j=0,O=0,M=0,k=0,T=0,z=0,N=0,E=0,A=0,H=0,L=0,U=0,X=0,S=r[0],B=r[1],Z=r[2],R=r[3],F=r[4],D=r[5],I=r[6],W=r[7],q=r[8],V=r[9],G=r[10],K=r[11],Y=r[12],C=r[13],J=r[14],Q=r[15];i+=(n=t[0])*S,a+=n*B,s+=n*Z,u+=n*R,c+=n*F,f+=n*D,l+=n*I,d+=n*W,h+=n*q,p+=n*V,y+=n*G,v+=n*K,b+=n*Y,m+=n*C,g+=n*J,w+=n*Q,a+=(n=t[1])*S,s+=n*B,u+=n*Z,c+=n*R,f+=n*F,l+=n*D,d+=n*I,h+=n*W,p+=n*q,y+=n*V,v+=n*G,b+=n*K,m+=n*Y,g+=n*C,w+=n*J,x+=n*Q,s+=(n=t[2])*S,u+=n*B,c+=n*Z,f+=n*R,l+=n*F,d+=n*D,h+=n*I,p+=n*W,y+=n*q,v+=n*V,b+=n*G,m+=n*K,g+=n*Y,w+=n*C,x+=n*J,P+=n*Q,u+=(n=t[3])*S,c+=n*B,f+=n*Z,l+=n*R,d+=n*F,h+=n*D,p+=n*I,y+=n*W,v+=n*q,b+=n*V,m+=n*G,g+=n*K,w+=n*Y,x+=n*C,P+=n*J,j+=n*Q,c+=(n=t[4])*S,f+=n*B,l+=n*Z,d+=n*R,h+=n*F,p+=n*D,y+=n*I,v+=n*W,b+=n*q,m+=n*V,g+=n*G,w+=n*K,x+=n*Y,P+=n*C,j+=n*J,O+=n*Q,f+=(n=t[5])*S,l+=n*B,d+=n*Z,h+=n*R,p+=n*F,y+=n*D,v+=n*I,b+=n*W,m+=n*q,g+=n*V,w+=n*G,x+=n*K,P+=n*Y,j+=n*C,O+=n*J,M+=n*Q,l+=(n=t[6])*S,d+=n*B,h+=n*Z,p+=n*R,y+=n*F,v+=n*D,b+=n*I,m+=n*W,g+=n*q,w+=n*V,x+=n*G,P+=n*K,j+=n*Y,O+=n*C,M+=n*J,k+=n*Q,d+=(n=t[7])*S,h+=n*B,p+=n*Z,y+=n*R,v+=n*F,b+=n*D,m+=n*I,g+=n*W,w+=n*q,x+=n*V,P+=n*G,j+=n*K,O+=n*Y,M+=n*C,k+=n*J,T+=n*Q,h+=(n=t[8])*S,p+=n*B,y+=n*Z,v+=n*R,b+=n*F,m+=n*D,g+=n*I,w+=n*W,x+=n*q,P+=n*V,j+=n*G,O+=n*K,M+=n*Y,k+=n*C,T+=n*J,z+=n*Q,p+=(n=t[9])*S,y+=n*B,v+=n*Z,b+=n*R,m+=n*F,g+=n*D,w+=n*I,x+=n*W,P+=n*q,j+=n*V,O+=n*G,M+=n*K,k+=n*Y,T+=n*C,z+=n*J,N+=n*Q,y+=(n=t[10])*S,v+=n*B,b+=n*Z,m+=n*R,g+=n*F,w+=n*D,x+=n*I,P+=n*W,j+=n*q,O+=n*V,M+=n*G,k+=n*K,T+=n*Y,z+=n*C,N+=n*J,E+=n*Q,v+=(n=t[11])*S,b+=n*B,m+=n*Z,g+=n*R,w+=n*F,x+=n*D,P+=n*I,j+=n*W,O+=n*q,M+=n*V,k+=n*G,T+=n*K,z+=n*Y,N+=n*C,E+=n*J,A+=n*Q,b+=(n=t[12])*S,m+=n*B,g+=n*Z,w+=n*R,x+=n*F,P+=n*D,j+=n*I,O+=n*W,M+=n*q,k+=n*V,T+=n*G,z+=n*K,N+=n*Y,E+=n*C,A+=n*J,H+=n*Q,m+=(n=t[13])*S,g+=n*B,w+=n*Z,x+=n*R,P+=n*F,j+=n*D,O+=n*I,M+=n*W,k+=n*q,T+=n*V,z+=n*G,N+=n*K,E+=n*Y,A+=n*C,H+=n*J,L+=n*Q,g+=(n=t[14])*S,w+=n*B,x+=n*Z,P+=n*R,j+=n*F,O+=n*D,M+=n*I,k+=n*W,T+=n*q,z+=n*V,N+=n*G,E+=n*K,A+=n*Y,H+=n*C,L+=n*J,U+=n*Q,w+=(n=t[15])*S,a+=38*(P+=n*Z),s+=38*(j+=n*R),u+=38*(O+=n*F),c+=38*(M+=n*D),f+=38*(k+=n*I),l+=38*(T+=n*W),d+=38*(z+=n*q),h+=38*(N+=n*V),p+=38*(E+=n*G),y+=38*(A+=n*K),v+=38*(H+=n*Y),b+=38*(L+=n*C),m+=38*(U+=n*J),g+=38*(X+=n*Q),i=(n=(i+=38*(x+=n*B))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i+=o-1+37*(o-1),e[0]=i,e[1]=a,e[2]=s,e[3]=u,e[4]=c,e[5]=f,e[6]=l,e[7]=d,e[8]=h,e[9]=p,e[10]=y,e[11]=v,e[12]=b,e[13]=m,e[14]=g,e[15]=w}function F(e,t){R(e,t,t)}function D(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)F(o,o),2!==n&&4!==n&&R(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function I(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)F(o,o),1!==n&&R(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function W(e,r,n){var o,i,a=new Uint8Array(32),s=new Float64Array(80),c=t(),f=t(),l=t(),d=t(),h=t(),p=t();for(i=0;i<31;i++)a[i]=r[i];for(a[31]=127&r[31]|64,a[0]&=248,S(s,n),i=0;i<16;i++)f[i]=s[i],d[i]=c[i]=l[i]=0;for(c[0]=d[0]=1,i=254;i>=0;--i)H(c,f,o=a[i>>>3]>>>(7&i)&1),H(l,d,o),B(h,c,l),Z(c,c,l),B(l,f,d),Z(f,f,d),F(d,h),F(p,c),R(c,l,c),R(l,f,h),B(h,c,l),Z(c,c,l),F(f,c),Z(l,d,p),R(c,l,u),B(c,c,d),R(l,l,c),R(c,d,p),R(d,f,s),F(f,h),H(c,f,o),H(l,d,o);for(i=0;i<16;i++)s[i+16]=c[i],s[i+32]=l[i],s[i+48]=f[i],s[i+64]=d[i];var y=s.subarray(32),v=s.subarray(16);return D(y,y),R(v,v,y),L(e,v),0}function q(e,t){return W(e,t,i)}function V(e,t){return n(t,32),q(e,t)}function G(e,t,r){var n=new Uint8Array(32);return W(n,r,t),g(e,o,n,w)}M.prototype.blocks=function(e,t,r){for(var n,o,i,a,s,u,c,f,l,d,h,p,y,v,b,m,g,w,x,P=this.fin?0:2048,j=this.h[0],O=this.h[1],M=this.h[2],k=this.h[3],T=this.h[4],z=this.h[5],N=this.h[6],E=this.h[7],A=this.h[8],H=this.h[9],L=this.r[0],U=this.r[1],X=this.r[2],S=this.r[3],B=this.r[4],Z=this.r[5],R=this.r[6],F=this.r[7],D=this.r[8],I=this.r[9];r>=16;)d=l=0,d+=(j+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*L,d+=(O+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*I),d+=(M+=8191&(o>>>10|(i=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*D),d+=(k+=8191&(i>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),l=(d+=(T+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*R))>>>13,d&=8191,d+=(z+=s>>>1&8191)*(5*Z),d+=(N+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*B),d+=(E+=8191&(u>>>11|(c=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*S),d+=(A+=8191&(c>>>8|(f=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*X),h=l+=(d+=(H+=f>>>5|P)*(5*U))>>>13,h+=j*U,h+=O*L,h+=M*(5*I),h+=k*(5*D),l=(h+=T*(5*F))>>>13,h&=8191,h+=z*(5*R),h+=N*(5*Z),h+=E*(5*B),h+=A*(5*S),l+=(h+=H*(5*X))>>>13,h&=8191,p=l,p+=j*X,p+=O*U,p+=M*L,p+=k*(5*I),l=(p+=T*(5*D))>>>13,p&=8191,p+=z*(5*F),p+=N*(5*R),p+=E*(5*Z),p+=A*(5*B),y=l+=(p+=H*(5*S))>>>13,y+=j*S,y+=O*X,y+=M*U,y+=k*L,l=(y+=T*(5*I))>>>13,y&=8191,y+=z*(5*D),y+=N*(5*F),y+=E*(5*R),y+=A*(5*Z),v=l+=(y+=H*(5*B))>>>13,v+=j*B,v+=O*S,v+=M*X,v+=k*U,l=(v+=T*L)>>>13,v&=8191,v+=z*(5*I),v+=N*(5*D),v+=E*(5*F),v+=A*(5*R),b=l+=(v+=H*(5*Z))>>>13,b+=j*Z,b+=O*B,b+=M*S,b+=k*X,l=(b+=T*U)>>>13,b&=8191,b+=z*L,b+=N*(5*I),b+=E*(5*D),b+=A*(5*F),m=l+=(b+=H*(5*R))>>>13,m+=j*R,m+=O*Z,m+=M*B,m+=k*S,l=(m+=T*X)>>>13,m&=8191,m+=z*U,m+=N*L,m+=E*(5*I),m+=A*(5*D),g=l+=(m+=H*(5*F))>>>13,g+=j*F,g+=O*R,g+=M*Z,g+=k*B,l=(g+=T*S)>>>13,g&=8191,g+=z*X,g+=N*U,g+=E*L,g+=A*(5*I),w=l+=(g+=H*(5*D))>>>13,w+=j*D,w+=O*F,w+=M*R,w+=k*Z,l=(w+=T*B)>>>13,w&=8191,w+=z*S,w+=N*X,w+=E*U,w+=A*L,x=l+=(w+=H*(5*I))>>>13,x+=j*I,x+=O*D,x+=M*F,x+=k*R,l=(x+=T*Z)>>>13,x&=8191,x+=z*B,x+=N*S,x+=E*X,x+=A*U,j=d=8191&(l=(l=((l+=(x+=H*L)>>>13)<<2)+l|0)+(d&=8191)|0),O=h+=l>>>=13,M=p&=8191,k=y&=8191,T=v&=8191,z=b&=8191,N=m&=8191,E=g&=8191,A=w&=8191,H=x&=8191,t+=16,r-=16;this.h[0]=j,this.h[1]=O,this.h[2]=M,this.h[3]=k,this.h[4]=T,this.h[5]=z,this.h[6]=N,this.h[7]=E,this.h[8]=A,this.h[9]=H},M.prototype.finish=function(e,t){var r,n,o,i,a=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=r,r=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,a[0]=this.h[0]+5,r=a[0]>>>13,a[0]&=8191,i=1;i<10;i++)a[i]=this.h[i]+r,r=a[i]>>>13,a[i]&=8191;for(a[9]-=8192,n=(1^r)-1,i=0;i<10;i++)a[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|a[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},M.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var K=z,Y=N,C=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,r,n){for(var o,i,a,s,u,c,f,l,d,h,p,y,v,b,m,g,w,x,P,j,O,M,k,T,z,N,E=new Int32Array(16),A=new Int32Array(16),H=e[0],L=e[1],U=e[2],X=e[3],S=e[4],B=e[5],Z=e[6],R=e[7],F=t[0],D=t[1],I=t[2],W=t[3],q=t[4],V=t[5],G=t[6],K=t[7],Y=0;n>=128;){for(P=0;P<16;P++)j=8*P+Y,E[P]=r[j+0]<<24|r[j+1]<<16|r[j+2]<<8|r[j+3],A[P]=r[j+4]<<24|r[j+5]<<16|r[j+6]<<8|r[j+7];for(P=0;P<80;P++)if(o=H,i=L,a=U,s=X,u=S,c=B,f=Z,d=F,h=D,p=I,y=W,v=q,b=V,m=G,k=65535&(M=K),T=M>>>16,z=65535&(O=R),N=O>>>16,k+=65535&(M=(q>>>14|S<<18)^(q>>>18|S<<14)^(S>>>9|q<<23)),T+=M>>>16,z+=65535&(O=(S>>>14|q<<18)^(S>>>18|q<<14)^(q>>>9|S<<23)),N+=O>>>16,k+=65535&(M=q&V^~q&G),T+=M>>>16,z+=65535&(O=S&B^~S&Z),N+=O>>>16,k+=65535&(M=C[2*P+1]),T+=M>>>16,z+=65535&(O=C[2*P]),N+=O>>>16,O=E[P%16],T+=(M=A[P%16])>>>16,z+=65535&O,N+=O>>>16,z+=(T+=(k+=65535&M)>>>16)>>>16,k=65535&(M=x=65535&k|T<<16),T=M>>>16,z=65535&(O=w=65535&z|(N+=z>>>16)<<16),N=O>>>16,k+=65535&(M=(F>>>28|H<<4)^(H>>>2|F<<30)^(H>>>7|F<<25)),T+=M>>>16,z+=65535&(O=(H>>>28|F<<4)^(F>>>2|H<<30)^(F>>>7|H<<25)),N+=O>>>16,T+=(M=F&D^F&I^D&I)>>>16,z+=65535&(O=H&L^H&U^L&U),N+=O>>>16,l=65535&(z+=(T+=(k+=65535&M)>>>16)>>>16)|(N+=z>>>16)<<16,g=65535&k|T<<16,k=65535&(M=y),T=M>>>16,z=65535&(O=s),N=O>>>16,T+=(M=x)>>>16,z+=65535&(O=w),N+=O>>>16,L=o,U=i,X=a,S=s=65535&(z+=(T+=(k+=65535&M)>>>16)>>>16)|(N+=z>>>16)<<16,B=u,Z=c,R=f,H=l,D=d,I=h,W=p,q=y=65535&k|T<<16,V=v,G=b,K=m,F=g,P%16==15)for(j=0;j<16;j++)O=E[j],k=65535&(M=A[j]),T=M>>>16,z=65535&O,N=O>>>16,O=E[(j+9)%16],k+=65535&(M=A[(j+9)%16]),T+=M>>>16,z+=65535&O,N+=O>>>16,w=E[(j+1)%16],k+=65535&(M=((x=A[(j+1)%16])>>>1|w<<31)^(x>>>8|w<<24)^(x>>>7|w<<25)),T+=M>>>16,z+=65535&(O=(w>>>1|x<<31)^(w>>>8|x<<24)^w>>>7),N+=O>>>16,w=E[(j+14)%16],T+=(M=((x=A[(j+14)%16])>>>19|w<<13)^(w>>>29|x<<3)^(x>>>6|w<<26))>>>16,z+=65535&(O=(w>>>19|x<<13)^(x>>>29|w<<3)^w>>>6),N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,E[j]=65535&z|N<<16,A[j]=65535&k|T<<16;k=65535&(M=F),T=M>>>16,z=65535&(O=H),N=O>>>16,O=e[0],T+=(M=t[0])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[0]=H=65535&z|N<<16,t[0]=F=65535&k|T<<16,k=65535&(M=D),T=M>>>16,z=65535&(O=L),N=O>>>16,O=e[1],T+=(M=t[1])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[1]=L=65535&z|N<<16,t[1]=D=65535&k|T<<16,k=65535&(M=I),T=M>>>16,z=65535&(O=U),N=O>>>16,O=e[2],T+=(M=t[2])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[2]=U=65535&z|N<<16,t[2]=I=65535&k|T<<16,k=65535&(M=W),T=M>>>16,z=65535&(O=X),N=O>>>16,O=e[3],T+=(M=t[3])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[3]=X=65535&z|N<<16,t[3]=W=65535&k|T<<16,k=65535&(M=q),T=M>>>16,z=65535&(O=S),N=O>>>16,O=e[4],T+=(M=t[4])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[4]=S=65535&z|N<<16,t[4]=q=65535&k|T<<16,k=65535&(M=V),T=M>>>16,z=65535&(O=B),N=O>>>16,O=e[5],T+=(M=t[5])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[5]=B=65535&z|N<<16,t[5]=V=65535&k|T<<16,k=65535&(M=G),T=M>>>16,z=65535&(O=Z),N=O>>>16,O=e[6],T+=(M=t[6])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[6]=Z=65535&z|N<<16,t[6]=G=65535&k|T<<16,k=65535&(M=K),T=M>>>16,z=65535&(O=R),N=O>>>16,O=e[7],T+=(M=t[7])>>>16,z+=65535&O,N+=O>>>16,N+=(z+=(T+=(k+=65535&M)>>>16)>>>16)>>>16,e[7]=R=65535&z|N<<16,t[7]=K=65535&k|T<<16,Y+=128,n-=128}return n}function Q(e,t,r){var n,o=new Int32Array(8),i=new Int32Array(8),a=new Uint8Array(256),s=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,J(o,i,t,r),r%=128,n=0;n<r;n++)a[n]=t[s-r+n];for(a[r]=128,a[(r=256-128*(r<112?1:0))-9]=0,p(a,r-8,s/536870912|0,s<<3),J(o,i,a,r),n=0;n<8;n++)p(e,8*n,o[n],i[n]);return 0}function _(e,r){var n=t(),o=t(),i=t(),a=t(),s=t(),u=t(),c=t(),l=t(),d=t();Z(n,e[1],e[0]),Z(d,r[1],r[0]),R(n,n,d),B(o,e[0],e[1]),B(d,r[0],r[1]),R(o,o,d),R(i,e[3],r[3]),R(i,i,f),R(a,e[2],r[2]),B(a,a,a),Z(s,o,n),Z(u,a,i),B(c,a,i),B(l,o,n),R(e[0],s,u),R(e[1],l,c),R(e[2],c,u),R(e[3],s,l)}function $(e,t,r){var n;for(n=0;n<4;n++)H(e[n],t[n],r)}function ee(e,r){var n=t(),o=t(),i=t();D(i,r[2]),R(n,r[0],i),R(o,r[1],i),L(e,o),e[31]^=X(n)<<7}function te(e,t,r){var n,o;for(E(e[0],a),E(e[1],s),E(e[2],s),E(e[3],a),o=255;o>=0;--o)$(e,t,n=r[o/8|0]>>(7&o)&1),_(t,e),_(e,e),$(e,t,n)}function re(e,r){var n=[t(),t(),t(),t()];E(n[0],l),E(n[1],d),E(n[2],s),R(n[3],l,d),te(e,n,r)}function ne(e,r,o){var i,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(o||n(r,32),Q(a,r,32),a[0]&=248,a[31]&=127,a[31]|=64,re(s,a),ee(e,s),i=0;i<32;i++)r[i+32]=e[i];return 0}var oe=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ie(e,t){var r,n,o,i;for(n=63;n>=32;--n){for(r=0,o=n-32,i=n-12;o<i;++o)t[o]+=r-16*t[n]*oe[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*oe[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*oe[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ie(e,r)}function se(e,r,n,o){var i,a,s=new Uint8Array(64),u=new Uint8Array(64),c=new Uint8Array(64),f=new Float64Array(64),l=[t(),t(),t(),t()];Q(s,o,32),s[0]&=248,s[31]&=127,s[31]|=64;var d=n+64;for(i=0;i<n;i++)e[64+i]=r[i];for(i=0;i<32;i++)e[32+i]=s[32+i];for(Q(c,e.subarray(32),n+32),ae(c),re(l,c),ee(e,l),i=32;i<64;i++)e[i]=o[i];for(Q(u,e,n+64),ae(u),i=0;i<64;i++)f[i]=0;for(i=0;i<32;i++)f[i]=c[i];for(i=0;i<32;i++)for(a=0;a<32;a++)f[i+a]+=u[i]*s[a];return ie(e.subarray(32),f),d}function ue(e,r,n,o){var i,u=new Uint8Array(32),f=new Uint8Array(64),l=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),i=t(),u=t(),f=t(),l=t(),d=t();return E(e[2],s),S(e[1],r),F(i,e[1]),R(u,i,c),Z(i,i,e[2]),B(u,e[2],u),F(f,u),F(l,f),R(d,l,f),R(n,d,i),R(n,n,u),I(n,n),R(n,n,i),R(n,n,u),R(n,n,u),R(e[0],n,u),F(o,e[0]),R(o,o,u),U(o,i)&&R(e[0],e[0],h),F(o,e[0]),R(o,o,u),U(o,i)?-1:(X(e[0])===r[31]>>7&&Z(e[0],a,e[0]),R(e[3],e[0],e[1]),0)}(d,o))return-1;for(i=0;i<n;i++)e[i]=r[i];for(i=0;i<32;i++)e[i+32]=o[i];if(Q(f,e,n),ae(f),te(l,d,f),re(d,r.subarray(32)),_(l,d),ee(u,l),n-=64,b(r,0,u,0)){for(i=0;i<n;i++)e[i]=0;return-1}for(i=0;i<n;i++)e[i]=r[i+64];return n}var ce,fe=64,le=32,de=64;function he(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function ye(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:O,crypto_stream:j,crypto_stream_salsa20_xor:x,crypto_stream_salsa20:P,crypto_onetimeauth:k,crypto_onetimeauth_verify:T,crypto_verify_16:v,crypto_verify_32:b,crypto_secretbox:z,crypto_secretbox_open:N,crypto_scalarmult:W,crypto_scalarmult_base:q,crypto_box_beforenm:G,crypto_box_afternm:K,crypto_box:function(e,t,r,n,o,i){var a=new Uint8Array(32);return G(a,o,i),K(e,t,r,n,a)},crypto_box_open:function(e,t,r,n,o,i){var a=new Uint8Array(32);return G(a,o,i),Y(e,t,r,n,a)},crypto_box_keypair:V,crypto_hash:Q,crypto_sign:se,crypto_sign_keypair:ne,crypto_sign_open:ue,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:fe,crypto_sign_PUBLICKEYBYTES:le,crypto_sign_SECRETKEYBYTES:de,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:oe,pack25519:L,unpack25519:S,M:R,A:B,S:F,Z,pow2523:I,add:_,set25519:E,modL:ie,scalarmult:te,scalarbase:re},e.randomBytes=function(e){var t=new Uint8Array(e);return n(t,e),t},e.secretbox=function(e,t,r){pe(e,t,r),he(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+32]=e[i];return z(o,n,n.length,t,r),o.subarray(16)},e.secretbox.open=function(e,t,r){pe(e,t,r),he(r,t);for(var n=new Uint8Array(16+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+16]=e[i];return n.length<32||0!==N(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return W(r,e,t),r},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return q(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox(t,r,i)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return G(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox.open(t,r,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return V(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return q(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==de)throw new Error("bad secret key size");var r=new Uint8Array(fe+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(pe(e,t),t.length!==le)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ue(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=r[i];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(fe),i=0;i<o.length;i++)o[i]=n[i];return o},e.sign.detached.verify=function(e,t,r){if(pe(e,t,r),t.length!==fe)throw new Error("bad signature size");if(r.length!==le)throw new Error("bad public key size");var n,o=new Uint8Array(fe+e.length),i=new Uint8Array(fe+e.length);for(n=0;n<fe;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+fe]=e[n];return ue(i,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(le),t=new Uint8Array(de);return ne(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==de)throw new Error("bad secret key size");for(var t=new Uint8Array(le),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(le),r=new Uint8Array(de),n=0;n<32;n++)r[n]=e[n];return ne(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=le,e.sign.secretKeyLength=de,e.sign.seedLength=32,e.sign.signatureLength=fe,e.hash=function(e){pe(e);var t=new Uint8Array(64);return Q(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===y(e,0,t,0,e.length)},e.setPRNG=function(e){n=e},(ce="undefined"!=typeof self?self.crypto||self.msCrypto:null)&&ce.getRandomValues?e.setPRNG((function(e,t){var r,n=new Uint8Array(t);for(r=0;r<t;r+=65536)ce.getRandomValues(n.subarray(r,r+Math.min(t-r,65536)));for(r=0;r<t;r++)e[r]=n[r];ye(n)})):(ce=r(4597))&&ce.randomBytes&&e.setPRNG((function(e,t){var r,n=ce.randomBytes(t);for(r=0;r<t;r++)e[r]=n[r];ye(n)}))}(e.exports?e.exports:self.nacl=self.nacl||{})},6729:e=>{"use strict";var t=Object.prototype.hasOwnProperty,r="~";function n(){}function o(e,t,r){this.fn=e,this.context=t,this.once=r||!1}function i(e,t,n,i,a){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new o(n,i||e,a),u=r?r+t:t;return e._events[u]?e._events[u].fn?e._events[u]=[e._events[u],s]:e._events[u].push(s):(e._events[u]=s,e._eventsCount++),e}function a(e,t){0==--e._eventsCount?e._events=new n:delete e._events[t]}function s(){this._events=new n,this._eventsCount=0}Object.create&&(n.prototype=Object.create(null),(new n).__proto__||(r=!1)),s.prototype.eventNames=function(){var e,n,o=[];if(0===this._eventsCount)return o;for(n in e=this._events)t.call(e,n)&&o.push(r?n.slice(1):n);return Object.getOwnPropertySymbols?o.concat(Object.getOwnPropertySymbols(e)):o},s.prototype.listeners=function(e){var t=r?r+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var o=0,i=n.length,a=new Array(i);o<i;o++)a[o]=n[o].fn;return a},s.prototype.listenerCount=function(e){var t=r?r+e:e,n=this._events[t];return n?n.fn?1:n.length:0},s.prototype.emit=function(e,t,n,o,i,a){var s=r?r+e:e;if(!this._events[s])return!1;var u,c,f=this._events[s],l=arguments.length;if(f.fn){switch(f.once&&this.removeListener(e,f.fn,void 0,!0),l){case 1:return f.fn.call(f.context),!0;case 2:return f.fn.call(f.context,t),!0;case 3:return f.fn.call(f.context,t,n),!0;case 4:return f.fn.call(f.context,t,n,o),!0;case 5:return f.fn.call(f.context,t,n,o,i),!0;case 6:return f.fn.call(f.context,t,n,o,i,a),!0}for(c=1,u=new Array(l-1);c<l;c++)u[c-1]=arguments[c];f.fn.apply(f.context,u)}else{var d,h=f.length;for(c=0;c<h;c++)switch(f[c].once&&this.removeListener(e,f[c].fn,void 0,!0),l){case 1:f[c].fn.call(f[c].context);break;case 2:f[c].fn.call(f[c].context,t);break;case 3:f[c].fn.call(f[c].context,t,n);break;case 4:f[c].fn.call(f[c].context,t,n,o);break;default:if(!u)for(d=1,u=new Array(l-1);d<l;d++)u[d-1]=arguments[d];f[c].fn.apply(f[c].context,u)}}return!0},s.prototype.on=function(e,t,r){return i(this,e,t,r,!1)},s.prototype.once=function(e,t,r){return i(this,e,t,r,!0)},s.prototype.removeListener=function(e,t,n,o){var i=r?r+e:e;if(!this._events[i])return this;if(!t)return a(this,i),this;var s=this._events[i];if(s.fn)s.fn!==t||o&&!s.once||n&&s.context!==n||a(this,i);else{for(var u=0,c=[],f=s.length;u<f;u++)(s[u].fn!==t||o&&!s[u].once||n&&s[u].context!==n)&&c.push(s[u]);c.length?this._events[i]=1===c.length?c[0]:c:a(this,i)}return this},s.prototype.removeAllListeners=function(e){var t;return e?(t=r?r+e:e,this._events[t]&&a(this,t)):(this._events=new n,this._eventsCount=0),this},s.prototype.off=s.prototype.removeListener,s.prototype.addListener=s.prototype.on,s.prefixed=r,s.EventEmitter=s,e.exports=s},1476:e=>{"use strict";const t="[a-fA-F\\d:]",r=e=>e&&e.includeBoundaries?`(?:(?<=\\s|^)(?=${t})|(?<=${t})(?=\\s|$))`:"",n="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",o="[a-fA-F\\d]{1,4}",i=`\n(?:\n(?:${o}:){7}(?:${o}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${o}:){6}(?:${n}|:${o}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${o}:){5}(?::${n}|(?::${o}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${o}:){4}(?:(?::${o}){0,1}:${n}|(?::${o}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${o}:){3}(?:(?::${o}){0,2}:${n}|(?::${o}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${o}:){2}(?:(?::${o}){0,3}:${n}|(?::${o}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${o}:){1}(?:(?::${o}){0,4}:${n}|(?::${o}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${o}){0,5}:${n}|(?::${o}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),a=new RegExp(`(?:^${n}$)|(?:^${i}$)`),s=new RegExp(`^${n}$`),u=new RegExp(`^${i}$`),c=e=>e&&e.exact?a:new RegExp(`(?:${r(e)}${n}${r(e)})|(?:${r(e)}${i}${r(e)})`,"g");c.v4=e=>e&&e.exact?s:new RegExp(`${r(e)}${n}${r(e)}`,"g"),c.v6=e=>e&&e.exact?u:new RegExp(`${r(e)}${i}${r(e)}`,"g"),e.exports=c},4155:e=>{var t,r,n=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var s,u=[],c=!1,f=-1;function l(){c&&s&&(c=!1,s.length?u=s.concat(u):f=-1,u.length&&d())}function d(){if(!c){var e=a(l);c=!0;for(var t=u.length;t;){for(s=u,u=[];++f<t;)s&&s[f].run();f=-1,t=u.length}s=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function p(){}n.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new h(e,t)),1!==u.length||c||a(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(e){return[]},n.binding=function(e){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(e){throw new Error("process.chdir is not supported")},n.umask=function(){return 0}},5666:e=>{var t=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof v?t:v,i=Object.create(o.prototype),a=new z(n||[]);return i._invoke=function(e,t,r){var n=l;return function(o,i){if(n===h)throw new Error("Generator is already running");if(n===p){if("throw"===o)throw i;return E()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=M(a,r);if(s){if(s===y)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===l)throw n=p,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=h;var u=f(e,t,r);if("normal"===u.type){if(n=r.done?p:d,u.arg===y)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=p,r.method="throw",r.arg=u.arg)}}}(e,r,a),i}function f(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var l="suspendedStart",d="suspendedYield",h="executing",p="completed",y={};function v(){}function b(){}function m(){}var g={};g[i]=function(){return this};var w=Object.getPrototypeOf,x=w&&w(w(N([])));x&&x!==r&&n.call(x,i)&&(g=x);var P=m.prototype=v.prototype=Object.create(g);function j(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function O(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if("throw"!==u.type){var c=u.arg,l=c.value;return l&&"object"==typeof l&&n.call(l,"__await")?t.resolve(l.__await).then((function(e){r("next",e,a,s)}),(function(e){r("throw",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r("throw",e,a,s)}))}s(u.arg)}var o;this._invoke=function(e,n){function i(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(i,i):i()}}function M(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,M(e,r),"throw"===r.method))return y;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return y}var o=f(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,y;var i=o.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,y):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function N(e){if(e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}return{next:E}}function E(){return{value:t,done:!0}}return b.prototype=P.constructor=m,m.constructor=b,b.displayName=u(m,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,u(e,s,"GeneratorFunction")),e.prototype=Object.create(P),e},e.awrap=function(e){return{__await:e}},j(O.prototype),O.prototype[a]=function(){return this},e.AsyncIterator=O,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new O(c(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},j(P),u(P,s,"Generator"),P[i]=function(){return this},P.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=N,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return s.type="throw",s.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var u=n.call(a,"catchLoc"),c=n.call(a,"finallyLoc");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),y},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),T(r),y}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;T(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:N(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),y}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}},9159:()=>{},3399:()=>{},573:()=>{},4597:()=>{},2314:e=>{e.exports=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[18],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[15],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"Sr25519",website:"https://efinity.io/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"}]},9858:(e,t,r)=>{"use strict";var n=r(4155);Object.defineProperty(t,"__esModule",{value:!0}),t.PORT_EXTENSION=t.PORT_CONTENT=t.PHISHING_PAGE_REDIRECT=t.PASSWORD_EXPIRY_MS=t.PASSWORD_EXPIRY_MIN=t.MESSAGE_ORIGIN_PAGE=t.MESSAGE_ORIGIN_CONTENT=t.EXTENSION_PREFIX=t.ALLOWED_PATH=void 0,t.ALLOWED_PATH=["/","/account/import-ledger","/account/restore-json"],t.PHISHING_PAGE_REDIRECT="/phishing-page-detected";var o=n.env.EXTENSION_PREFIX||"";t.EXTENSION_PREFIX=o;var i="".concat(o,"content");t.PORT_CONTENT=i;var a="".concat(o,"extension");t.PORT_EXTENSION=a;var s="".concat(o,"page");t.MESSAGE_ORIGIN_PAGE=s;var u="".concat(o,"content");t.MESSAGE_ORIGIN_CONTENT=u,t.PASSWORD_EXPIRY_MIN=15,t.PASSWORD_EXPIRY_MS=9e5},5736:(e,t,r)=>{"use strict";var n,o=r(9442),i=o(r(3398)),a=o(r(6573));Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=function(){function e(t){(0,i.default)(this,e),n=t}return(0,a.default)(e,[{key:"get",value:function(e){return n("pub(accounts.list)",{anyType:e})}},{key:"subscribe",value:function(e){return n("pub(accounts.subscribe)",null,e).catch((function(e){return console.error(e)})),function(){}}}]),e}();t.default=s},2688:(e,t,r)=>{"use strict";var n=r(9442),o=n(r(6573)),i=n(r(3398)),a=r(9442);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=a(r(5736)),u=a(r(5612)),c=a(r(8797)),f=a(r(6181)),l=(0,o.default)((function e(t){(0,i.default)(this,e),this.accounts=new s.default(t),this.metadata=new u.default(t),this.provider=new c.default(t),this.signer=new f.default(t)}));t.default=l},5612:(e,t,r)=>{"use strict";var n,o=r(9442),i=o(r(3398)),a=o(r(6573));Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=function(){function e(t){(0,i.default)(this,e),n=t}return(0,a.default)(e,[{key:"get",value:function(){return n("pub(metadata.list)")}},{key:"provide",value:function(e){return n("pub(metadata.provide)",e)}}]),e}();t.default=s},8797:(e,t,r)=>{"use strict";var n=r(9442),o=n(r(2045)),i=n(r(7258)),a=n(r(3398)),s=n(r(6573)),u=n(r(4201)),c=n(r(7468)),f=r(9442);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l,d=f(r(6729)),h=r(9338),p=(0,h.logger)("PostMessageProvider"),y=(0,c.default)("eventemitter"),v=(0,c.default)("isConnected"),b=(0,c.default)("subscriptions"),m=function(){function e(t){(0,a.default)(this,e),Object.defineProperty(this,y,{writable:!0,value:void 0}),Object.defineProperty(this,v,{writable:!0,value:!1}),Object.defineProperty(this,b,{writable:!0,value:{}}),(0,u.default)(this,y)[y]=new d.default,l=t}var t,r,n,c,f;return(0,s.default)(e,[{key:"clone",value:function(){return new e(l)}},{key:"connect",value:(f=(0,i.default)(o.default.mark((function e(){return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:console.error("PostMessageProvider.disconnect() is not implemented.");case 1:case"end":return e.stop()}}),e)}))),function(){return f.apply(this,arguments)})},{key:"disconnect",value:(c=(0,i.default)(o.default.mark((function e(){return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:console.error("PostMessageProvider.disconnect() is not implemented.");case 1:case"end":return e.stop()}}),e)}))),function(){return c.apply(this,arguments)})},{key:"hasSubscriptions",get:function(){return!0}},{key:"isConnected",get:function(){return(0,u.default)(this,v)[v]}},{key:"listProviders",value:function(){return l("pub(rpc.listProviders)",void 0)}},{key:"on",value:function(e,t){var r=this;return(0,u.default)(this,y)[y].on(e,t),function(){(0,u.default)(r,y)[y].removeListener(e,t)}}},{key:"send",value:(n=(0,i.default)(o.default.mark((function e(t,r,n,i){var a,s,c;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!i){e.next=7;break}return a=i.callback,s=i.type,e.next=4,l("pub(rpc.subscribe)",{method:t,params:r,type:s},(function(e){i.callback(null,e)}));case 4:return c=e.sent,(0,u.default)(this,b)[b]["".concat(s,"::").concat(c)]=a,e.abrupt("return",c);case 7:return e.abrupt("return",l("pub(rpc.send)",{method:t,params:r}));case 8:case"end":return e.stop()}}),e,this)}))),function(e,t,r,o){return n.apply(this,arguments)})},{key:"startProvider",value:(r=(0,i.default)(o.default.mark((function e(t){var r,n=this;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(0,u.default)(this,v)[v]=!1,(0,u.default)(this,y)[y].emit("disconnected"),e.next=4,l("pub(rpc.startProvider)",t);case 4:return r=e.sent,l("pub(rpc.subscribeConnected)",null,(function(e){return(0,u.default)(n,v)[v]=e,e?(0,u.default)(n,y)[y].emit("connected"):(0,u.default)(n,y)[y].emit("disconnected"),!0})),e.abrupt("return",r);case 7:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"subscribe",value:function(e,t,r,n){return this.send(t,r,!1,{callback:n,type:e})}},{key:"unsubscribe",value:(t=(0,i.default)(o.default.mark((function e(t,r,n){var i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i="".concat(t,"::").concat(n),!(0,h.isUndefined)((0,u.default)(this,b)[b][i])){e.next=4;break}return p.debug((function(){return"Unable to find active subscription=".concat(i)})),e.abrupt("return",!1);case 4:return delete(0,u.default)(this,b)[b][i],e.abrupt("return",this.send(r,[n]));case 6:case"end":return e.stop()}}),e,this)}))),function(e,r,n){return t.apply(this,arguments)})}]),e}();t.default=m},6181:(e,t,r)=>{"use strict";var n,o=r(9442),i=o(r(2045)),a=o(r(9041)),s=o(r(7258)),u=o(r(3398)),c=o(r(6573));function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(Object(r),!0).forEach((function(t){(0,a.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var d=0,h=function(){function e(t){(0,u.default)(this,e),n=t}var t,r;return(0,c.default)(e,[{key:"signPayload",value:(r=(0,s.default)(i.default.mark((function e(t){var r,o;return i.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=++d,e.next=3,n("pub(extrinsic.sign)",t);case 3:return o=e.sent,e.abrupt("return",l(l({},o),{},{id:r}));case 5:case"end":return e.stop()}}),e)}))),function(e){return r.apply(this,arguments)})},{key:"signRaw",value:(t=(0,s.default)(i.default.mark((function e(t){var r,o;return i.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=++d,e.next=3,n("pub(bytes.sign)",t);case 3:return o=e.sent,e.abrupt("return",l(l({},o),{},{id:r}));case 5:case"end":return e.stop()}}),e)}))),function(e){return t.apply(this,arguments)})}]),e}();t.default=h},398:(e,t,r)=>{"use strict";var n=r(9442),o=n(r(2045)),i=n(r(7258)),a=r(9442);Object.defineProperty(t,"__esModule",{value:!0}),t.enable=function(e){return d.apply(this,arguments)},t.handleResponse=function(e){var t=f[e.id];t?(t.subscriber||delete f[e.id],e.subscription?t.subscriber(e.subscription):e.error?t.reject(new Error(e.error)):t.resolve(e.response)):console.error("Unknown response: ".concat(JSON.stringify(e)))},t.redirectIfPhishing=function(){return h.apply(this,arguments)},t.sendMessage=l;var s=r(9858),u=r(9827),c=a(r(2688)),f={};function l(e,t,r){return new Promise((function(n,o){var i=(0,u.getId)();f[i]={reject:o,resolve:n,subscriber:r};var a={id:i,message:e,origin:s.MESSAGE_ORIGIN_PAGE,request:t||null};window.postMessage(a,"*")}))}function d(){return(d=(0,i.default)(o.default.mark((function e(t){return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,l("pub(authorize.tab)",{origin:t});case 2:return e.abrupt("return",new c.default(l));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function h(){return(h=(0,i.default)(o.default.mark((function e(){var t;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,l("pub(phishing.redirectIfDenied)");case 2:return t=e.sent,e.abrupt("return",t);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},9827:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getId=function(){return"".concat(n.EXTENSION_PREFIX,".").concat(Date.now(),".").concat(++o)};var n=r(9858),o=0},2731:(e,t,r)=>{"use strict";var n=r(6391),o=n(r(4965)),i=n(r(6490)),a=n(r(918)),s=n(r(762)),u=n(r(6497));function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){(0,s.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}Object.defineProperty(t,"__esModule",{value:!0}),t.isWeb3Injected=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return p.packageInfo}}),Object.defineProperty(t,"unwrapBytes",{enumerable:!0,get:function(){return y.unwrapBytes}}),t.web3Accounts=j,t.web3AccountsSubscribe=function(e){return M.apply(this,arguments)},t.web3Enable=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!e)throw new Error("You must pass a name for your app to the web3Enable function");var n=r.length?Promise.all(r.map((function(e){return e().catch((function(){return!1}))}))):Promise.resolve([!0]);return t.web3EnablePromise=x=(0,h.documentReadyPromise)((function(){return n.then((function(){return P(e).then((function(e){return e.filter((function(e){return!!e[1]})).map((function(e){var t=(0,u.default)(e,2),r=t[0],n=t[1];return n.accounts.subscribe||(n.accounts.subscribe=function(e){return n.accounts.get().then(e).catch(console.error),function(){}}),f(f({},r),n)}))})).catch((function(){return[]})).then((function(e){var r=e.map((function(e){var t=e.name,r=e.version;return"".concat(t,"/").concat(r)}));return t.isWeb3Injected=w=b(),console.log("web3Enable: Enabled ".concat(e.length," extension").concat(1!==e.length?"s":"",": ").concat(r.join(", "))),e}))}))})),x},t.web3EnablePromise=void 0,t.web3FromAddress=function(e){return z.apply(this,arguments)},t.web3FromSource=k,t.web3ListRpcProviders=function(e){return N.apply(this,arguments)},t.web3UseRpcProvider=function(e,t){return E.apply(this,arguments)},Object.defineProperty(t,"wrapBytes",{enumerable:!0,get:function(){return y.wrapBytes}});var l=r(9338),d=r(4459),h=r(8683),p=r(4804),y=r(820),v=window;function b(){return 0!==Object.keys(v.injectedWeb3).length}function m(e){throw new Error("".concat(e,": web3Enable(originName) needs to be called before ").concat(e))}function g(e,t,r){return t.map((function(t){var n=t.address,o=t.genesisHash,i=t.name,a=t.type;return{address:42===n.length?n:(0,d.encodeAddress)((0,d.decodeAddress)(n),r),meta:{genesisHash:o,name:i,source:e},type:a}}))}v.injectedWeb3=v.injectedWeb3||{};var w=b();t.isWeb3Injected=w;var x=null;function P(e){return Promise.all(Object.entries(v.injectedWeb3).map((function(t){var r=(0,u.default)(t,2),n=r[0],o=r[1],i=o.enable,a=o.version;return Promise.all([Promise.resolve({name:n,version:a}),i(e).catch((function(e){console.error("Error initializing ".concat(n,": ").concat(e.message))}))])})))}function j(){return O.apply(this,arguments)}function O(){return O=(0,a.default)(o.default.mark((function e(){var t,r,n,s,u,c,f=arguments;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=f.length>0&&void 0!==f[0]?f[0]:{},r=t.accountType,n=t.ss58Format,x){e.next=3;break}return e.abrupt("return",m("web3Accounts"));case 3:return s=[],e.next=6,x;case 6:return u=e.sent,e.next=9,Promise.all(u.map(function(){var e=(0,a.default)(o.default.mark((function e(t){var i,a,s;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=t.accounts,a=t.name,e.prev=1,e.next=4,i.get();case 4:return s=e.sent,e.abrupt("return",g(a,s.filter((function(e){var t=e.type;return!t||!r||r.includes(t)})),n));case 8:return e.prev=8,e.t0=e.catch(1),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}()));case 9:return e.sent.forEach((function(e){s.push.apply(s,(0,i.default)(e))})),c=s.map((function(e){return e.address})),console.log("web3Accounts: Found ".concat(s.length," address").concat(1!==s.length?"es":"",": ").concat(c.join(", "))),e.abrupt("return",s);case 14:case"end":return e.stop()}}),e)}))),O.apply(this,arguments)}function M(){return M=(0,a.default)(o.default.mark((function e(t){var r,n,a,s,c,f=arguments;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=f.length>1&&void 0!==f[1]?f[1]:{},n=r.ss58Format,x){e.next=3;break}return e.abrupt("return",m("web3AccountsSubscribe"));case 3:return a={},s=function(){return t(Object.entries(a).reduce((function(e,t){var r=(0,u.default)(t,2),o=r[0],a=r[1];return e.push.apply(e,(0,i.default)(g(o,a,n))),e}),[]))},e.next=7,x;case 7:return c=e.sent.map((function(e){var t=e.accounts.subscribe,r=e.name;return t((function(e){a[r]=e,s()}))})),e.abrupt("return",(function(){c.forEach((function(e){e()}))}));case 9:case"end":return e.stop()}}),e)}))),M.apply(this,arguments)}function k(e){return T.apply(this,arguments)}function T(){return(T=(0,a.default)(o.default.mark((function e(t){var r,n;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=2;break}return e.abrupt("return",m("web3FromSource"));case 2:return e.next=4,x;case 4:if(r=e.sent,n=t&&r.find((function(e){return e.name===t}))){e.next=8;break}throw new Error("web3FromSource: Unable to find an injected ".concat(t));case 8:return e.abrupt("return",n);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function z(){return(z=(0,a.default)(o.default.mark((function e(t){var r,n,i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=2;break}return e.abrupt("return",m("web3FromAddress"));case 2:return e.next=4,j();case 4:if(r=e.sent,t&&(i=(0,d.decodeAddress)(t),n=r.find((function(e){return(0,l.u8aEq)((0,d.decodeAddress)(e.address),i)}))),n){e.next=8;break}throw new Error("web3FromAddress: Unable to find injected ".concat(t));case 8:return e.abrupt("return",k(n.meta.source));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function N(){return(N=(0,a.default)(o.default.mark((function e(t){var r,n;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k(t);case 2:if(r=e.sent,n=r.provider){e.next=7;break}return console.warn("Extension ".concat(t," does not expose any provider")),e.abrupt("return",null);case 7:return e.abrupt("return",n.listProviders());case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function E(){return(E=(0,a.default)(o.default.mark((function e(t,r){var n,i,a;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k(t);case 2:if(n=e.sent,i=n.provider){e.next=6;break}throw new Error("Extension ".concat(t," does not expose any provider"));case 6:return e.next=8,i.startProvider(r);case 8:return a=e.sent,e.abrupt("return",{meta:a,provider:i});case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}t.web3EnablePromise=x},7118:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2731);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},4804:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/extension-dapp",path:"/",type:"cjs",version:"0.43.1"}},8683:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.documentReadyPromise=function(e){return new Promise((function(t){"complete"===document.readyState?t(e()):window.addEventListener("load",(function(){return t(e())}))}))}},820:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wrapBytes=t.unwrapBytes=t.isWrapped=t.PREFIX=t.POSTFIX=t.ETHEREUM=void 0;var n=r(9338),o=n.U8A_WRAP_ETHEREUM;t.ETHEREUM=o;var i=n.U8A_WRAP_POSTFIX;t.POSTFIX=i;var a=n.U8A_WRAP_PREFIX;t.PREFIX=a;var s=n.u8aIsWrapped;t.isWrapped=s;var u=n.u8aUnwrapBytes;t.unwrapBytes=u;var c=n.u8aWrapBytes;t.wrapBytes=c},3254:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.injectExtension=function(e,t){var r=t.name,n=t.version,o=window;o.injectedWeb3=o.injectedWeb3||{},o.injectedWeb3[r]={enable:function(t){return e(t)},version:n}},Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return n.packageInfo}});var n=r(6996)},2167:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(3254);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},6996:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/extension-inject",path:"/",type:"cjs",version:"0.43.1"}},4476:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownGenesis=void 0,t.knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]}},4897:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownIcon=void 0,t.knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"}},5547:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"knownGenesis",{enumerable:!0,get:function(){return n.knownGenesis}}),Object.defineProperty(t,"knownIcon",{enumerable:!0,get:function(){return o.knownIcon}}),Object.defineProperty(t,"knownLedger",{enumerable:!0,get:function(){return i.knownLedger}}),Object.defineProperty(t,"knownTestnet",{enumerable:!0,get:function(){return a.knownTestnet}});var n=r(4476),o=r(4897),i=r(3712),a=r(7519)},3712:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownLedger=void 0,t.knownLedger={bifrost:788,centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,sora:617,statemine:434,statemint:354,xxnetwork:1955}},7519:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownTestnet=void 0,t.knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0}},15:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={packageInfo:!0};Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}});var o=r(9113);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var i=r(7152)},9113:(e,t,r)=>{"use strict";var n=r(8749);Object.defineProperty(t,"__esModule",{value:!0}),t.selectableNetworks=t.availableNetworks=t.allNetworks=void 0;var o=n(r(2314)),i=r(5547),a=[0,2,42],s=["testnet"],u=o.default.map((function(e){var t=e.network||"",r=t.replace(/_/g,"-").split("-"),n=e;return n.slip44=i.knownLedger[t],n.hasLedgerSupport=!!n.slip44,n.genesisHash=i.knownGenesis[t]||[],n.icon=i.knownIcon[t]||"substrate",n.isTestnet=!!i.knownTestnet[t]||s.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,n}));t.allNetworks=u;var c=u.filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){var r=a.includes(e.prefix);return r===a.includes(t.prefix)?r?0:e.displayName.localeCompare(t.displayName):r?-1:1}));t.availableNetworks=c;var f=c.filter((function(e){var t=e.genesisHash,r=e.prefix;return!!t.length||42===r}));t.selectableNetworks=f},7152:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/networks",path:"/",type:"cjs",version:"9.1.1"}},2349:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToEvm=function(e,t){return(0,n.decodeAddress)(e,t).subarray(0,20)};var n=r(5709)},2086:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddress=function(e,t){var r;try{r=(0,o.base58Decode)(e)}catch(e){return[!1,e.message]}var s=(0,i.checkAddressChecksum)(r),u=(0,n.default)(s,4),c=u[0],f=u[3];return f!==t?[!1,"Prefix mismatch, expected ".concat(t,", found ").concat(f)]:a.defaults.allowedEncodedLengths.includes(r.length)?[c,c?null:"Invalid decoded address checksum"]:[!1,"Invalid decoded address length"]};var o=r(5603),i=r(8184),a=r(2327)},8184:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddressChecksum=function(e){var t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,o=[34+t,35+t].includes(e.length),i=e.length-(o?2:1),a=(0,n.sshash)(e.subarray(0,i));return[0==(128&e[0])&&![46,47].includes(e[0])&&(o?e[e.length-2]===a[0]&&e[e.length-1]===a[1]:e[e.length-1]===a[0]),i,t,r]};var n=r(8882)},5709:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));Object.defineProperty(t,"__esModule",{value:!0}),t.decodeAddress=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if((0,o.assert)(e,"Invalid empty address passed"),(0,o.isU8a)(e)||(0,o.isHex)(e))return(0,o.u8aToU8a)(e);try{var u=(0,i.base58Decode)(e);(0,o.assert)(s.defaults.allowedEncodedLengths.includes(u.length),"Invalid decoded address length");var c=(0,a.checkAddressChecksum)(u),f=(0,n.default)(c,4),l=f[0],d=f[1],h=f[2],p=f[3];return(0,o.assert)(t||l,"Invalid decoded address checksum"),(0,o.assert)([-1,p].includes(r),(function(){return"Expected ss58Format ".concat(r,", received ").concat(p)})),u.slice(h,d)}catch(t){throw new Error("Decoding ".concat(e,": ").concat(t.message))}};var o=r(9338),i=r(5603),a=r(8184),s=r(2327)},2327:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaults=void 0;var n={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:r(3545).availableNetworks.map((function(e){return e.prefix})),prefix:42};t.defaults=n},4003:(e,t,r)=>{"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.deriveAddress=function(e,t,r){var f=(0,i.keyExtractPath)(t).path;(0,o.assert)(f.length&&!f.every(c),"Expected suri to contain a combination of non-hard paths");var l,d=(0,s.decodeAddress)(e),h=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(u)throw a}}}}(f);try{for(h.s();!(l=h.n()).done;){var p=l.value.chainCode;d=(0,a.sr25519DerivePublic)(d,p)}}catch(e){h.e(e)}finally{h.f()}return(0,u.encodeAddress)(d,r)};var o=r(9338),i=r(3992),a=r(1730),s=r(5709),u=r(1031);function c(e){return e.isHard}},1031:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeAddress=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a.defaults.prefix,r=(0,i.decodeAddress)(e);(0,n.assert)(t>=0&&t<=16383&&![46,47].includes(t),"Out of range ss58Format specified"),(0,n.assert)(a.defaults.allowedDecodedLengths.includes(r.length),(function(){return"Expected a valid key to convert, with length ".concat(a.defaults.allowedDecodedLengths.join(", "))}));var u=(0,n.u8aConcat)(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],r);return(0,o.base58Encode)((0,n.u8aConcat)(u,(0,s.sshash)(u).subarray(0,[32,33].includes(r.length)?2:1)))};var n=r(9338),o=r(5603),i=r(5709),a=r(2327),s=r(8882)},3686:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeDerivedAddress=function(e,t,r){return(0,o.encodeAddress)((0,i.createKeyDerived)((0,n.decodeAddress)(e),t),r)};var n=r(5709),o=r(1031),i=r(6012)},4018:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeMultiAddress=function(e,t,r){return(0,n.encodeAddress)((0,o.createKeyMulti)(e,t),r)};var n=r(1031),o=r(5848)},7650:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressEq=function(e,t){return(0,n.u8aEq)((0,o.decodeAddress)(e),(0,o.decodeAddress)(t))};var n=r(9338),o=r(5709)},475:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.evmToAddress=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"blake2",a=(0,n.u8aConcat)("evm:",e);return(0,n.assert)(24===a.length,(function(){return"Converting ".concat(e,": Invalid evm address length")})),(0,i.encodeAddress)((0,o.hasher)(r,a),t)};var n=r(9338),o=r(2156),i=r(1031)},18:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"addressEq",{enumerable:!0,get:function(){return p.addressEq}}),Object.defineProperty(t,"addressToEvm",{enumerable:!0,get:function(){return n.addressToEvm}}),Object.defineProperty(t,"checkAddress",{enumerable:!0,get:function(){return o.checkAddress}}),Object.defineProperty(t,"checkAddressChecksum",{enumerable:!0,get:function(){return i.checkAddressChecksum}}),Object.defineProperty(t,"createKeyDerived",{enumerable:!0,get:function(){return s.createKeyDerived}}),Object.defineProperty(t,"createKeyMulti",{enumerable:!0,get:function(){return a.createKeyMulti}}),Object.defineProperty(t,"decodeAddress",{enumerable:!0,get:function(){return u.decodeAddress}}),Object.defineProperty(t,"deriveAddress",{enumerable:!0,get:function(){return c.deriveAddress}}),Object.defineProperty(t,"encodeAddress",{enumerable:!0,get:function(){return f.encodeAddress}}),Object.defineProperty(t,"encodeDerivedAddress",{enumerable:!0,get:function(){return l.encodeDerivedAddress}}),Object.defineProperty(t,"encodeMultiAddress",{enumerable:!0,get:function(){return d.encodeMultiAddress}}),Object.defineProperty(t,"evmToAddress",{enumerable:!0,get:function(){return h.evmToAddress}}),Object.defineProperty(t,"isAddress",{enumerable:!0,get:function(){return y.isAddress}}),Object.defineProperty(t,"setSS58Format",{enumerable:!0,get:function(){return v.setSS58Format}}),Object.defineProperty(t,"sortAddresses",{enumerable:!0,get:function(){return b.sortAddresses}}),Object.defineProperty(t,"validateAddress",{enumerable:!0,get:function(){return m.validateAddress}});var n=r(2349),o=r(2086),i=r(8184),a=r(5848),s=r(6012),u=r(5709),c=r(4003),f=r(1031),l=r(3686),d=r(4018),h=r(475),p=r(7650),y=r(6622),v=r(1347),b=r(7831),m=r(8311)},6622:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAddress=function(e,t,r){try{return(0,n.validateAddress)(e,t,r)}catch(e){return!1}};var n=r(8311)},6012:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyDerived=function(e,t){return(0,o.blake2AsU8a)((0,n.u8aConcat)(s,(0,a.decodeAddress)(e),(0,n.bnToU8a)(t,i.BN_LE_16_OPTS)))};var n=r(9338),o=r(4410),i=r(2421),a=r(5709),s=(0,n.stringToU8a)("modlpy/utilisuba")},5848:(e,t,r)=>{"use strict";var n=r(2395)(r(1407));Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyMulti=function(e,t){return(0,i.blake2AsU8a)(o.u8aConcat.apply(void 0,[u,(0,o.compactToU8a)(e.length)].concat((0,n.default)((0,o.u8aSorted)(e.map(s.addressToU8a))),[(0,o.bnToU8a)(t,a.BN_LE_16_OPTS)])))};var o=r(9338),i=r(4410),a=r(2421),s=r(7377),u=(0,o.stringToU8a)("modlpy/utilisuba")},1347:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSS58Format=function(e){i.warn("Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as pat of the address encode function"),o.defaults.prefix=e};var n=r(9338),o=r(2327),i=(0,n.logger)("setSS58Format")},7831:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sortAddresses=function(e,t){return(0,n.u8aSorted)(e.map(i.addressToU8a)).map((function(e){return(0,o.encodeAddress)(e,t)}))};var n=r(9338),o=r(1031),i=r(7377)},8882:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sshash=function(e){return(0,o.blake2AsU8a)((0,n.u8aConcat)(i,e),512)};var n=r(9338),o=r(4410),i=(0,n.stringToU8a)("SS58PRE")},7377:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToU8a=function(e){return(0,n.decodeAddress)(e)};var n=r(5709)},8311:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateAddress=function(e,t,r){return!!(0,n.decodeAddress)(e,t,r)};var n=r(5709)},3141:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase32=t.base32Validate=t.base32Encode=t.base32Decode=void 0;var n=r(6090),o=r(9817),i="abcdefghijklmnopqrstuvwxyz234567",a={chars:i,coder:n.utils.chain(n.utils.radix2(5),n.utils.alphabet(i),{decode:function(e){return e.split("")},encode:function(e){return e.join("")}}),ipfs:"b",type:"base32"},s=(0,o.createValidate)(a);t.base32Validate=s;var u=(0,o.createIs)(s);t.isBase32=u;var c=(0,o.createDecode)(a,s);t.base32Decode=c;var f=(0,o.createEncode)(a);t.base32Encode=f},9817:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDecode=function(e,t){var r=e.coder,n=e.ipfs;return function(e,o){return t(e,o),r.decode(n&&o?e.substr(1):e)}},t.createEncode=function(e){var t=e.coder,r=e.ipfs;return function(e,o){var i=t.encode((0,n.u8aToU8a)(e));return r&&o?"".concat(r).concat(i):i}},t.createIs=function(e){return function(t,r){try{return e(t,r)}catch(e){return!1}}},t.createValidate=function(e){var t=e.chars,r=e.ipfs,o=e.type;return function(e,i){(0,n.assert)(e&&"string"==typeof e,(function(){return"Expected non-null, non-empty ".concat(o," string input")})),r&&i&&(0,n.assert)(e[0]===r,(function(){return"Expected ipfs-compatible ".concat(o," to start with '").concat(r,"'")}));for(var a=function(r){(0,n.assert)(t.includes(e[r])||"="===e[r]&&(r===e.length-1||!t.includes(e[r+1])),(function(){return"Invalid ".concat(o,' character "').concat(e[r],'" (0x').concat(e.charCodeAt(r).toString(16),") at index ").concat(r)}))},s=i?1:0;s<e.length;s++)a(s);return!0}};var n=r(9338)},612:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base32Decode",{enumerable:!0,get:function(){return n.base32Decode}}),Object.defineProperty(t,"base32Encode",{enumerable:!0,get:function(){return n.base32Encode}}),Object.defineProperty(t,"base32Validate",{enumerable:!0,get:function(){return n.base32Validate}}),Object.defineProperty(t,"isBase32",{enumerable:!0,get:function(){return n.isBase32}});var n=r(3141)},1995:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase58=t.base58Validate=t.base58Encode=t.base58Decode=void 0;var n=r(6090),o=r(9817),i={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:n.base58,ipfs:"z",type:"base58"},a=(0,o.createValidate)(i);t.base58Validate=a;var s=(0,o.createDecode)(i,a);t.base58Decode=s;var u=(0,o.createEncode)(i);t.base58Encode=u;var c=(0,o.createIs)(a);t.isBase58=c},5603:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base58Decode",{enumerable:!0,get:function(){return n.base58Decode}}),Object.defineProperty(t,"base58Encode",{enumerable:!0,get:function(){return n.base58Encode}}),Object.defineProperty(t,"base58Validate",{enumerable:!0,get:function(){return n.base58Validate}}),Object.defineProperty(t,"isBase58",{enumerable:!0,get:function(){return n.isBase58}});var n=r(1995)},7037:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase64=t.base64Validate=t.base64Encode=t.base64Decode=void 0;var n=r(6090),o=r(9817),i={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:n.base64,type:"base64"},a=(0,o.createValidate)(i);t.base64Validate=a;var s=(0,o.createIs)(a);t.isBase64=s;var u=(0,o.createDecode)(i,a);t.base64Decode=u;var c=(0,o.createEncode)(i);t.base64Encode=c},1584:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base64Decode",{enumerable:!0,get:function(){return n.base64Decode}}),Object.defineProperty(t,"base64Encode",{enumerable:!0,get:function(){return n.base64Encode}}),Object.defineProperty(t,"base64Pad",{enumerable:!0,get:function(){return o.base64Pad}}),Object.defineProperty(t,"base64Trim",{enumerable:!0,get:function(){return i.base64Trim}}),Object.defineProperty(t,"base64Validate",{enumerable:!0,get:function(){return n.base64Validate}}),Object.defineProperty(t,"isBase64",{enumerable:!0,get:function(){return n.isBase64}});var n=r(7037),o=r(5925),i=r(1567)},5925:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Pad=function(e){return e.padEnd(e.length+e.length%4,"=")}},1567:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Trim=function(e){for(;e.length&&"="===e[e.length-1];)e=e.slice(0,-1);return e}},4410:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2AsHex=void 0,t.blake2AsU8a=a;var n=r(3803),o=r(9338),i=r(6431);function a(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,r=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,s=Math.ceil(t/8),u=(0,o.u8aToU8a)(e);return!o.hasBigInt||!a&&(0,i.isReady)()?(0,i.blake2b)(u,(0,o.u8aToU8a)(r),s):(0,n.blake2b)(u,{dkLen:s,key:r||void 0})}var s=(0,r(162).createAsHex)(a);t.blake2AsHex=s},3172:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"blake2AsHex",{enumerable:!0,get:function(){return n.blake2AsHex}}),Object.defineProperty(t,"blake2AsU8a",{enumerable:!0,get:function(){return n.blake2AsU8a}});var n=r(4410)},2421:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_LE_OPTS=t.BN_LE_512_OPTS=t.BN_LE_32_OPTS=t.BN_LE_256_OPTS=t.BN_LE_16_OPTS=t.BN_BE_OPTS=t.BN_BE_32_OPTS=t.BN_BE_256_OPTS=void 0,t.BN_BE_OPTS={isLe:!1},t.BN_LE_OPTS={isLe:!0},t.BN_LE_16_OPTS={bitLength:16,isLe:!0},t.BN_BE_32_OPTS={bitLength:32,isLe:!1},t.BN_LE_32_OPTS={bitLength:32,isLe:!0},t.BN_BE_256_OPTS={bitLength:256,isLe:!1},t.BN_LE_256_OPTS={bitLength:256,isLe:!0},t.BN_LE_512_OPTS={bitLength:512,isLe:!0}},7097:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={packageInfo:!0};Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}}),r(5980);var o=r(9377),i=r(18);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var a=r(612);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var s=r(5603);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var u=r(1584);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var c=r(3172);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var f=r(5840);Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var l=r(9309);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var d=r(1856);Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var h=r(9769);Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var p=r(3665);Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=r(9399);Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=r(9774);Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var b=r(3992);Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var m=r(3050);Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var g=r(3545);Object.keys(g).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===g[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return g[e]}}))}));var w=r(9459);Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}));var x=r(2257);Object.keys(x).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===x[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return x[e]}}))}));var P=r(1177);Object.keys(P).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===P[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return P[e]}}))}));var j=r(7150);Object.keys(j).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===j[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return j[e]}}))}));var O=r(9640);Object.keys(O).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===O[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return O[e]}}))}));var M=r(3082);Object.keys(M).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===M[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return M[e]}}))}));var k=r(8571);Object.keys(k).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===k[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return k[e]}}))}));var T=r(1730);Object.keys(T).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===T[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return T[e]}}))}));var z=r(9151);Object.keys(z).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===z[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return z[e]}}))}))},5980:(e,t,r)=>{"use strict";r(9574);var n=r(9656),o=r(9338),i=r(3665);n.utils.hmacSha256Sync=function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return(0,i.hmacSha256AsU8a)(e,o.u8aConcat.apply(void 0,r))}},5840:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cryptoIsReady=void 0,t.cryptoWaitReady=function(){return(0,o.waitReady)().then((function(){return(0,n.assert)((0,o.isReady)(),"Unable to initialize @polkadot/util-crypto"),!0})).catch((function(){return!1}))};var n=r(9338),o=r(6431),i=o.isReady;t.cryptoIsReady=i},9310:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(7152),o=r(4216),i=r(1649),a=[n.packageInfo,o.packageInfo,i.packageInfo];t.default=a},2868:(e,t,r)=>{"use strict";var n=r(2395),o=r(9338),i=n(r(9310)),a=r(9377);(0,o.detectPackage)(a.packageInfo,null,i.default)},8179:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.convertPublicKeyToCurve25519=function(e){return(0,i.assertReturn)(o.default.convertPublicKey(e),"Unable to convert publicKey to ed25519")},t.convertSecretKeyToCurve25519=function(e){return o.default.convertSecretKey(e)};var o=n(r(5678)),i=r(9338)},5390:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519DeriveHard=function(e,t){return(0,n.assert)((0,n.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,o.blake2AsU8a)((0,n.u8aConcat)(i,e,t))};var n=r(9338),o=r(4410),i=(0,n.compactAddLength)((0,n.stringToU8a)("Ed25519HDKD"))},9309:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"convertPublicKeyToCurve25519",{enumerable:!0,get:function(){return n.convertPublicKeyToCurve25519}}),Object.defineProperty(t,"convertSecretKeyToCurve25519",{enumerable:!0,get:function(){return n.convertSecretKeyToCurve25519}}),Object.defineProperty(t,"ed25519DeriveHard",{enumerable:!0,get:function(){return o.ed25519DeriveHard}}),Object.defineProperty(t,"ed25519PairFromRandom",{enumerable:!0,get:function(){return i.ed25519PairFromRandom}}),Object.defineProperty(t,"ed25519PairFromSecret",{enumerable:!0,get:function(){return a.ed25519PairFromSecret}}),Object.defineProperty(t,"ed25519PairFromSeed",{enumerable:!0,get:function(){return s.ed25519PairFromSeed}}),Object.defineProperty(t,"ed25519PairFromString",{enumerable:!0,get:function(){return u.ed25519PairFromString}}),Object.defineProperty(t,"ed25519Sign",{enumerable:!0,get:function(){return c.ed25519Sign}}),Object.defineProperty(t,"ed25519Verify",{enumerable:!0,get:function(){return f.ed25519Verify}});var n=r(8179),o=r(5390),i=r(9128),a=r(2034),s=r(5091),u=r(7411),c=r(7010),f=r(5535)},9128:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromRandom=function(){return(0,o.ed25519PairFromSeed)((0,n.randomAsU8a)())};var n=r(1177),o=r(5091)},2034:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSecret=function(e){return o.default.sign.keyPair.fromSecretKey(e)};var o=n(r(3110))},5091:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSeed=function(e,t){if(!t&&(0,i.isReady)()){var r=(0,i.ed25519KeypairFromSeed)(e);return{publicKey:r.slice(32),secretKey:r.slice(0,64)}}return o.default.sign.keyPair.fromSeed(e)};var o=n(r(3110)),i=r(6431)},7411:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromString=function(e){return(0,i.ed25519PairFromSeed)((0,o.blake2AsU8a)((0,n.stringToU8a)(e)))};var n=r(9338),o=r(4410),i=r(5091)},7010:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Sign=function(e,t,r){var n=t.publicKey,s=t.secretKey;(0,i.assert)(s,"Expected a valid secretKey");var u=(0,i.u8aToU8a)(e);return!r&&(0,a.isReady)()?(0,a.ed25519Sign)(n,s.subarray(0,32),u):o.default.sign.detached(u,s)};var o=n(r(3110)),i=r(9338),a=r(6431)},5535:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Verify=function(e,t,r,n){var s=(0,i.u8aToU8a)(e),u=(0,i.u8aToU8a)(r),c=(0,i.u8aToU8a)(t);return(0,i.assert)(32===u.length,(function(){return"Invalid publicKey, received ".concat(u.length,", expected 32")})),(0,i.assert)(64===c.length,(function(){return"Invalid signature, received ".concat(c.length," bytes, expected 64")})),!n&&(0,a.isReady)()?(0,a.ed25519Verify)(c,s,u):o.default.sign.detached.verify(s,c,u)};var o=n(r(3110)),i=r(9338),a=r(6431)},2281:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ethereumEncode=function(e){if(!e)return"0x";var t,r=(0,n.u8aToU8a)(e);(0,n.assert)([20,32,33,65].includes(r.length),"Invalid address or publicKey passed");for(var a=(0,n.u8aToHex)(([33,65].includes((t=r).length)&&(t=(0,o.keccakAsU8a)((0,i.secp256k1Expand)(t))),t.slice(-20)),-1,!1),s=(0,n.u8aToHex)((0,o.keccakAsU8a)(a),-1,!1),u="",c=0;c<40;c++)u="".concat(u).concat(parseInt(s[c],16)>7?a[c].toUpperCase():a[c]);return"0x".concat(u)};var n=r(9338),o=r(9774),i=r(9640)},1856:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"ethereumEncode",{enumerable:!0,get:function(){return n.ethereumEncode}}),Object.defineProperty(t,"isEthereumAddress",{enumerable:!0,get:function(){return o.isEthereumAddress}}),Object.defineProperty(t,"isEthereumChecksum",{enumerable:!0,get:function(){return i.isEthereumChecksum}});var n=r(2281),o=r(9525),i=r(1938)},9525:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumAddress=function(e){return!(!e||42!==e.length||!(0,n.isHex)(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||(0,o.isEthereumChecksum)(e))};var n=r(9338),o=r(1938)},1938:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumChecksum=function(e){for(var t=e.replace("0x",""),r=(0,n.u8aToHex)((0,o.keccakAsU8a)(t.toLowerCase()),-1,!1),i=0;i<40;i++)if((a=t[i])!==(parseInt(r[i],16)>7?a.toUpperCase():a.toLowerCase()))return!1;var a;return!0};var n=r(9338),o=r(9774)},2878:(e,t,r)=>{"use strict";function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(u)throw a}}}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.hdEthereum=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=(0,s.hmacShaAsU8a)(f,e,512),o=l(r.slice(0,32),r.slice(32));if(!t||"m"===t||"M"===t||"m'"===t||"M'"===t)return o;(0,i.assert)((0,c.hdValidatePath)(t),"Invalid derivation path");var a,u=t.split("/").slice(1),h=n(u);try{for(h.s();!(a=h.n()).done;){var p=a.value;o=d(o,parseInt(p,10)+(p.length>1&&p.endsWith("'")?c.HARDENED:0))}}catch(e){h.e(e)}finally{h.f()}return o};var i=r(9338),a=r(2421),s=r(3665),u=r(9640),c=r(4431),f=(0,i.stringToU8a)("Bitcoin seed");function l(e,t){return{chainCode:t,publicKey:(0,u.secp256k1PairFromSeed)(e).publicKey,secretKey:e}}function d(e,t){var r=(0,i.bnToU8a)(t,a.BN_BE_32_OPTS),n=t>=c.HARDENED?(0,i.u8aConcat)(new Uint8Array(1),e.secretKey,r):(0,i.u8aConcat)(e.publicKey,r);try{var o=(0,s.hmacShaAsU8a)(e.chainCode,n,512);return l((0,u.secp256k1PrivateKeyTweakAdd)(e.secretKey,o.slice(0,32)),o.slice(32))}catch(r){return d(e,t+1)}}},9769:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hdEthereum",{enumerable:!0,get:function(){return n.hdEthereum}}),Object.defineProperty(t,"hdLedger",{enumerable:!0,get:function(){return o.hdLedger}}),Object.defineProperty(t,"hdValidatePath",{enumerable:!0,get:function(){return i.hdValidatePath}});var n=r(2878),o=r(2424),i=r(4431)},194:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerDerivePrivate=function(e,t){var r=e.subarray(0,32),a=e.subarray(32,64),s=e.subarray(64,96),u=(0,n.u8aConcat)([0],r,a,(0,n.bnToU8a)(t,o.BN_LE_32_OPTS)),c=(0,i.hmacShaAsU8a)(s,u,512);return u[0]=1,(0,n.u8aConcat)((0,n.bnToU8a)((0,n.u8aToBn)(r,o.BN_LE_OPTS).iadd((0,n.u8aToBn)(c.subarray(0,28),o.BN_LE_OPTS).imul(n.BN_EIGHT)),o.BN_LE_512_OPTS).subarray(0,32),(0,n.bnToU8a)((0,n.u8aToBn)(a,o.BN_LE_OPTS).iadd((0,n.u8aToBn)(c.subarray(32,64),o.BN_LE_OPTS)),o.BN_LE_512_OPTS).subarray(0,32),(0,i.hmacShaAsU8a)(s,u,512).subarray(32,64))};var n=r(9338),o=r(2421),i=r(3665)},2424:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.hdLedger=function(e,t){var r=e.split(" ").map((function(e){return e.trim()})).filter((function(e){return e}));(0,i.assert)([12,24,25].includes(r.length),"Expected a mnemonic with 24 words (or 25 including a password)");var l=25===r.length?[r.slice(0,24).join(" "),r[24]]:[r.join(" "),""],d=(0,n.default)(l,2),h=d[0],p=d[1];(0,i.assert)((0,s.mnemonicValidate)(h),"Invalid mnemonic passed to ledger derivation"),(0,i.assert)((0,u.hdValidatePath)(t),"Invalid derivation path");var y,v=t.split("/").slice(1),b=(0,f.ledgerMaster)(h,p),m=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(u)throw a}}}}(v);try{for(m.s();!(y=m.n()).done;){var g=y.value,w=parseInt(g.replace(/'$/,""),10);b=(0,c.ledgerDerivePrivate)(b,w<u.HARDENED?w+u.HARDENED:w)}}catch(e){m.e(e)}finally{m.f()}return(0,a.ed25519PairFromSeed)(b.slice(0,32))};var i=r(9338),a=r(9309),s=r(3050),u=r(4431),c=r(194),f=r(7837)},7837:(e,t,r)=>{"use strict";var n=r(2395)(r(1407));Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerMaster=function(e,t){for(var r,u=(0,a.mnemonicToSeedSync)(e,t),c=(0,i.hmacShaAsU8a)(s,new Uint8Array([1].concat((0,n.default)(u))),256);!r||32&r[31];)r=(0,i.hmacShaAsU8a)(s,r||u,512);return r[0]&=248,r[31]&=127,r[31]|=64,(0,o.u8aConcat)(r,c)};var o=r(9338),i=r(3665),a=r(4953),s="ed25519 seed"},4431:(e,t)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.HARDENED=void 0,t.hdValidatePath=function(e){if(!e.startsWith("m/"))return!1;var t,o=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==n.return||n.return()}finally{if(u)throw a}}}}(e.split("/").slice(1));try{for(o.s();!(t=o.n()).done;){var i=t.value,a=/^\d+'?$/.test(i)?parseInt(i.replace(/'$/,""),10):Number.NaN;if(isNaN(a)||a>=n||a<0)return!1}}catch(e){o.e(e)}finally{o.f()}return!0};var n=2147483648;t.HARDENED=n},162:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAsHex=function(e){return function(){return(0,n.u8aToHex)(e.apply(void 0,arguments))}},t.createBitHasher=function(e,t){return function(r,n){return t(r,e,n)}},t.createDualHasher=function(e,t){return function(r){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,a=arguments.length>2?arguments[2]:void 0,s=(0,n.u8aToU8a)(r);return!n.hasBigInt||!a&&(0,o.isReady)()?e[i](s):t[i](s)}};var n=r(9338),o=r(6431)},3665:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hmacSha256AsU8a",{enumerable:!0,get:function(){return n.hmacSha256AsU8a}}),Object.defineProperty(t,"hmacSha512AsU8a",{enumerable:!0,get:function(){return n.hmacSha512AsU8a}}),Object.defineProperty(t,"hmacShaAsU8a",{enumerable:!0,get:function(){return n.hmacShaAsU8a}});var n=r(9577)},9577:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmacSha512AsU8a=t.hmacSha256AsU8a=void 0,t.hmacShaAsU8a=l;var n=r(9569),o=r(3061),i=r(6262),a=r(9338),s=r(6431),u={256:o.sha256,512:i.sha512},c={256:s.hmacSha256,512:s.hmacSha512};function f(e){return function(t,r,n){return l(t,r,e,n)}}function l(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:256,o=arguments.length>3?arguments[3]:void 0,i=(0,a.u8aToU8a)(e);return!a.hasBigInt||!o&&(0,s.isReady)()?c[r](i,t):(0,n.hmac)(u[r],i,t)}var d=f(256);t.hmacSha256AsU8a=d;var h=f(512);t.hmacSha512AsU8a=h},4459:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(2868);var n=r(7097);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},5295:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SCRYPT_LENGTH=t.NONCE_LENGTH=t.ENCODING_VERSION=t.ENCODING_NONE=t.ENCODING=void 0,t.ENCODING=["scrypt","xsalsa20-poly1305"],t.ENCODING_NONE=["none"],t.ENCODING_VERSION="3",t.NONCE_LENGTH=24,t.SCRYPT_LENGTH=44},3884:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecrypt=function(e,t){var r=e.encoded,a=e.encoding;return(0,n.assert)(r,"No encrypted data available to decode"),(0,i.jsonDecryptData)((0,n.isHex)(r)?(0,n.hexToU8a)(r):(0,o.base64Decode)(r),t,Array.isArray(a.type)?a.type:[a.type])};var n=r(9338),o=r(1584),i=r(6064)},6064:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecryptData=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.ENCODING;(0,n.assert)(e,"No encrypted data available to decode"),(0,n.assert)(t||!r.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");var s=e;if(t){var u;if(r.includes("scrypt")){var c=(0,i.scryptFromU8a)(e),f=c.params,l=c.salt;u=(0,i.scryptEncode)(t,l,f).password,e=e.subarray(a.SCRYPT_LENGTH)}else u=(0,n.stringToU8a)(t);s=(0,o.naclDecrypt)(e.subarray(a.NONCE_LENGTH),e.subarray(0,a.NONCE_LENGTH),(0,n.u8aFixLength)(u,256,!0))}return(0,n.assert)(s,"Unable to decode using the supplied passphrase"),s};var n=r(9338),o=r(9459),i=r(7150),a=r(5295)},2620:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncrypt=function(e,t,r){var s=!1,u=e;if(r){var c=(0,i.scryptEncode)(r),f=c.params,l=c.password,d=c.salt,h=(0,o.naclEncrypt)(u,l.subarray(0,32)),p=h.encrypted,y=h.nonce;s=!0,u=(0,n.u8aConcat)((0,i.scryptToU8a)(d,f),y,p)}return(0,a.jsonEncryptFormat)(u,t,s)};var n=r(9338),o=r(9459),i=r(7150),a=r(6725)},6725:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncryptFormat=function(e,t,r){return{encoded:(0,n.base64Encode)(e),encoding:{content:t,type:r?o.ENCODING:o.ENCODING_NONE,version:o.ENCODING_VERSION}}};var n=r(1584),o=r(5295)},9399:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"jsonDecrypt",{enumerable:!0,get:function(){return n.jsonDecrypt}}),Object.defineProperty(t,"jsonDecryptData",{enumerable:!0,get:function(){return o.jsonDecryptData}}),Object.defineProperty(t,"jsonEncrypt",{enumerable:!0,get:function(){return i.jsonEncrypt}}),Object.defineProperty(t,"jsonEncryptFormat",{enumerable:!0,get:function(){return a.jsonEncryptFormat}});var n=r(3884),o=r(6064),i=r(2620),a=r(6725)},8937:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keccakAsU8a=t.keccakAsHex=t.keccak512AsU8a=t.keccak256AsU8a=void 0;var n=r(5426),o=r(6431),i=r(162),a=(0,i.createDualHasher)({256:o.keccak256,512:o.keccak512},{256:n.keccak_256,512:n.keccak_512});t.keccakAsU8a=a;var s=(0,i.createBitHasher)(256,a);t.keccak256AsU8a=s;var u=(0,i.createBitHasher)(512,a);t.keccak512AsU8a=u;var c=(0,i.createAsHex)(a);t.keccakAsHex=c},9774:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"keccak256AsU8a",{enumerable:!0,get:function(){return n.keccak256AsU8a}}),Object.defineProperty(t,"keccak512AsU8a",{enumerable:!0,get:function(){return n.keccak512AsU8a}}),Object.defineProperty(t,"keccakAsHex",{enumerable:!0,get:function(){return n.keccakAsHex}}),Object.defineProperty(t,"keccakAsU8a",{enumerable:!0,get:function(){return n.keccakAsU8a}});var n=r(8937)},7858:(e,t,r)=>{"use strict";var n=r(2395),o=n(r(5692)),i=n(r(651)),a=n(r(348)),s=n(r(2808)),u=n(r(8100));Object.defineProperty(t,"__esModule",{value:!0}),t.DeriveJunction=void 0;var c=r(9338),f=r(4410),l=r(2421),d=/^\d+$/,h=(0,u.default)("chainCode"),p=(0,u.default)("isHard"),y=function(){function e(){(0,i.default)(this,e),Object.defineProperty(this,h,{writable:!0,value:new Uint8Array(32)}),Object.defineProperty(this,p,{writable:!0,value:!1})}return(0,a.default)(e,[{key:"chainCode",get:function(){return(0,s.default)(this,h)[h]}},{key:"isHard",get:function(){return(0,s.default)(this,p)[p]}},{key:"isSoft",get:function(){return!(0,s.default)(this,p)[p]}},{key:"hard",value:function(e){return this.soft(e).harden()}},{key:"harden",value:function(){return(0,s.default)(this,p)[p]=!0,this}},{key:"soft",value:function(e){return(0,c.isNumber)(e)||(0,c.isBn)(e)||(0,c.isBigInt)(e)?this.soft((0,c.bnToU8a)(e,l.BN_LE_256_OPTS)):(0,c.isHex)(e)?this.soft((0,c.hexToU8a)(e)):(0,c.isString)(e)?this.soft((0,c.compactAddLength)((0,c.stringToU8a)(e))):e.length>32?this.soft((0,f.blake2AsU8a)(e)):((0,s.default)(this,h)[h].fill(0),(0,s.default)(this,h)[h].set(e,0),this)}},{key:"soften",value:function(){return(0,s.default)(this,p)[p]=!1,this}}],[{key:"from",value:function(t){var r=new e,n=t.startsWith("/")?[t.substr(1),!0]:[t,!1],i=(0,o.default)(n,2),a=i[0],s=i[1];return r.soft(d.test(a)?new c.BN(a,10):a),s?r.harden():r}}]),e}();t.DeriveJunction=y},9785:(e,t,r)=>{"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractPath=function(e){var t=e.match(a),r=[],s="";if(t){s=t.join("");var u,c=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(u)throw a}}}}(t);try{for(c.s();!(u=c.n()).done;){var f=u.value;r.push(i.DeriveJunction.from(f.substr(1)))}}catch(e){c.e(e)}finally{c.f()}}return(0,o.assert)(s===e,(function(){return'Re-constructed path "'.concat(s,'" does not match input')})),{parts:t,path:r}};var o=r(9338),i=r(7858),a=/\/(\/?)([^/]+)/g},1196:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractSuri=function(e){var t=e.match(a);(0,o.assert)(!(0,o.isNull)(t),"Unable to match provided value to a secret URI");var r=(0,n.default)(t,7),s=r[1],u=r[3];return{derivePath:u,password:r[6],path:(0,i.keyExtractPath)(u).path,phrase:s}};var o=r(9338),i=r(9785),a=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/},104:(e,t,r)=>{"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.keyFromPath=function(e,t,r){var o,i=s[r],a=e,u=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){u=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(u)throw a}}}}(t);try{for(u.s();!(o=u.n()).done;){a=i(a,o.value)}}catch(e){u.e(e)}finally{u.f()}return a};var o=r(6038),i=r(5388),a=r(297),s={ecdsa:o.keyHdkdEcdsa,ed25519:i.keyHdkdEd25519,ethereum:o.keyHdkdEcdsa,sr25519:a.keyHdkdSr25519}},5596:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createSeedDeriveFn=function(e,t){return function(r,o){var i=o.chainCode,a=o.isHard;return(0,n.assert)(a,"A soft key was found in the path and is not supported"),e(t(r.secretKey.subarray(0,32),i))}};var n=r(9338)},6038:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEcdsa=void 0;var n=r(4209),o=r(7069),i=(0,r(5596).createSeedDeriveFn)(o.secp256k1PairFromSeed,n.secp256k1DeriveHard);t.keyHdkdEcdsa=i},5388:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEd25519=void 0;var n=r(9309),o=(0,r(5596).createSeedDeriveFn)(n.ed25519PairFromSeed,n.ed25519DeriveHard);t.keyHdkdEd25519=o},297:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdSr25519=function(e,t){var r=t.chainCode;return t.isSoft?(0,o.sr25519DeriveSoft)(e,r):(0,n.sr25519DeriveHard)(e,r)};var n=r(4278),o=r(3576)},3992:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"keyExtractPath",{enumerable:!0,get:function(){return n.keyExtractPath}}),Object.defineProperty(t,"keyExtractSuri",{enumerable:!0,get:function(){return o.keyExtractSuri}}),Object.defineProperty(t,"keyFromPath",{enumerable:!0,get:function(){return i.keyFromPath}}),Object.defineProperty(t,"keyHdkdEcdsa",{enumerable:!0,get:function(){return u.keyHdkdEcdsa}}),Object.defineProperty(t,"keyHdkdEd25519",{enumerable:!0,get:function(){return a.keyHdkdEd25519}}),Object.defineProperty(t,"keyHdkdSr25519",{enumerable:!0,get:function(){return s.keyHdkdSr25519}});var n=r(9785),o=r(1196),i=r(104),a=r(5388),s=r(297),u=r(6038)},7506:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|");t.default=r},4953:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.entropyToMnemonic=v,t.generateMnemonic=function(e){return e=e||128,(0,o.assert)(e%32==0,f),v((0,a.randomAsU8a)(e/8))},t.mnemonicToEntropy=y,t.mnemonicToSeedSync=function(e,t){return(0,i.pbkdf2Encode)((0,o.stringToU8a)(l(e)),(0,o.stringToU8a)("mnemonic".concat(l(t)))).password},t.validateMnemonic=function(e){try{y(e)}catch(e){return!1}return!0};var o=r(9338),i=r(2257),a=r(1177),s=r(3082),u=n(r(7506)),c="Invalid mnemonic",f="Invalid entropy";function l(e){return(e||"").normalize("NFKD")}function d(e){return parseInt(e,2)}function h(e){return e.map((function(e){return e.toString(2).padStart(8,"0")})).join("")}function p(e){return h(Array.from((0,s.sha256AsU8a)(e))).slice(0,8*e.length/32)}function y(e){var t,r=l(e).split(" ");(0,o.assert)(r.length%3==0,c);var n=r.map((function(e){var t=u.default.indexOf(e);return(0,o.assert)(-1!==t,c),t.toString(2).padStart(11,"0")})).join(""),i=32*Math.floor(n.length/33),a=n.slice(0,i),s=n.slice(i),h=null===(t=a.match(/(.{1,8})/g))||void 0===t?void 0:t.map(d);(0,o.assert)(h&&h.length%4==0&&h.length>=16&&h.length<=32,f);var y=(0,o.u8aToU8a)(h),v=p(y);return(0,o.assert)(v===s,"Invalid mnemonic checksum"),y}function v(e){return(0,o.assert)(e.length%4==0&&e.length>=16&&e.length<=32,f),(h(Array.from(e))+p(e)).match(/(.{1,11})/g).map((function(e){return u.default[d(e)]})).join(" ")}},6697:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicGenerate=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,t=arguments.length>1?arguments[1]:void 0;return!n.hasBigInt||!t&&(0,o.isReady)()?(0,o.bip39Generate)(e):(0,i.generateMnemonic)(a[e])};var n=r(9338),o=r(6431),i=r(4953),a={12:128,15:160,18:192,21:224,24:256}},3050:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"mnemonicGenerate",{enumerable:!0,get:function(){return n.mnemonicGenerate}}),Object.defineProperty(t,"mnemonicToEntropy",{enumerable:!0,get:function(){return o.mnemonicToEntropy}}),Object.defineProperty(t,"mnemonicToLegacySeed",{enumerable:!0,get:function(){return i.mnemonicToLegacySeed}}),Object.defineProperty(t,"mnemonicToMiniSecret",{enumerable:!0,get:function(){return a.mnemonicToMiniSecret}}),Object.defineProperty(t,"mnemonicValidate",{enumerable:!0,get:function(){return s.mnemonicValidate}});var n=r(6697),o=r(9620),i=r(4324),a=r(8811),s=r(6539)},9620:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToEntropy=function(e,t){return!n.hasBigInt||!t&&(0,o.isReady)()?(0,o.bip39ToEntropy)(e):(0,i.mnemonicToEntropy)(e)};var n=r(9338),o=r(6431),i=r(4953)},4324:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToLegacySeed=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32;return(0,n.assert)((0,a.mnemonicValidate)(e),"Invalid bip39 mnemonic specified"),(0,n.assert)([32,64].includes(s),(function(){return"Invalid seed length ".concat(s,", expected 32 or 64")})),32===s?!n.hasBigInt||!r&&(0,o.isReady)()?(0,o.bip39ToSeed)(e,t):(0,i.mnemonicToSeedSync)(e,t).subarray(0,32):(0,i.mnemonicToSeedSync)(e,t)};var n=r(9338),o=r(6431),i=r(4953),a=r(6539)},8811:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToMiniSecret=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;if((0,n.assert)((0,s.mnemonicValidate)(e),"Invalid bip39 mnemonic specified"),!r&&(0,o.isReady)())return(0,o.bip39ToMiniSecret)(e,t);var u=(0,a.mnemonicToEntropy)(e),c=(0,n.stringToU8a)("mnemonic".concat(t));return(0,i.pbkdf2Encode)(u,c).password.slice(0,32)};var n=r(9338),o=r(6431),i=r(2257),a=r(9620),s=r(6539)},6539:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicValidate=function(e,t){return!n.hasBigInt||!t&&(0,o.isReady)()?(0,o.bip39Validate)(e):(0,i.validateMnemonic)(e)};var n=r(9338),o=r(6431),i=r(4953)},621:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.naclBoxPairFromSecret=function(e){return o.default.box.keyPair.fromSecretKey(e.slice(0,32))};var o=n(r(3110))},4627:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.naclDecrypt=function(e,t,r){return o.default.secretbox.open(e,t,r)||null};var o=n(r(3110))},7945:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.naclEncrypt=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,i.randomAsU8a)(24);return{encrypted:o.default.secretbox(e,r,t),nonce:r}};var o=n(r(3110)),i=r(3571)},9459:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"naclBoxPairFromSecret",{enumerable:!0,get:function(){return i.naclBoxPairFromSecret}}),Object.defineProperty(t,"naclDecrypt",{enumerable:!0,get:function(){return n.naclDecrypt}}),Object.defineProperty(t,"naclEncrypt",{enumerable:!0,get:function(){return o.naclEncrypt}}),Object.defineProperty(t,"naclOpen",{enumerable:!0,get:function(){return a.naclOpen}}),Object.defineProperty(t,"naclSeal",{enumerable:!0,get:function(){return s.naclSeal}});var n=r(4627),o=r(7945),i=r(621),a=r(940),s=r(8362)},940:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.naclOpen=function(e,t,r,n){return o.default.box.open(e,t,r,n)||null};var o=n(r(3110))},8362:(e,t,r)=>{"use strict";var n=r(2395);Object.defineProperty(t,"__esModule",{value:!0}),t.naclSeal=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:(0,i.randomAsU8a)(24);return{nonce:n,sealed:o.default.box(e,n,r,t)}};var o=n(r(3110)),i=r(3571)},3545:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"allNetworks",{enumerable:!0,get:function(){return n.allNetworks}}),Object.defineProperty(t,"availableNetworks",{enumerable:!0,get:function(){return n.availableNetworks}}),Object.defineProperty(t,"selectableNetworks",{enumerable:!0,get:function(){return n.selectableNetworks}});var n=r(15)},9377:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/util-crypto",path:"/",type:"cjs",version:"9.1.1"}},9923:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Encode=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,s.randomAsU8a)(),r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2048,u=arguments.length>3?arguments[3]:void 0,c=(0,i.u8aToU8a)(e),f=(0,i.u8aToU8a)(t);return{password:!i.hasBigInt||!u&&(0,a.isReady)()?(0,a.pbkdf2)(c,f,r):(0,n.pbkdf2)(o.sha512,c,f,{c:r,dkLen:64}),rounds:r,salt:t}};var n=r(9023),o=r(6262),i=r(9338),a=r(6431),s=r(3571)},2257:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"pbkdf2Encode",{enumerable:!0,get:function(){return n.pbkdf2Encode}});var n=r(9923)},3296:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsNumber=function(){return(0,n.hexToBn)((0,o.randomAsHex)(8)).and(i).toNumber()};var n=r(9338),o=r(3571),i=new n.BN(9007199254740991)},3571:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsHex=void 0,t.randomAsU8a=o;var n=r(1649);function o(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;return(0,n.getRandomValues)(new Uint8Array(e))}var i=(0,r(162).createAsHex)(o);t.randomAsHex=i},1177:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"randomAsHex",{enumerable:!0,get:function(){return o.randomAsHex}}),Object.defineProperty(t,"randomAsNumber",{enumerable:!0,get:function(){return n.randomAsNumber}}),Object.defineProperty(t,"randomAsU8a",{enumerable:!0,get:function(){return o.randomAsU8a}});var n=r(3296),o=r(3571)},6199:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_PARAMS=void 0,t.DEFAULT_PARAMS={N:32768,p:1,r:8}},2951:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptEncode=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,a.randomAsU8a)(),r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.DEFAULT_PARAMS,u=arguments.length>3?arguments[3]:void 0,c=(0,o.u8aToU8a)(e);return{params:r,password:!o.hasBigInt||!u&&(0,i.isReady)()?(0,i.scrypt)(c,t,Math.log2(r.N),r.r,r.p):(0,n.scrypt)(c,t,(0,o.objectSpread)({dkLen:64},r)),salt:t}};var n=r(9514),o=r(9338),i=r(6431),a=r(3571),s=r(6199)},7440:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptFromU8a=function(e){var t=e.subarray(0,32),r=(0,n.u8aToBn)(e.subarray(32,36),o.BN_LE_OPTS).toNumber(),a=(0,n.u8aToBn)(e.subarray(36,40),o.BN_LE_OPTS).toNumber(),s=(0,n.u8aToBn)(e.subarray(40,44),o.BN_LE_OPTS).toNumber();return(0,n.assert)(r===i.DEFAULT_PARAMS.N&&a===i.DEFAULT_PARAMS.p&&s===i.DEFAULT_PARAMS.r,"Invalid injected scrypt params found"),{params:{N:r,p:a,r:s},salt:t}};var n=r(9338),o=r(2421),i=r(6199)},7150:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"scryptEncode",{enumerable:!0,get:function(){return n.scryptEncode}}),Object.defineProperty(t,"scryptFromU8a",{enumerable:!0,get:function(){return o.scryptFromU8a}}),Object.defineProperty(t,"scryptToU8a",{enumerable:!0,get:function(){return i.scryptToU8a}});var n=r(2951),o=r(7440),i=r(2757)},2757:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptToU8a=function(e,t){var r=t.N,i=t.p,a=t.r;return(0,n.u8aConcat)(e,(0,n.bnToU8a)(r,o.BN_LE_32_OPTS),(0,n.bnToU8a)(i,o.BN_LE_32_OPTS),(0,n.bnToU8a)(a,o.BN_LE_32_OPTS))};var n=r(9338),o=r(2421)},189:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Compress=function(e,t){return 33===e.length?e:((0,o.assert)(65===e.length,"Invalid publicKey provided"),!o.hasBigInt||!t&&(0,i.isReady)()?(0,i.secp256k1Compress)(e):n.Point.fromHex(e).toRawBytes(!0))};var n=r(9656),o=r(9338),i=r(6431)},4209:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1DeriveHard=function(e,t){return(0,n.assert)((0,n.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,o.blake2AsU8a)((0,n.u8aConcat)(i,e,t),256)};var n=r(9338),o=r(4410),i=(0,n.compactAddLength)((0,n.stringToU8a)("Secp256k1HDKD"))},1447:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Expand=function(e,t){if(65===e.length)return e.subarray(1);if((0,o.assert)(33===e.length,"Invalid publicKey provided"),!o.hasBigInt||!t&&(0,i.isReady)())return(0,i.secp256k1Expand)(e).subarray(1);var r=n.Point.fromHex(e),s=r.x,u=r.y;return(0,o.u8aConcat)((0,o.bnToU8a)(s,a.BN_BE_256_OPTS),(0,o.bnToU8a)(u,a.BN_BE_256_OPTS))};var n=r(9656),o=r(9338),i=r(6431),a=r(2421)},2156:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasher=function(e,t,r){return"keccak"===e?(0,o.keccakAsU8a)(t,void 0,r):(0,n.blake2AsU8a)(t,void 0,void 0,r)};var n=r(3172),o=r(9774)},9640:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"secp256k1Compress",{enumerable:!0,get:function(){return n.secp256k1Compress}}),Object.defineProperty(t,"secp256k1Expand",{enumerable:!0,get:function(){return o.secp256k1Expand}}),Object.defineProperty(t,"secp256k1PairFromSeed",{enumerable:!0,get:function(){return i.secp256k1PairFromSeed}}),Object.defineProperty(t,"secp256k1PrivateKeyTweakAdd",{enumerable:!0,get:function(){return u.secp256k1PrivateKeyTweakAdd}}),Object.defineProperty(t,"secp256k1Recover",{enumerable:!0,get:function(){return a.secp256k1Recover}}),Object.defineProperty(t,"secp256k1Sign",{enumerable:!0,get:function(){return s.secp256k1Sign}}),Object.defineProperty(t,"secp256k1Verify",{enumerable:!0,get:function(){return c.secp256k1Verify}});var n=r(189),o=r(1447),i=r(7069),a=r(5236),s=r(9398),u=r(3847),c=r(5270)},7069:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PairFromSeed=function(e,t){if((0,o.assert)(32===e.length,"Expected valid 32-byte private key as a seed"),!o.hasBigInt||!t&&(0,i.isReady)()){var r=(0,i.secp256k1FromSeed)(e),a=r.slice(32);return(0,o.assert)(!(0,o.u8aEmpty)(a),"Invalid publicKey generated from WASM interface"),{publicKey:a,secretKey:r.slice(0,32)}}return{publicKey:(0,n.getPublicKey)(e,!0),secretKey:e}};var n=r(9656),o=r(9338),i=r(6431)},5236:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Recover=function(e,t,r){var u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",c=arguments.length>4?arguments[4]:void 0,f=(0,o.u8aToU8a)(t).subarray(0,64),l=(0,o.u8aToU8a)(e),d=!o.hasBigInt||!c&&(0,i.isReady)()?(0,i.secp256k1Recover)(l,f,r):(0,n.recoverPublicKey)(l,n.Signature.fromCompact(f).toRawBytes(),r);return(0,o.assert)(d,"Unable to recover publicKey from signature"),"keccak"===u?(0,s.secp256k1Expand)(d,c):(0,a.secp256k1Compress)(d,c)};var n=r(9656),o=r(9338),i=r(6431),a=r(189),s=r(1447)},9398:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Sign=function(e,t){var r=t.secretKey,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"blake2",f=arguments.length>3?arguments[3]:void 0;(0,i.assert)(32===(null==r?void 0:r.length),"Expected valid secp256k1 secretKey, 32-bytes");var l=(0,u.hasher)(c,e,f);if(!i.hasBigInt||!f&&(0,a.isReady)())return(0,a.secp256k1Sign)(l,r);var d=(0,o.signSync)(l,r,{canonical:!0,recovered:!0}),h=(0,n.default)(d,2),p=h[0],y=h[1],v=o.Signature.fromHex(p),b=v.r,m=v.s;return(0,i.u8aConcat)((0,i.bnToU8a)(b,s.BN_BE_256_OPTS),(0,i.bnToU8a)(m,s.BN_BE_256_OPTS),new Uint8Array([y||0]))};var o=r(9656),i=r(9338),a=r(6431),s=r(2421),u=r(2156)},3847:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PrivateKeyTweakAdd=function(e,t,r){return(0,n.assert)((0,n.isU8a)(e)&&32===e.length,"Expected seckey to be an Uint8Array with length 32"),(0,n.assert)((0,n.isU8a)(t)&&32===t.length,"Expected tweak to be an Uint8Array with length 32"),!n.hasBigInt||r?function(e,t){var r=new n.BN(t);return(0,n.assert)(r.cmp(u)<0,"Tweak parameter is out of range"),r.iadd(new n.BN(e)),r.cmp(u)>=0&&r.isub(u),(0,n.assert)(!r.isZero(),"Invalid resulting private key"),(0,n.bnToU8a)(r,i.BN_BE_256_OPTS)}(e,t):function(e,t){var r=(0,n.u8aToBigInt)(t,i.BN_BE_OPTS);return(0,n.assert)(r<s,"Tweak parameter is out of range"),(r+=(0,n.u8aToBigInt)(e,i.BN_BE_OPTS))>=s&&(r-=s),(0,n.assert)(r!==n._0n,"Invalid resulting private key"),(0,n.nToU8a)(r,i.BN_BE_256_OPTS)}(e,t)};var n=r(9338),o=r(8107),i=r(2421),a="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),s=(0,o.BigInt)("0x".concat(a)),u=new n.BN(a,"hex")},5270:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Verify=function(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",s=arguments.length>4?arguments[4]:void 0,u=(0,n.u8aToU8a)(t);(0,n.assert)(65===u.length,"Expected signature with 65 bytes, ".concat(u.length," found instead"));var c=(0,i.secp256k1Recover)((0,o.hasher)(a,e),u,u[64],a,s),f=(0,o.hasher)(a,c,s),l=(0,n.u8aToU8a)(r);return(0,n.u8aEq)(c,l)||("keccak"===a?(0,n.u8aEq)(f.slice(-20),l.slice(-20)):(0,n.u8aEq)(f,l))};var n=r(9338),o=r(2156),i=r(5236)},2871:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.shaAsU8a=t.sha512AsU8a=t.sha256AsU8a=void 0;var n=r(3061),o=r(6262),i=r(6431),a=r(162),s=(0,a.createDualHasher)({256:i.sha256,512:i.sha512},{256:n.sha256,512:o.sha512});t.shaAsU8a=s;var u=(0,a.createBitHasher)(256,s);t.sha256AsU8a=u;var c=(0,a.createBitHasher)(512,s);t.sha512AsU8a=c},3082:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"sha256AsU8a",{enumerable:!0,get:function(){return n.sha256AsU8a}}),Object.defineProperty(t,"sha512AsU8a",{enumerable:!0,get:function(){return n.sha512AsU8a}}),Object.defineProperty(t,"shaAsU8a",{enumerable:!0,get:function(){return n.shaAsU8a}});var n=r(2871)},8571:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"signatureVerify",{enumerable:!0,get:function(){return n.signatureVerify}});var n=r(1712)},1712:(e,t,r)=>{"use strict";var n=r(2395)(r(5692));Object.defineProperty(t,"__esModule",{value:!0}),t.signatureVerify=function(e,t,r){var n=(0,o.u8aToU8a)(t);(0,o.assert)([64,65,66].includes(n.length),(function(){return"Invalid signature length, expected [64..66] bytes, found ".concat(n.length)}));var a=(0,i.decodeAddress)(r),s={message:(0,o.u8aToU8a)(e),publicKey:a,signature:n},u={crypto:"none",isValid:!1,isWrapped:(0,o.u8aIsWrapped)(s.message,!0),publicKey:a},c=(0,o.u8aIsWrapped)(s.message,!1),f=function(e){return[0,1,2].includes(e[0])&&[65,66].includes(e.length)?p:h}(n);return f(u,s),"none"!==u.crypto||u.isWrapped&&!c?u:(s.message=c?(0,o.u8aUnwrapBytes)(s.message):(0,o.u8aWrapBytes)(s.message),f(u,s))};var o=r(9338),i=r(5709),a=r(5535),s=r(5270),u=r(6926),c=function(e){return function(t,r,n){return(0,s.secp256k1Verify)(t,r,n,e)}},f=[["ecdsa",c("blake2")],["ethereum",c("keccak")]],l=[["ed25519",a.ed25519Verify],["sr25519",u.sr25519Verify]].concat(f),d=["ed25519","sr25519","ecdsa"];function h(e,t){var r=t.message,o=t.publicKey,i=t.signature,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l;return e.isValid=a.some((function(t){var a=(0,n.default)(t,2),s=a[0],u=a[1];try{if(u(r,i,o))return e.crypto=s,!0}catch(e){}return!1})),e}function p(e,t){var r=t.message,n=t.publicKey,i=t.signature;(0,o.assert)([0,1,2].includes(i[0]),(function(){return"Unknown crypto type, expected signature prefix [0..2], found ".concat(i[0])}));var s=d[i[0]]||"none";e.crypto=s;try{e.isValid={ecdsa:function(){return h(e,{message:r,publicKey:n,signature:i.subarray(1)},f).isValid},ed25519:function(){return(0,a.ed25519Verify)(r,i.subarray(1),n)},none:function(){throw Error("no verify for `none` crypto type")},sr25519:function(){return(0,u.sr25519Verify)(r,i.subarray(1),n)}}[s]()}catch(e){}return e}},3186:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Agreement=function(e,t){var r=(0,n.u8aToU8a)(e),i=(0,n.u8aToU8a)(t);return(0,n.assert)(32===i.length,(function(){return"Invalid publicKey, received ".concat(i.length," bytes, expected 32")})),(0,n.assert)(64===r.length,(function(){return"Invalid secretKey, received ".concat(r.length," bytes, expected 64")})),(0,o.sr25519Agree)(i,r)};var n=r(9338),o=r(6431)},4258:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDeriveFn=function(e){return function(t,r){return(0,n.assert)((0,n.isU8a)(r)&&32===r.length,"Invalid chainCode passed to derive"),(0,o.sr25519PairFromU8a)(e((0,i.sr25519KeypairToU8a)(t),r))}};var n=r(9338),o=r(4967),i=r(6203)},4278:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveHard=void 0;var n=r(6431),o=(0,r(4258).createDeriveFn)(n.sr25519DeriveKeypairHard);t.sr25519DeriveHard=o},4160:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DerivePublic=function(e,t){var r=(0,n.u8aToU8a)(e);return(0,n.assert)((0,n.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,n.assert)(32===r.length,(function(){return"Invalid publicKey, received ".concat(r.length," bytes, expected 32")})),(0,o.sr25519DerivePublicSoft)(r,t)};var n=r(9338),o=r(6431)},3576:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveSoft=void 0;var n=r(6431),o=(0,r(4258).createDeriveFn)(n.sr25519DeriveKeypairSoft);t.sr25519DeriveSoft=o},1730:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"sr25519Agreement",{enumerable:!0,get:function(){return n.sr25519Agreement}}),Object.defineProperty(t,"sr25519DeriveHard",{enumerable:!0,get:function(){return o.sr25519DeriveHard}}),Object.defineProperty(t,"sr25519DerivePublic",{enumerable:!0,get:function(){return i.sr25519DerivePublic}}),Object.defineProperty(t,"sr25519DeriveSoft",{enumerable:!0,get:function(){return a.sr25519DeriveSoft}}),Object.defineProperty(t,"sr25519PairFromSeed",{enumerable:!0,get:function(){return s.sr25519PairFromSeed}}),Object.defineProperty(t,"sr25519Sign",{enumerable:!0,get:function(){return u.sr25519Sign}}),Object.defineProperty(t,"sr25519Verify",{enumerable:!0,get:function(){return c.sr25519Verify}}),Object.defineProperty(t,"sr25519VrfSign",{enumerable:!0,get:function(){return f.sr25519VrfSign}}),Object.defineProperty(t,"sr25519VrfVerify",{enumerable:!0,get:function(){return l.sr25519VrfVerify}});var n=r(3186),o=r(4278),i=r(4160),a=r(3576),s=r(1741),u=r(8139),c=r(6926),f=r(5213),l=r(4536)},1741:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromSeed=function(e){var t=(0,n.u8aToU8a)(e);return(0,n.assert)(32===t.length,(function(){return"Expected a seed matching 32 bytes, found ".concat(t.length)})),(0,i.sr25519PairFromU8a)((0,o.sr25519KeypairFromSeed)(t))};var n=r(9338),o=r(6431),i=r(4967)},4967:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromU8a=function(e){var t=(0,n.u8aToU8a)(e);return(0,n.assert)(96===t.length,(function(){return"Expected keypair with ".concat(96," bytes, found ").concat(t.length)})),{publicKey:t.slice(64,96),secretKey:t.slice(0,64)}};var n=r(9338)},6203:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519KeypairToU8a=function(e){var t=e.publicKey,r=e.secretKey;return(0,n.u8aConcat)(r,t).slice()};var n=r(9338)},8139:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Sign=function(e,t){var r=t.publicKey,i=t.secretKey;return(0,n.assert)(32===(null==r?void 0:r.length),"Expected a valid publicKey, 32-bytes"),(0,n.assert)(64===(null==i?void 0:i.length),"Expected a valid secretKey, 64-bytes"),(0,o.sr25519Sign)(r,i,(0,n.u8aToU8a)(e))};var n=r(9338),o=r(6431)},6926:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Verify=function(e,t,r){var i=(0,n.u8aToU8a)(r),a=(0,n.u8aToU8a)(t);return(0,n.assert)(32===i.length,(function(){return"Invalid publicKey, received ".concat(i.length," bytes, expected 32")})),(0,n.assert)(64===a.length,(function(){return"Invalid signature, received ".concat(a.length," bytes, expected 64")})),(0,o.sr25519Verify)(a,(0,n.u8aToU8a)(e),i)};var n=r(9338),o=r(6431)},5213:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfSign=function(e,t){var r=t.secretKey,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:i;return(0,n.assert)(64===(null==r?void 0:r.length),"Invalid secretKey, expected 64-bytes"),(0,o.vrfSign)(r,(0,n.u8aToU8a)(a),(0,n.u8aToU8a)(e),(0,n.u8aToU8a)(s))};var n=r(9338),o=r(6431),i=new Uint8Array},4536:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfVerify=function(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:i,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:i,u=(0,n.u8aToU8a)(r),c=(0,n.u8aToU8a)(t);return(0,n.assert)(32===u.length,"Invalid publicKey, expected 32-bytes"),(0,n.assert)(96===c.length,"Invalid vrfSign output, expected 96 bytes"),(0,o.vrfVerify)(u,(0,n.u8aToU8a)(a),(0,n.u8aToU8a)(e),(0,n.u8aToU8a)(s),c)};var n=r(9338),o=r(6431),i=new Uint8Array},806:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhashAsHex=void 0,t.xxhashAsU8a=s;var n=r(9338),o=r(6431),i=r(162),a=r(5748);function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,r=arguments.length>2?arguments[2]:void 0,i=Math.ceil(t/64),s=(0,n.u8aToU8a)(e);if(!n.hasBigInt||!r&&(0,o.isReady)())return(0,o.twox)(s,i);for(var u=new Uint8Array(8*i),c=0;c<i;c++)u.set((0,a.xxhash64)(s,c).reverse(),8*c);return u}var u=(0,i.createAsHex)(s);t.xxhashAsHex=u},9151:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"xxhashAsHex",{enumerable:!0,get:function(){return n.xxhashAsHex}}),Object.defineProperty(t,"xxhashAsU8a",{enumerable:!0,get:function(){return n.xxhashAsU8a}});var n=r(806)},5748:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhash64=function(e,t){for(var r=function(e,t){if(t.length<32)return e.u8a.set(t),e.u8asize=t.length,e;var r=t.length-32,n=0;if(r>=0){var o=function(e){return i*O(e+a*M(t,n,4),g)};do{e.v1=o(e.v1),n+=8,e.v2=o(e.v2),n+=8,e.v3=o(e.v3),n+=8,e.v4=o(e.v4),n+=8}while(n<=r)}return n<t.length&&(e.u8a.set(t.subarray(n,t.length)),e.u8asize=t.length-n),e}(function(e){var t=(0,o.BigInt)(e);return{seed:t,u8a:new Uint8Array(32),u8asize:0,v1:t+i+a,v2:t+a,v3:t,v4:t-i}}(t),e),p=r.seed,P=r.u8a,k=r.u8asize,T=r.v1,z=r.v2,N=r.v3,E=r.v4,A=0,H=f&(0,o.BigInt)(e.length)+(e.length>=32?((((O(T,n._1n)+O(z,l)+O(N,h)+O(E,y)^i*O(T*a,g))*i+u^i*O(z*a,g))*i+u^i*O(N*a,g))*i+u^i*O(E*a,g))*i+u:p+c);A<=k-8;)H=f&u+i*O(H^i*O(a*M(P,A,4),g),b),A+=8;for(A+4<=k&&(H=f&s+a*O(H^i*M(P,A,2),v),A+=4);A<k;)H=f&i*O(H^c*(0,o.BigInt)(P[A++]),d);return function(e){for(var t=new Uint8Array(8),r=7;r>=0;r--)t[r]=Number(e%j),e/=j;return t}(f&((H=f&s*((H=f&a*(H^H>>x))^H>>m))^H>>w))};var n=r(9338),o=r(8107),i=(0,o.BigInt)("11400714785074694791"),a=(0,o.BigInt)("14029467366897019727"),s=(0,o.BigInt)("1609587929392839161"),u=(0,o.BigInt)("9650029242287828579"),c=(0,o.BigInt)("2870177450012600261"),f=(0,o.BigInt)("0xffffffffffffffff"),l=(0,o.BigInt)(7),d=(0,o.BigInt)(11),h=(0,o.BigInt)(12),p=(0,o.BigInt)(16),y=(0,o.BigInt)(18),v=(0,o.BigInt)(23),b=(0,o.BigInt)(27),m=(0,o.BigInt)(29),g=(0,o.BigInt)(31),w=(0,o.BigInt)(32),x=(0,o.BigInt)(33),P=(0,o.BigInt)(64),j=(0,o.BigInt)(256);function O(e,t){var r=e&f;return(r<<t|r>>P-t)&f}function M(e,t,r){for(var i=new Array(r),a=0,s=0;s<r;s++,a+=2)i[s]=(0,o.BigInt)(e[t+a]|e[t+1+a]<<8);for(var u=n._0n,c=r-1;c>=0;c--)u=(u<<p)+i[c];return u}},3549:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayChunk=function(e,t){for(var r=Math.ceil(e.length/t),n=Array(r),o=0;o<r;o++){var i=o*t;n[o]=e.slice(i,i+t)}return n}},2761:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFilter=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.filter((function(e){return!(0,o.isUndefined)(e)&&(t||!(0,n.isNull)(e))}))};var n=r(5943),o=r(8098)},6599:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFlatten=function(e){for(var t=0,r=0;r<e.length;r++)t+=e[r].length;for(var n=new Array(t),o=-1,i=0;i<e.length;i++)for(var a=e[i],s=0;s<a.length;s++)n[++o]=a[s];return n}},8916:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"arrayChunk",{enumerable:!0,get:function(){return n.arrayChunk}}),Object.defineProperty(t,"arrayFilter",{enumerable:!0,get:function(){return o.arrayFilter}}),Object.defineProperty(t,"arrayFlatten",{enumerable:!0,get:function(){return i.arrayFlatten}}),Object.defineProperty(t,"arrayRange",{enumerable:!0,get:function(){return a.arrayRange}}),Object.defineProperty(t,"arrayShuffle",{enumerable:!0,get:function(){return s.arrayShuffle}}),Object.defineProperty(t,"arrayZip",{enumerable:!0,get:function(){return u.arrayZip}});var n=r(3549),o=r(2761),i=r(6599),a=r(2793),s=r(4698),u=r(7543)},2793:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayRange=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,n.assert)(e>0,"Expected non-zero, positive number as a range size");for(var r=new Array(e),o=0;o<e;o++)r[o]=o+t;return r};var n=r(7234)},4698:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayShuffle=function(e){var t=e.slice(),r=t.length;if(1===r)return t;for(;0!==r;){var n=Math.floor(Math.random()*r);r--;var o=[t[n],t[r]];t[r]=o[0],t[n]=o[1]}return t}},7543:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayZip=function(e,t){for(var r=new Array(e.length),n=0;n<e.length;n++)r[n]=[e[n],t[n]];return r}},7234:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=a,t.assertReturn=function(e,t){return a(!(0,i.isUndefined)(e)&&!(0,o.isNull)(e),t),e},t.assertUnreachable=function(e){throw new Error("This codepath should be unreachable. Unhandled input: ".concat(e))};var n=r(3146),o=r(5943),i=r(8098);function a(e,t){if(!e)throw new Error((0,n.isFunction)(t)?t():t)}},4377:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._2pow53n=t._1n=t._1Qn=t._1Mn=t._1Bn=t._0n=void 0;var n=r(8107),o=(0,n.BigInt)(0);t._0n=o;var i=(0,n.BigInt)(1);t._1n=i;var a=(0,n.BigInt)(1e6);t._1Mn=a;var s=(0,n.BigInt)(1e9);t._1Bn=s;var u=s*s;t._1Qn=u;var c=(0,n.BigInt)(Number.MAX_SAFE_INTEGER);t._2pow53n=c},2952:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={nSqrt:!0,nToBigInt:!0,nMax:!0,nMin:!0,nToHex:!0,nToU8a:!0};Object.defineProperty(t,"nMax",{enumerable:!0,get:function(){return s.nMax}}),Object.defineProperty(t,"nMin",{enumerable:!0,get:function(){return s.nMin}}),Object.defineProperty(t,"nSqrt",{enumerable:!0,get:function(){return i.nSqrt}}),Object.defineProperty(t,"nToBigInt",{enumerable:!0,get:function(){return a.nToBigInt}}),Object.defineProperty(t,"nToHex",{enumerable:!0,get:function(){return u.nToHex}}),Object.defineProperty(t,"nToU8a",{enumerable:!0,get:function(){return c.nToU8a}});var o=r(4377);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var i=r(6900),a=r(5335),s=r(8289),u=r(4433),c=r(8129)},8289:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nMax=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return a(t,o)},t.nMin=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return a(t,i)};var n=r(7234);function o(e,t){return e>t}function i(e,t){return e<t}function a(e,t){(0,n.assert)(e.length>=1,"Must provide one or more bigint arguments");for(var r=e[0],o=1;o<e.length;o++)t(e[o],r)&&(r=e[o]);return r}},6900:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nSqrt=function(e){var t=(0,a.nToBigInt)(e);if((0,o.assert)(t>=i._0n,"square root of negative numbers is not supported"),t<=i._2pow53n)return(0,n.BigInt)(Math.floor(Math.sqrt(Number(t))));for(var r=s;;){var u=t/r+r>>i._1n;if(r===u||r===u-i._1n)return r;r=u}};var n=r(8107),o=r(7234),i=r(4377),a=r(5335),s=(0,n.BigInt)(94906265)},5335:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToBigInt=function(e){return"bigint"==typeof e?e:e?(0,a.isHex)(e)?(0,o.hexToBigInt)(e.toString()):(0,i.isBn)(e)?(0,n.BigInt)(e.toString()):(0,s.isToBigInt)(e)?e.toBigInt():(0,u.isToBn)(e)?(0,n.BigInt)(e.toBn().toString()):(0,n.BigInt)(e):(0,n.BigInt)(0)};var n=r(8107),o=r(5972),i=r(928),a=r(853),s=r(1720),u=r(404)},4433:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToHex=function(e,t){return e?(0,o.u8aToHex)((0,i.nToU8a)(e,(0,n.objectSpread)({isLe:!1,isNegative:!1},t))):"0x00"};var n=r(660),o=r(8720),i=r(8129)},8129:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToU8a=function(e,t){var r,n,c=(0,o.objectSpread)({bitLength:-1,isLe:!0,isNegative:!1},t),f=(0,a.nToBigInt)(e);if(f===i._0n)return-1===(n=void 0===(r=c.bitLength)?0:r)?new Uint8Array:new Uint8Array(Math.ceil(n/8));var l=function(e,t){var r=t.isLe,n=t.isNegative,o=[];for(n&&(e=(e+i._1n)*-i._1n);e!==i._0n;){var a=e%s,c=Number(n?a^u:a);r?o.push(c):o.unshift(c),e=(e-a)/s}return Uint8Array.from(o)}(f,c);if(-1===c.bitLength)return l;var d=Math.ceil((c.bitLength||0)/8),h=new Uint8Array(d);return c.isNegative&&h.fill(255),h.set(l,c.isLe?0:d-l.length),h};var n=r(8107),o=r(660),i=r(4377),a=r(5335),s=(0,n.BigInt)(256),u=(0,n.BigInt)(255)},8418:(e,t,r)=>{"use strict";var n=r(4863);Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"BN",{enumerable:!0,get:function(){return o.default}});var o=n(r(2780))},850:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_ZERO=t.BN_TWO=t.BN_THREE=t.BN_THOUSAND=t.BN_TEN=t.BN_SIX=t.BN_SEVEN=t.BN_QUINTILL=t.BN_ONE=t.BN_NINE=t.BN_MILLION=t.BN_MAX_INTEGER=t.BN_HUNDRED=t.BN_FOUR=t.BN_FIVE=t.BN_EIGHT=t.BN_BILLION=void 0;var n=r(8418),o=new n.BN(0);t.BN_ZERO=o;var i=new n.BN(1);t.BN_ONE=i;var a=new n.BN(2);t.BN_TWO=a;var s=new n.BN(3);t.BN_THREE=s;var u=new n.BN(4);t.BN_FOUR=u;var c=new n.BN(5);t.BN_FIVE=c;var f=new n.BN(6);t.BN_SIX=f;var l=new n.BN(7);t.BN_SEVEN=l;var d=new n.BN(8);t.BN_EIGHT=d;var h=new n.BN(9);t.BN_NINE=h;var p=new n.BN(10);t.BN_TEN=p;var y=new n.BN(100);t.BN_HUNDRED=y;var v=new n.BN(1e3);t.BN_THOUSAND=v;var b=new n.BN(1e6);t.BN_MILLION=b;var m=new n.BN(1e9);t.BN_BILLION=m;var g=m.mul(m);t.BN_QUINTILL=g;var w=new n.BN(Number.MAX_SAFE_INTEGER);t.BN_MAX_INTEGER=w},7107:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return n.hexToBn}});var n=r(4610)},4787:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={BN:!0,bnFromHex:!0,bnMax:!0,bnMin:!0,bnSqrt:!0,bnToBn:!0,bnToHex:!0,bnToU8a:!0};Object.defineProperty(t,"BN",{enumerable:!0,get:function(){return i.BN}}),Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return a.bnFromHex}}),Object.defineProperty(t,"bnMax",{enumerable:!0,get:function(){return s.bnMax}}),Object.defineProperty(t,"bnMin",{enumerable:!0,get:function(){return s.bnMin}}),Object.defineProperty(t,"bnSqrt",{enumerable:!0,get:function(){return u.bnSqrt}}),Object.defineProperty(t,"bnToBn",{enumerable:!0,get:function(){return c.bnToBn}}),Object.defineProperty(t,"bnToHex",{enumerable:!0,get:function(){return f.bnToHex}}),Object.defineProperty(t,"bnToU8a",{enumerable:!0,get:function(){return l.bnToU8a}});var o=r(850);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var i=r(8418),a=r(7107),s=r(5615),u=r(1480),c=r(8218),f=r(8522),l=r(3845)},5615:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnMax=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i(t,o.BN.max)},t.bnMin=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i(t,o.BN.min)},t.find=i;var n=r(7234),o=r(8418);function i(e,t){(0,n.assert)(e.length>=1,"Must provide one or more BN arguments");for(var r=e[0],o=1;o<e.length;o++)r=t(r,e[o]);return r}},1480:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnSqrt=function(e){var t=(0,a.bnToBn)(e);if((0,n.assert)(t.gte(i.BN_ZERO),"square root of negative numbers is not supported"),t.lte(i.BN_MAX_INTEGER))return new o.BN(Math.floor(Math.sqrt(t.toNumber())));for(var r=s.clone();;){var u=t.div(r).iadd(r).ishrn(1);if(r.eq(u)||r.eq(u.sub(i.BN_ONE)))return r;r=u}};var n=r(7234),o=r(8418),i=r(850),a=r(8218),s=new o.BN(94906265)},8218:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToBn=function(e){return u.BN.isBN(e)?e:e?(0,i.isHex)(e)?(0,n.hexToBn)(e.toString()):(0,o.isBigInt)(e)?new u.BN(e.toString()):(0,s.isToBn)(e)?e.toBn():(0,a.isToBigInt)(e)?new u.BN(e.toBigInt().toString()):new u.BN(e):new u.BN(0)};var n=r(4610),o=r(6867),i=r(853),a=r(1720),s=r(404),u=r(8418)},8522:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToHex=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,r=arguments.length>2?arguments[2]:void 0;return e?(0,i.u8aToHex)((0,a.bnToU8a)(e,(0,o.objectSpread)({isLe:!1,isNegative:!1},(0,n.isNumber)(t)?{bitLength:t,isLe:r}:t))):s};var n=r(5325),o=r(660),i=r(8720),a=r(3845),s="0x00",u={bitLength:-1,isLe:!1,isNegative:!1}},3845:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToU8a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,r=arguments.length>2?arguments[2]:void 0,c=(0,o.objectSpread)({bitLength:-1,isLe:!0,isNegative:!1},(0,n.isNumber)(t)?{bitLength:t,isLe:r}:t),f=(0,i.bnToBn)(e),l=-1===c.bitLength?Math.ceil(f.bitLength()/8):Math.ceil((c.bitLength||0)/8);return e?u(f,l,c):s(l,c)};var n=r(5325),o=r(660),i=r(8218),a={bitLength:-1,isLe:!0,isNegative:!1};function s(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}function u(e,t,r){var n=r.isLe,o=r.isNegative,i=new Uint8Array(t),a=o?e.toTwos(8*t):e;return i.set(a.toArray(n?"le":"be",t),0),i}},5:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"bufferToU8a",{enumerable:!0,get:function(){return n.bufferToU8a}});var n=r(9049)},9049:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bufferToU8a=function(e){return new Uint8Array(e||[])}},8641:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={packageInfo:!0};Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}});var o=r(4216),i=r(8916);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var a=r(7234);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var s=r(2952);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var u=r(4787);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var c=r(5);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var f=r(4123);Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var l=r(1467);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var d=r(2129);Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var h=r(6119);Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var p=r(9121);Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=r(2132);Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=r(4426);Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var b=r(4743);Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var m=r(3171);Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var g=r(9242);Object.keys(g).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===g[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return g[e]}}))}));var w=r(263);Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}));var x=r(9140);Object.keys(x).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===x[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return x[e]}}))}));var P=r(9811);Object.keys(P).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===P[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return P[e]}}))}));var j=r(7);Object.keys(j).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===j[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return j[e]}}))}));var O=r(8720);Object.keys(O).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===O[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return O[e]}}))}));var M=r(5959);Object.keys(M).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===M[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return M[e]}}))}))},5617:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactAddLength=function(e){return(0,n.u8aConcat)((0,o.compactToU8a)(e.length),e)};var n=r(8720),o=r(1654)},5016:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactFromU8a=function(e){var t=(0,o.u8aToU8a)(e),r=3&t[0];if(0===r)return[1,new n.BN(t[0]).ishrn(2)];if(1===r)return[2,(0,o.u8aToBn)(t.subarray(0,2),!0).ishrn(2)];if(2===r)return[4,(0,o.u8aToBn)(t.subarray(0,4),!0).ishrn(2)];var i=1+new n.BN(t[0]).ishrn(2).iadd(n.BN_FOUR).toNumber();return[i,(0,o.u8aToBn)(t.subarray(1,i),!0)]};var n=r(4787),o=r(8720)},4123:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"compactAddLength",{enumerable:!0,get:function(){return n.compactAddLength}}),Object.defineProperty(t,"compactFromU8a",{enumerable:!0,get:function(){return i.compactFromU8a}}),Object.defineProperty(t,"compactStripLength",{enumerable:!0,get:function(){return o.compactStripLength}}),Object.defineProperty(t,"compactToU8a",{enumerable:!0,get:function(){return a.compactToU8a}});var n=r(5617),o=r(3405),i=r(5016),a=r(1654)},3405:(e,t,r)=>{"use strict";var n=r(4863)(r(8169));Object.defineProperty(t,"__esModule",{value:!0}),t.compactStripLength=function(e){var t=(0,o.compactFromU8a)(e),r=(0,n.default)(t,2),i=r[0],a=i+r[1].toNumber();return[a,e.subarray(i,a)]};var o=r(5016)},1654:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactToU8a=function(e){var t=(0,o.bnToBn)(e);if(t.lte(a))return new Uint8Array([t.toNumber()<<2]);if(t.lte(s))return(0,o.bnToU8a)(t.shln(2).iadd(o.BN_ONE),16,!0);if(t.lte(u))return(0,o.bnToU8a)(t.shln(2).iadd(o.BN_TWO),32,!0);for(var r=(0,o.bnToU8a)(t),c=r.length;0===r[c-1];)c--;return(0,n.assert)(c>=4,"Invalid length, previous checks match anything less than 2^30"),(0,i.u8aConcat)([3+(c-4<<2)],r.subarray(0,c))};var n=r(7234),o=r(4787),i=r(8720),a=o.BN_TWO.pow(new o.BN(6)).isub(o.BN_ONE),s=o.BN_TWO.pow(new o.BN(14)).isub(o.BN_ONE),u=o.BN_TWO.pow(new o.BN(30)).isub(o.BN_ONE)},8429:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(1984),o=r(5499),i=[n.packageInfo,o.packageInfo];t.default=i},934:(e,t,r)=>{"use strict";var n=r(4863)(r(8429)),o=r(4216);(0,r(5959).detectPackage)(o.packageInfo,null,n.default)},1467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTime=s;var n=r(660),o={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function i(e,t){return{days:e.days+t.days,hours:e.hours+t.hours,milliseconds:e.milliseconds+t.milliseconds,minutes:e.minutes+t.minutes,seconds:e.seconds+t.seconds}}function a(e){var t=e/1e3;if(t<60){var r=Math.floor(t);return i((0,n.objectSpread)({},o,{seconds:r}),s(e-1e3*r))}return function(e,t){var r=t/60;if(r<60){var a=Math.floor(r);return i((0,n.objectSpread)({},o,{minutes:a}),s(e-60*a*1e3))}return function(e,t){var r=t/60;if(r<24){var a=Math.floor(r);return i((0,n.objectSpread)({},o,{hours:a}),s(e-3600*a*1e3))}return function(e,t){var r=Math.floor(t/24);return i((0,n.objectSpread)({},o,{days:r}),s(e-86400*r*1e3))}(e,r)}(e,r)}(e,t)}function s(e){return e?e<1e3?(0,n.objectSpread)({},o,{milliseconds:e}):a(e):o}},4662:(e,t,r)=>{"use strict";var n=r(4863)(r(8169));Object.defineProperty(t,"__esModule",{value:!0}),t.formatBalance=void 0;var o=r(8218),i=r(7797),a=r(8098),s=r(1296),u=r(1385),c=u.SI[u.SI_MID].text,f=0,l=c;function d(e,t,r,n){var o=(0,i.isBoolean)(n)?u.SI[u.SI_MID].text:n;return t||r?"-"===e.value?n?" ".concat(o):"":" ".concat(r?"".concat(e.text).concat(n?" ":""):e.value).concat(n?o:""):""}function h(e,t,r){var n=(0,u.calcSi)(e,t,r),o=e.length-(t+n.power);return[n,e.substring(0,o)||"0","".concat("".concat(new Array(1+(o<0?0-o:0)).join("0")).concat(e).substring(o<0?0:o),"0000").substring(0,4)]}var p=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:f,a=(0,o.bnToBn)(e).toString();if(0===a.length||"0"===a)return"0";var u=(0,i.isBoolean)(t)?{withSi:t}:t,c=u.decimals,l=void 0===c?r:c,p=u.forceUnit,y=void 0===p?void 0:p,v=u.withSi,b=void 0===v||v,m=u.withSiFull,g=void 0!==m&&m,w=u.withUnit,x=void 0===w||w,P="";a[0].startsWith("-")&&(P="-",a=a.substring(1));var j=h(a,l,y),O=(0,n.default)(j,3),M=O[0],k=O[1],T=O[2],z=d(M,b,g,x);return"".concat(P).concat((0,s.formatDecimal)(k),".").concat(T).concat(z)};t.formatBalance=p,p.calcSi=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return(0,u.calcSi)(e,t)},p.findSi=u.findSi,p.getDefaults=function(){return{decimals:f,unit:l}},p.getOptions=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f;return u.SI.filter((function(t){var r=t.power;return!(r<0)||e+r>=0}))},p.setDefaults=function(e){var t=e.decimals,r=e.unit;f=(0,a.isUndefined)(t)?f:Array.isArray(t)?t[0]:t,l=(0,a.isUndefined)(r)?l:Array.isArray(r)?r[0]:r,u.SI[u.SI_MID].text=l}},6757:(e,t)=>{"use strict";function r(e){return e.toString().padStart(2,"0")}Object.defineProperty(t,"__esModule",{value:!0}),t.formatDate=function(e){var t=e.getFullYear().toString(),n=r(e.getMonth()+1),o=r(e.getDate()),i=r(e.getHours()),a=r(e.getMinutes()),s=r(e.getSeconds());return"".concat(t,"-").concat(n,"-").concat(o," ").concat(i,":").concat(a,":").concat(s)}},1296:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatDecimal=function(e){var t=e[0].startsWith("-"),n=t?e.substr(1).match(r):e.match(r);return n?"".concat(t?"-":"").concat(n.join(",")):e};var r=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g")},1435:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatElapsed=function(e,t){var r,o=e&&e.getTime()||0,i=t instanceof Date?t.getTime():(0,n.bnToBn)(t).toNumber();return o&&i?(r=Math.max(Math.abs(o-i),0)/1e3)<15?"".concat(r.toFixed(1),"s"):r<60?"".concat(0|r,"s"):r<3600?"".concat(r/60|0,"m"):"".concat(r/3600|0,"h"):"0.0s"};var n=r(8218)},4335:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatNumber=function(e){return(0,o.formatDecimal)((0,n.bnToBn)(e).toString())};var n=r(8218),o=r(1296)},2129:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"calcSi",{enumerable:!0,get:function(){return u.calcSi}}),Object.defineProperty(t,"findSi",{enumerable:!0,get:function(){return u.findSi}}),Object.defineProperty(t,"formatBalance",{enumerable:!0,get:function(){return n.formatBalance}}),Object.defineProperty(t,"formatDate",{enumerable:!0,get:function(){return o.formatDate}}),Object.defineProperty(t,"formatDecimal",{enumerable:!0,get:function(){return i.formatDecimal}}),Object.defineProperty(t,"formatElapsed",{enumerable:!0,get:function(){return a.formatElapsed}}),Object.defineProperty(t,"formatNumber",{enumerable:!0,get:function(){return s.formatNumber}});var n=r(4662),o=r(6757),i=r(1296),a=r(1435),s=r(4335),u=r(1385)},1385:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SI_MID=t.SI=void 0,t.calcSi=function(e,t,o){if(o)return n(o);var i=7+Math.ceil((e.length-t)/3);return r[i]||r[i<0?0:r.length-1]},t.findSi=n,t.SI_MID=8;var r=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function n(e){for(var t=0;t<r.length;t++)if(r[t].value===e)return r[t];return r[8]}t.SI=r},6119:(e,t,r)=>{"use strict";var n=r(4155),o=r(4863)(r(4771));Object.defineProperty(t,"__esModule",{value:!0}),t.hasWasm=t.hasProcess=t.hasEsm=t.hasDirname=t.hasCjs=t.hasBuffer=t.hasBigInt=void 0;var i=r(8107),a="function"==typeof i.BigInt&&"function"==typeof i.BigInt.asIntN;t.hasBigInt=a;var s="undefined"!=typeof Buffer;t.hasBuffer=s,t.hasCjs=!0,t.hasDirname=!0,t.hasEsm=!1;var u="object"===(void 0===n?"undefined":(0,o.default)(n));t.hasProcess=u;var c="undefined"!=typeof WebAssembly;t.hasWasm=c},875:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexAddPrefix=function(e){return e&&(0,n.hexHasPrefix)(e)?e:"0x".concat(e&&e.length%2==1?"0":"").concat(e||"")};var n=r(2274)},9362:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.U8_TO_HEX=t.U16_TO_HEX=t.HEX_TO_U8=t.HEX_TO_U16=void 0;var r=new Array(256);t.U8_TO_HEX=r;var n=new Array(65536);t.U16_TO_HEX=n;var o={};t.HEX_TO_U8=o;var i={};t.HEX_TO_U16=i;for(var a=0;a<256;a++){var s=a.toString(16).padStart(2,"0");r[a]=s,o[s]=a}for(var u=0;u<256;u++)for(var c=0;c<256;c++){var f=r[u]+r[c],l=u<<8|c;n[l]=f,i[f]=l}},1811:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexFixLength=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Math.ceil(t/4),a=i+2;return(0,n.hexAddPrefix)(-1===t||e.length===a||!r&&e.length<a?(0,o.hexStripPrefix)(e):e.length>a?(0,o.hexStripPrefix)(e).slice(-1*i):"".concat("0".repeat(i)).concat((0,o.hexStripPrefix)(e)).slice(-1*i))};var n=r(875),o=r(8661)},2274:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexHasPrefix=function(e){return!!e&&(0,n.isHex)(e,-1)};var n=r(853)},9121:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hexAddPrefix",{enumerable:!0,get:function(){return n.hexAddPrefix}}),Object.defineProperty(t,"hexFixLength",{enumerable:!0,get:function(){return o.hexFixLength}}),Object.defineProperty(t,"hexHasPrefix",{enumerable:!0,get:function(){return i.hexHasPrefix}}),Object.defineProperty(t,"hexStripPrefix",{enumerable:!0,get:function(){return a.hexStripPrefix}}),Object.defineProperty(t,"hexToBigInt",{enumerable:!0,get:function(){return s.hexToBigInt}}),Object.defineProperty(t,"hexToBn",{enumerable:!0,get:function(){return u.hexToBn}}),Object.defineProperty(t,"hexToNumber",{enumerable:!0,get:function(){return c.hexToNumber}}),Object.defineProperty(t,"hexToString",{enumerable:!0,get:function(){return f.hexToString}}),Object.defineProperty(t,"hexToU8a",{enumerable:!0,get:function(){return l.hexToU8a}});var n=r(875),o=r(1811),i=r(2274),a=r(8661),s=r(5972),u=r(4610),c=r(2520),f=r(6562),l=r(1399)},8661:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexStripPrefix=function(e){if(!e||"0x"===e)return"";if(n.REGEX_HEX_PREFIXED.test(e))return e.substr(2);if(n.REGEX_HEX_NOPREFIX.test(e))return e;throw new Error("Expected hex value to convert, found '".concat(e,"'"))};var n=r(853)},5972:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBigInt=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e&&"0x"!==e?(0,i.u8aToBigInt)((0,a.hexToU8a)(e),(0,o.objectSpread)({isLe:!1,isNegative:!1},t)):(0,n.BigInt)(0)};var n=r(8107),o=r(660),i=r(1166),a=r(1399)},4610:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBn=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;if(!e||"0x"===e)return new n.BN(0);var r=(0,i.objectSpread)({isLe:!1,isNegative:!1},(0,o.isBoolean)(t)?{isLe:t}:t),u=r.isLe,c=r.isNegative,f=(0,a.hexStripPrefix)(e),l=new n.BN(f,16,u?"le":"be");return c?l.fromTwos(4*f.length):l};var n=r(8418),o=r(7797),i=r(660),a=r(8661),s={isLe:!1,isNegative:!1}},2520:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToNumber=function(e){return e?(0,n.hexToBn)(e).toNumber():NaN};var n=r(4610)},6562:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToString=function(e){return(0,n.u8aToString)((0,o.hexToU8a)(e))};var n=r(5609),o=r(1399)},1399:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToU8a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if(!e)return new Uint8Array;for(var r=(0,o.hexStripPrefix)(e).toLowerCase(),i=r.length/2,a=Math.ceil(-1===t?i:t/8),s=new Uint8Array(a),u=a>i?a-i:0,c=new DataView(s.buffer,u),f=(a-u)%2,l=a-u-f,d=0;d<l;d+=2)c.setUint16(d,n.HEX_TO_U16[r.substr(2*d,4)]);return f&&c.setUint8(l,n.HEX_TO_U8[r.substr(r.length-2,2)]),s};var n=r(9362),o=r(8661)},9338:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(934);var n=r(8641);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},8869:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isArray=function(e){return Array.isArray(e)}},4890:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAscii=function(e){var t=(0,i.isString)(e);return e?t&&!(0,o.isHex)(e)?e.toString().split("").every(u):(0,n.u8aToU8a)(e).every(s):t};var n=r(1960),o=r(853),i=r(8694),a=[9,10,13];function s(e){return e<127&&(e>=32||a.includes(e))}function u(e){return s(e.charCodeAt(0))}},6867:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBigInt=function(e){return"bigint"==typeof e}},928:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBn=function(e){return n.BN.isBN(e)};var n=r(8418)},7797:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBoolean=function(e){return"boolean"==typeof e}},4060:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBuffer=function(e){return n.hasBuffer&&Buffer.isBuffer(e)};var n=r(6119)},2984:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isChildClass=function(e,t){return!!t&&(e===t||e.isPrototypeOf(t))}},6152:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCodec=function(e){return o(e)&&i(e.registry)};var n=r(3444),o=(0,n.isOnObject)("toHex","toU8a"),i=(0,n.isOnObject)("get")},7865:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCompact=function(e){return n(e)};var n=(0,r(3444).isOnObject)("toBigInt","toBn","toNumber","unwrap")},291:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isError=function(e){return e instanceof Error}},3146:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFunction=function(e){return"function"==typeof e}},3444:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isOn=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return((0,o.isObject)(e)||(0,n.isFunction)(e))&&t.every((function(t){return(0,n.isFunction)(e[t])}))}},t.isOnObject=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return(0,o.isObject)(e)&&t.every((function(t){return(0,n.isFunction)(e[t])}))}};var n=r(3146),o=r(5598)},853:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.REGEX_HEX_PREFIXED=t.REGEX_HEX_NOPREFIX=void 0,t.isHex=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2?arguments[2]:void 0;return"string"==typeof e&&("0x"===e||r.test(e))&&(-1===t?n||e.length%2==0:e.length===2+Math.ceil(t/4))};var r=/^0x[\da-fA-F]+$/;t.REGEX_HEX_PREFIXED=r,t.REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/},2132:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isArray",{enumerable:!0,get:function(){return n.isArray}}),Object.defineProperty(t,"isAscii",{enumerable:!0,get:function(){return o.isAscii}}),Object.defineProperty(t,"isBigInt",{enumerable:!0,get:function(){return i.isBigInt}}),Object.defineProperty(t,"isBn",{enumerable:!0,get:function(){return a.isBn}}),Object.defineProperty(t,"isBoolean",{enumerable:!0,get:function(){return u.isBoolean}}),Object.defineProperty(t,"isBuffer",{enumerable:!0,get:function(){return s.isBuffer}}),Object.defineProperty(t,"isChildClass",{enumerable:!0,get:function(){return c.isChildClass}}),Object.defineProperty(t,"isCodec",{enumerable:!0,get:function(){return f.isCodec}}),Object.defineProperty(t,"isCompact",{enumerable:!0,get:function(){return l.isCompact}}),Object.defineProperty(t,"isError",{enumerable:!0,get:function(){return d.isError}}),Object.defineProperty(t,"isFunction",{enumerable:!0,get:function(){return h.isFunction}}),Object.defineProperty(t,"isHex",{enumerable:!0,get:function(){return p.isHex}}),Object.defineProperty(t,"isInstanceOf",{enumerable:!0,get:function(){return y.isInstanceOf}}),Object.defineProperty(t,"isIp",{enumerable:!0,get:function(){return v.isIp}}),Object.defineProperty(t,"isJsonObject",{enumerable:!0,get:function(){return b.isJsonObject}}),Object.defineProperty(t,"isNull",{enumerable:!0,get:function(){return m.isNull}}),Object.defineProperty(t,"isNumber",{enumerable:!0,get:function(){return g.isNumber}}),Object.defineProperty(t,"isObject",{enumerable:!0,get:function(){return w.isObject}}),Object.defineProperty(t,"isObservable",{enumerable:!0,get:function(){return x.isObservable}}),Object.defineProperty(t,"isPromise",{enumerable:!0,get:function(){return P.isPromise}}),Object.defineProperty(t,"isString",{enumerable:!0,get:function(){return j.isString}}),Object.defineProperty(t,"isTestChain",{enumerable:!0,get:function(){return O.isTestChain}}),Object.defineProperty(t,"isToBigInt",{enumerable:!0,get:function(){return M.isToBigInt}}),Object.defineProperty(t,"isToBn",{enumerable:!0,get:function(){return k.isToBn}}),Object.defineProperty(t,"isU8a",{enumerable:!0,get:function(){return T.isU8a}}),Object.defineProperty(t,"isUndefined",{enumerable:!0,get:function(){return z.isUndefined}}),Object.defineProperty(t,"isUtf8",{enumerable:!0,get:function(){return N.isUtf8}}),Object.defineProperty(t,"isWasm",{enumerable:!0,get:function(){return E.isWasm}});var n=r(8869),o=r(4890),i=r(6867),a=r(928),s=r(4060),u=r(7797),c=r(2984),f=r(6152),l=r(7865),d=r(291),h=r(3146),p=r(853),y=r(4630),v=r(4759),b=r(4790),m=r(5943),g=r(5325),w=r(5598),x=r(8175),P=r(7178),j=r(8694),O=r(3472),M=r(1720),k=r(404),T=r(3510),z=r(8098),N=r(1186),E=r(8070)},4630:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInstanceOf=function(e,t){return e instanceof t}},4759:(e,t,r)=>{"use strict";var n=r(4863);Object.defineProperty(t,"__esModule",{value:!0}),t.isIp=function(e,t){return"v4"===t?o.default.v4({exact:!0}).test(e):"v6"===t?o.default.v6({exact:!0}).test(e):(0,o.default)({exact:!0}).test(e)};var o=n(r(1476))},4790:(e,t,r)=>{"use strict";var n=r(4863)(r(4771));Object.defineProperty(t,"__esModule",{value:!0}),t.isJsonObject=function(e){var t="string"!=typeof e?(0,o.stringify)(e):e;try{var r=JSON.parse(t);return"object"===(0,n.default)(r)&&null!==r}catch(e){return!1}};var o=r(7)},5943:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNull=function(e){return null===e}},5325:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNumber=function(e){return"number"==typeof e}},5598:(e,t,r)=>{"use strict";var n=r(4863)(r(4771));Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=function(e){return!!e&&"object"===(0,n.default)(e)}},8175:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObservable=void 0;var n=(0,r(3444).isOn)("next");t.isObservable=n},7178:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isPromise=void 0;var n=(0,r(3444).isOnObject)("catch","then");t.isPromise=n},8694:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isString=function(e){return"string"==typeof e||e instanceof String}},3472:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTestChain=function(e){return!!e&&!!r.test(e.toString())};var r=/(Development|Local Testnet)$/},1720:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBigInt=void 0;var n=(0,r(3444).isOn)("toBigInt");t.isToBigInt=n},404:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBn=void 0;var n=(0,r(3444).isOn)("toBn");t.isToBn=n},3510:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isU8a=function(e){return e instanceof Uint8Array}},8098:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUndefined=function(e){return void 0===e}},1186:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUtf8=function(e){if(!e)return(0,o.isString)(e);for(var t=(0,n.u8aToU8a)(e),r=t.length,i=0;i<r;)if(t[i]<=127)i+=1;else if(t[i]>=194&&t[i]<=223){if(!(i+1<r))return!1;if(t[i+1]<128||t[i+1]>191)return!1;i+=2}else if(224===t[i]){if(!(i+2<r))return!1;if(t[i+1]<160||t[i+1]>191)return!1;if(t[i+2]<128||t[i+2]>191)return!1;i+=3}else if(t[i]>=225&&t[i]<=236){if(!(i+2<r))return!1;if(t[i+1]<128||t[i+1]>191)return!1;if(t[i+2]<128||t[i+2]>191)return!1;i+=3}else if(237===t[i]){if(!(i+2<r))return!1;if(t[i+1]<128||t[i+1]>159)return!1;if(t[i+2]<128||t[i+2]>191)return!1;i+=3}else if(t[i]>=238&&t[i]<=239){if(!(i+2<r))return!1;if(t[i+1]<128||t[i+1]>191)return!1;if(t[i+2]<128||t[i+2]>191)return!1;i+=3}else if(240===t[i]){if(!(i+3<r))return!1;if(t[i+1]<144||t[i+1]>191)return!1;if(t[i+2]<128||t[i+2]>191)return!1;if(t[i+3]<128||t[i+3]>191)return!1;i+=4}else if(t[i]>=241&&t[i]<=243){if(!(i+3<r))return!1;if(t[i+1]<128||t[i+1]>191)return!1;if(t[i+2]<128||t[i+2]>191)return!1;if(t[i+3]<128||t[i+3]>191)return!1;i+=4}else{if(244!==t[i])return!1;if(!(i+3<r))return!1;if(t[i+1]<128||t[i+1]>143)return!1;if(t[i+2]<128||t[i+2]>191)return!1;if(t[i+3]<128||t[i+3]>191)return!1;i+=4}return!0};var n=r(1960),o=r(8694)},8070:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWasm=function(e){return(0,o.isU8a)(e)&&(0,n.u8aEq)(e.subarray(0,4),i)};var n=r(4987),o=r(3510),i=new Uint8Array([0,97,115,109])},4426:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lazyMethod=o,t.lazyMethods=function(e,t,r,n){for(var i=0;i<t.length;i++)o(e,t[i],r,n);return e};var n=r(8098);function o(e,t,r,o){var i,a=o?o(t):t.toString();Object.defineProperty(e,a,{configurable:!0,enumerable:!0,get:function(){if((0,n.isUndefined)(i)){i=r(t);try{Object.defineProperty(this,a,{value:i})}catch(e){}}return i}})}},4743:(e,t,r)=>{"use strict";var n=r(4155),o=r(4863),i=o(r(8169)),a=o(r(5041));function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0}),t.logger=function(e){var t="".concat(e.toUpperCase(),":").padStart(16),r=function(e){var t=(v.hasProcess?n:{}).env||{},r=parseInt(t.DEBUG_MAX||"-1",10);return[O((t.DEBUG||"").toLowerCase().split(","),e),isNaN(r)?-1:r]}(e.toLowerCase()),o=(0,i.default)(r,2),a=o[0],s=o[1];return{debug:a?function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return w("debug",t,r,s)}:x,error:function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return w("error",t,r)},log:function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return w("log",t,r)},noop:x,warn:function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return w("warn",t,r)}}},t.loggerFormat=m;var u=r(6757),c=r(928),f=r(4060),l=r(3146),d=r(5598),h=r(3510),p=r(8721),y=r(1960),v=r(6119),b={debug:"log",error:"error",log:"log",warn:"warn"};function m(e){return Array.isArray(e)?e.map(m):(0,c.isBn)(e)?e.toString():(0,h.isU8a)(e)||(0,f.isBuffer)(e)?(0,p.u8aToHex)((0,y.u8aToU8a)(e)):function(e){if(e&&(0,d.isObject)(e)&&e.constructor===Object){for(var t={},r=0,n=Object.keys(e);r<n.length;r++){var o=n[r];t[o]=m(e[o])}return t}return e}(e)}function g(e){return function(t){if(e<=0)return t;var r="".concat(t);return r.length<e?t:"".concat(r.substr(0,e)," ...")}}function w(e,t,r){var n,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;if(1===r.length&&(0,l.isFunction)(r[0])){var i=r[0]();return w(e,t,Array.isArray(i)?i:[i],o)}(n=console)[b[e]].apply(n,[(0,u.formatDate)(new Date),t].concat((0,a.default)(r.map(m).map(g(o)))))}function x(){}function P(e,t){return!!e&&("*"===e||t===e||e.endsWith("*")&&t.startsWith(e.slice(0,-1)))}function j(e,t){return!!e&&e.startsWith("-")&&(t===e.slice(1)||e.endsWith("*")&&t.startsWith(e.slice(1,-1)))}function O(e,t){var r,n=!1,o=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return s(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){u=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(u)throw i}}}}(e);try{for(o.s();!(r=o.n()).done;){var i=r.value;P(i,t)?n=!0:j(i,t)&&(n=!1)}}catch(e){o.e(e)}finally{o.f()}return n}},3171:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.memoize=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.getInstanceId,a=void 0===r?i:r,s={},u=function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];var u=(0,o.stringify)(r),c=a();return s[c]||(s[c]={}),(0,n.isUndefined)(s[c][u])&&(s[c][u]=e.apply(void 0,r)),s[c][u]};return u.unmemoize=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i=(0,o.stringify)(t),u=a();s[u]&&!(0,n.isUndefined)(s[u][i])&&delete s[u][i]},u};var n=r(8098),o=r(7);function i(){return"none"}},9242:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"numberToHex",{enumerable:!0,get:function(){return n.numberToHex}}),Object.defineProperty(t,"numberToU8a",{enumerable:!0,get:function(){return o.numberToU8a}});var n=r(8952),o=r(4549)},8952:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToHex=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if((0,i.isUndefined)(e)||(0,o.isNull)(e)||isNaN(e))return"0x";var r=e.toString(16);return(0,n.hexFixLength)(r.length%2?"0".concat(r):r,t,!0)};var n=r(1811),o=r(5943),i=r(8098)},4549:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToU8a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return(0,i.isUndefined)(e)||(0,o.isNull)(e)||isNaN(e)?new Uint8Array:(0,n.hexToU8a)((0,a.numberToHex)(e,t))};var n=r(1399),o=r(5943),i=r(8098),a=r(8952)},4585:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectClear=function(e){for(var t=Object.keys(e),r=0;r<t.length;r++)delete e[t[r]];return e}},8014:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectCopy=function(e){return(0,n.objectSpread)({},e)};var n=r(660)},2119:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectEntries=function(e){return Object.entries(e)}},263:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"objectClear",{enumerable:!0,get:function(){return n.objectClear}}),Object.defineProperty(t,"objectCopy",{enumerable:!0,get:function(){return o.objectCopy}}),Object.defineProperty(t,"objectEntries",{enumerable:!0,get:function(){return i.objectEntries}}),Object.defineProperty(t,"objectKeys",{enumerable:!0,get:function(){return a.objectKeys}}),Object.defineProperty(t,"objectProperties",{enumerable:!0,get:function(){return s.objectProperties}}),Object.defineProperty(t,"objectProperty",{enumerable:!0,get:function(){return s.objectProperty}}),Object.defineProperty(t,"objectSpread",{enumerable:!0,get:function(){return u.objectSpread}}),Object.defineProperty(t,"objectValues",{enumerable:!0,get:function(){return c.objectValues}});var n=r(4585),o=r(8014),i=r(2119),a=r(2256),s=r(4517),u=r(660),c=r(2544)},2256:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectKeys=function(e){return Object.keys(e)}},4517:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectProperties=function(e,t,r){for(var n=function(n){o(e,t[n],(function(e){return r(e,n)}))},i=0;i<t.length;i++)n(i)},t.objectProperty=o;var n=r(8098);function o(e,t,r){!Object.prototype.hasOwnProperty.call(e,t)&&(0,n.isUndefined)(e[t])&&Object.defineProperty(e,t,{enumerable:!0,get:function(){return r(t)}})}},660:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectSpread=function(e){for(var t=0;t<(arguments.length<=1?0:arguments.length-1);t++){var r=t+1<1||arguments.length<=t+1?void 0:arguments[t+1];if(r)for(var o=(0,n.objectKeys)(r),i=0;i<o.length;i++){var a=o[i];e[a]=r[a]}}return e};var n=r(2256)},2544:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectValues=function(e){return Object.values(e)}},4216:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/util",path:"/",type:"cjs",version:"9.1.1"}},9140:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.promisify=function(e,t){for(var r=arguments.length,n=new Array(r>2?r-2:0),o=2;o<r;o++)n[o-2]=arguments[o];return new Promise((function(r,o){t.apply(e,n.concat((function(e,t){e?o(e):r(t)})))}))}},6234:(e,t)=>{"use strict";function r(e){return function(t){return t.toString().replace(/[-_., ]+/g," ").trim().split(" ").map((function(t,r){return function(t,r){return e(t[0],r)+t.slice(1)}(t.toUpperCase()===t?t.toLowerCase():t.replace(/^[A-Z0-9]{2,}[^a-z]/,(function(e){return e.slice(0,e.length-1).toLowerCase()+e.slice(-1).toUpperCase()})),r)})).join("")}}Object.defineProperty(t,"__esModule",{value:!0}),t.stringPascalCase=t.stringCamelCase=void 0;var n=r((function(e,t){return t?e.toUpperCase():e.toLowerCase()}));t.stringCamelCase=n;var o=r((function(e){return e.toUpperCase()}));t.stringPascalCase=o},9811:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"stringCamelCase",{enumerable:!0,get:function(){return n.stringCamelCase}}),Object.defineProperty(t,"stringLowerFirst",{enumerable:!0,get:function(){return o.stringLowerFirst}}),Object.defineProperty(t,"stringPascalCase",{enumerable:!0,get:function(){return n.stringPascalCase}}),Object.defineProperty(t,"stringShorten",{enumerable:!0,get:function(){return i.stringShorten}}),Object.defineProperty(t,"stringToHex",{enumerable:!0,get:function(){return a.stringToHex}}),Object.defineProperty(t,"stringToU8a",{enumerable:!0,get:function(){return s.stringToU8a}}),Object.defineProperty(t,"stringUpperFirst",{enumerable:!0,get:function(){return o.stringUpperFirst}});var n=r(6234),o=r(1273),i=r(2859),a=r(3104),s=r(3613)},1273:(e,t)=>{"use strict";function r(e){return function(t){return t?e(t[0])+t.slice(1):""}}Object.defineProperty(t,"__esModule",{value:!0}),t.stringUpperFirst=t.stringLowerFirst=void 0;var n=r((function(e){return e.toLowerCase()}));t.stringLowerFirst=n;var o=r((function(e){return e.toUpperCase()}));t.stringUpperFirst=o},2859:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringShorten=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return e.length<=2+2*t?e.toString():"".concat(e.substr(0,t),"…").concat(e.slice(-t))}},3104:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToHex=function(e){return(0,n.u8aToHex)((0,o.stringToU8a)(e))};var n=r(8721),o=r(3613)},3613:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToU8a=function(e){return e?n.encode(e.toString()):new Uint8Array};var n=new(r(5499).TextEncoder)},7:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringify=function(e,t){return JSON.stringify(e,o,t)};var n=r(6867);function o(e,t){return(0,n.isBigInt)(t)?t.toString():t}},4432:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aCmp=function(e,t){for(var r=(0,n.u8aToU8a)(e),o=(0,n.u8aToU8a)(t),i=0;;){var a=i>=r.length,s=i>=o.length;if(a&&s)return 0;if(a)return-1;if(s)return 1;if(r[i]!==o[i])return r[i]>o[i]?1:-1;i++}};var n=r(1960)},9670:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aConcat=function(){for(var e=0,t=0,r=new Array(arguments.length),o=0;o<arguments.length;o++)r[o]=(0,n.u8aToU8a)(o<0||arguments.length<=o?void 0:arguments[o]),e+=r[o].length;for(var i=new Uint8Array(e),a=0;a<r.length;a++)i.set(r[a],t),t+=r[a].length;return i};var n=r(1960)},6858:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEmpty=function(e){for(var t=0;t<e.length;t++)if(e[t])return!1;return!0}},4987:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEq=function(e,t){var r=(0,n.u8aToU8a)(e),o=(0,n.u8aToU8a)(t);if(r.length===o.length){for(var i=new DataView(r.buffer,r.byteOffset),a=new DataView(o.buffer,o.byteOffset),s=r.length%4,u=r.length-s,c=0;c<u;c+=4)if(i.getUint32(c)!==a.getUint32(c))return!1;for(var f=u;f<r.length;f++)if(r[f]!==o[f])return!1;return!0}return!1};var n=r(1960)},6251:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aFixLength=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=Math.ceil(t/8);if(-1===t||e.length===n)return e;if(e.length>n)return e.subarray(0,n);var o=new Uint8Array(n);return o.set(e,r?0:n-e.length),o}},8720:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"U8A_WRAP_ETHEREUM",{enumerable:!0,get:function(){return y.U8A_WRAP_ETHEREUM}}),Object.defineProperty(t,"U8A_WRAP_POSTFIX",{enumerable:!0,get:function(){return y.U8A_WRAP_POSTFIX}}),Object.defineProperty(t,"U8A_WRAP_PREFIX",{enumerable:!0,get:function(){return y.U8A_WRAP_PREFIX}}),Object.defineProperty(t,"u8aCmp",{enumerable:!0,get:function(){return n.u8aCmp}}),Object.defineProperty(t,"u8aConcat",{enumerable:!0,get:function(){return o.u8aConcat}}),Object.defineProperty(t,"u8aEmpty",{enumerable:!0,get:function(){return i.u8aEmpty}}),Object.defineProperty(t,"u8aEq",{enumerable:!0,get:function(){return a.u8aEq}}),Object.defineProperty(t,"u8aFixLength",{enumerable:!0,get:function(){return s.u8aFixLength}}),Object.defineProperty(t,"u8aIsWrapped",{enumerable:!0,get:function(){return y.u8aIsWrapped}}),Object.defineProperty(t,"u8aSorted",{enumerable:!0,get:function(){return u.u8aSorted}}),Object.defineProperty(t,"u8aToBigInt",{enumerable:!0,get:function(){return c.u8aToBigInt}}),Object.defineProperty(t,"u8aToBn",{enumerable:!0,get:function(){return f.u8aToBn}}),Object.defineProperty(t,"u8aToBuffer",{enumerable:!0,get:function(){return l.u8aToBuffer}}),Object.defineProperty(t,"u8aToHex",{enumerable:!0,get:function(){return d.u8aToHex}}),Object.defineProperty(t,"u8aToString",{enumerable:!0,get:function(){return h.u8aToString}}),Object.defineProperty(t,"u8aToU8a",{enumerable:!0,get:function(){return p.u8aToU8a}}),Object.defineProperty(t,"u8aUnwrapBytes",{enumerable:!0,get:function(){return y.u8aUnwrapBytes}}),Object.defineProperty(t,"u8aWrapBytes",{enumerable:!0,get:function(){return y.u8aWrapBytes}});var n=r(4432),o=r(9670),i=r(6858),a=r(4987),s=r(6251),u=r(9603),c=r(1166),f=r(733),l=r(7359),d=r(8721),h=r(5609),p=r(1960),y=r(434)},9603:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aSorted=function(e){return e.sort(n.u8aCmp)};var n=r(4432)},1166:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBigInt=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||!e.length)return(0,n.BigInt)(0);var r=(0,i.objectSpread)({isLe:!0,isNegative:!1},t),a=r.isLe,s=r.isNegative,f=a?e.reverse():e;return s?c(u(f))*-o._1n-o._1n:c(f)};var n=r(8107),o=r(4377),i=r(660),a=(0,n.BigInt)(256),s=(0,n.BigInt)(65536);function u(e){for(var t=new Uint8Array(e.length),r=new DataView(e.buffer,e.byteOffset),n=new DataView(t.buffer),o=e.length%2,i=e.length-o,a=0;a<i;a+=2)n.setUint16(a,65535^r.getUint16(a));return o&&n.setUint8(i,255^r.getUint8(i)),t}function c(e){for(var t=new DataView(e.buffer,e.byteOffset),r=e.length%2,o=e.length-r,i=(0,n.BigInt)(0),u=0;u<o;u+=2)i=i*s+(0,n.BigInt)(t.getUint16(u));return r&&(i=i*a+(0,n.BigInt)(t.getUint8(o))),i}},733:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBn=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return(0,n.hexToBn)((0,o.u8aToHex)(e),t)};var n=r(4610),o=r(8721),i={isLe:!0,isNegative:!1}},7359:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBuffer=function(e){return Buffer.from(e||[])}},8721:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToHex=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=Math.ceil(t/8);return"".concat(r?"0x":"").concat(e&&e.length?n>0&&e.length>n?"".concat(o(e.subarray(0,n/2)),"…").concat(o(e.subarray(e.length-n/2))):o(e):"")};var n=r(9362);function o(e){for(var t=e.length%2,r=e.length-t,o=new DataView(e.buffer,e.byteOffset),i="",a=0;a<r;a+=2)i+=n.U16_TO_HEX[o.getUint16(a)];return t&&(i+=n.U8_TO_HEX[o.getUint8(r)]),i}},5609:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToString=function(e){return null!=e&&e.length?n.decode(e):""};var n=new(r(1984).TextDecoder)("utf-8")},1960:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToU8a=function(e){return e?Array.isArray(e)||(0,o.isBuffer)(e)?new Uint8Array(e):(0,a.isU8a)(e)?e:(0,i.isHex)(e)?(0,n.hexToU8a)(e):(0,s.stringToU8a)(e):new Uint8Array};var n=r(1399),o=r(4060),i=r(853),a=r(3510),s=r(3613)},434:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.U8A_WRAP_PREFIX=t.U8A_WRAP_POSTFIX=t.U8A_WRAP_ETHEREUM=void 0,t.u8aIsWrapped=f,t.u8aUnwrapBytes=function(e){var t=(0,i.u8aToU8a)(e);return f(t,!1)?t.subarray(s.length,t.length-u.length):t},t.u8aWrapBytes=function(e){var t=(0,i.u8aToU8a)(e);return f(t,!0)?t:(0,n.u8aConcat)(s,t,u)};var n=r(9670),o=r(4987),i=r(1960),a=(0,i.u8aToU8a)("Ethereum Signed Message:\n");t.U8A_WRAP_ETHEREUM=a;var s=(0,i.u8aToU8a)("<Bytes>");t.U8A_WRAP_PREFIX=s;var u=(0,i.u8aToU8a)("</Bytes>");t.U8A_WRAP_POSTFIX=u;var c=s.length+u.length;function f(e,t){return e.length>=c&&(0,o.u8aEq)(e.subarray(0,s.length),s)&&(0,o.u8aEq)(e.slice(-u.length),u)||t&&e.length>=a.length&&(0,o.u8aEq)(e.subarray(0,a.length),a)}},5959:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.detectPackage=function(e,t){var r=e.name,n=e.path,o=e.type,l=e.version,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];(0,i.assert)(r.startsWith("@polkadot"),(function(){return"Invalid package descriptor ".concat(r)}));var h=a(r);if(h.push({path:c(n,t),type:o,version:l}),1!==h.length)f("".concat(r," has multiple versions, ensure that there is only one installed."),h,u);else{var p=d.filter((function(e){return e&&e.version!==l}));p.length&&f("".concat(r," requires direct dependencies exactly matching version ").concat(l,"."),p,s)}};var n=r(3137),o=r(3146),i=r(7234);function a(e){var t=n.xglobal;return t.__polkadotjs||(t.__polkadotjs={}),t.__polkadotjs[e]||(t.__polkadotjs[e]=[]),t.__polkadotjs[e]}function s(e,t){return[e,t.name]}function u(e,t){var r,n=t.path,o=t.type;if(n&&n.length>=5){var i=n.indexOf("node_modules");r=-1===i?n:n.substring(i)}else r="<unknown>";return["".concat("".concat(o||"").padStart(3)," ").concat(e),r]}function c(e,t){if(e)return e;if((0,o.isFunction)(t))try{return t()||""}catch(e){return""}return t||""}function f(e,t,r){console.warn("".concat(e,"\n").concat("Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:","\n").concat(function(e,t){for(var r=0,n=0;n<e.length;n++)r=Math.max(r,e[n].version.length);return e.map((function(e){return"\t".concat(t(e.version.padEnd(r),e).join("\t"))})).join("\n")}(t,r)))}},1572:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/wasm-crypto-asmjs",path:"/",type:"cjs",version:"6.0.1"}},9778:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Decode=function(e){for(var t=[],r=0,n=0,o=0;o<e.length&&"="!==e[o];o++)r=r<<6|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[o]),(n+=6)>=8&&t.push(r>>>(n-=8)&255);return Uint8Array.from(t)}},3863:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return a.packageInfo}}),t.wasmBytes=void 0;var n=r(1311),o=r(9778),i=r(4556),a=r(4415),s=(0,i.unzlibSync)((0,o.base64Decode)(n.bytes),new Uint8Array(n.sizeUncompressed));t.wasmBytes=s},8103:e=>{"use strict";e.exports={bytes:"",sizeCompressed:171464,sizeUncompressed:340174}},1311:(e,t,r)=>{"use strict";var n=r(8103);e.exports=n},9448:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=[]},5218:(e,t,r)=>{"use strict";var n=r(2555),o=r(9338),i=n(r(9448)),a=r(4415);(0,o.detectPackage)(a.packageInfo,null,i.default)},4556:(e,t,r)=>{"use strict";var n=r(2555)(r(780));Object.defineProperty(t,"__esModule",{value:!0}),t.unzlibSync=function(e,t){return function(e,t,r){var n=!r||r.i;r||(r={});var f=e.length,l=!t||!n;t||(t=new o(3*f));var d=function(e){var r=t.length;if(e>r){var n=new o(Math.max(r<<1,e));n.set(t),t=n}},p=r.f||0,y=r.p||0,b=r.b||0,m=r.l,g=r.d,x=r.m,P=r.n;if(p&&!m)return t;var j=f<<3;do{if(!m){r.f=p=E(e,y,1);var O=E(e,y+1,3);if(y+=3,!O){var M=H(y)+4,k=e[M-4]|e[M-3]<<8,T=M+k;if(T>f){if(n)throw"unexpected EOF";break}l&&d(b+k),t.set(e.subarray(M,T),b),r.b=b+=k,r.p=y=T<<3;continue}if(1==O)m=z,g=N,x=9,P=5;else{if(2!=O)throw"invalid block type";var U=E(e,y,31)+257,X=E(e,y+10,15)+4,S=U+E(e,y+5,31)+1;y+=14;for(var B=new o(S),Z=new o(19),R=0;R<X;++R)Z[s[R]]=E(e,y+3*R,7);y+=3*X;var F=L(Z),D=(1<<F)-1;if(!n&&y+S*(F+7)>j)break;for(var I=w(Z,F,1),W=0;W<S;){var q=I[E(e,y,D)];y+=15&q;var V=q>>>4;if(V<16)B[W++]=V;else{var G=0,K=0;for(16==V?(K=3+E(e,y,3),y+=2,G=B[W-1]):17==V?(K=3+E(e,y,7),y+=3):18==V&&(K=11+E(e,y,127),y+=7);K--;)B[W++]=G}}var Y=B.subarray(0,U),C=B.subarray(U);x=L(Y),P=L(C),m=w(Y,x,1),g=w(C,P,1)}if(y>j)throw"unexpected EOF"}l&&d(b+131072);for(var J=(1<<x)-1,Q=(1<<P)-1,_=x+P+18;n||y+_<j;){var $=m[A(e,y)&J],ee=$>>>4;if((y+=15&$)>j)throw"unexpected EOF";if(!$)throw"invalid length/literal";if(ee<256)t[b++]=ee;else{if(256==ee){m=void 0;break}var te=ee-254;if(ee>264){var re=ee-257,ne=u[re];te=E(e,y,(1<<ne)-1)+h[re],y+=ne}var oe=g[A(e,y)&Q],ie=oe>>>4;if(!oe)throw"invalid distance";y+=15&oe;var ae=v[ie];if(ie>3){var se=c[ie];ae+=A(e,y)&(1<<se)-1,y+=se}if(y>j)throw"unexpected EOF";l&&d(b+131072);for(var ue=b+te;b<ue;b+=4)t[b]=t[b-ae],t[b+1]=t[b+1-ae],t[b+2]=t[b+2-ae],t[b+3]=t[b+3-ae];b=ue}}r.l=m,r.p=y,r.b=b,m&&(p=1,r.m=x,r.d=g,r.n=P)}while(!p);return b==t.length?t:function(e,t,r){(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);var n=new(e instanceof i?i:e instanceof a?a:o)(r-t);return n.set(e.subarray(t,r)),n}(t,0,b)}((function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"}(e),e.subarray(2,-4)),t)};var o=Uint8Array,i=Uint16Array,a=Uint32Array,s=new o([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),u=new o([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),c=new o([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),f=function(e,t){for(var r=new i(31),n=0;n<31;++n)r[n]=t+=1<<e[n-1];for(var o=new a(r[30]),s=1;s<30;++s)for(var u=r[s];u<r[s+1];++u)o[u]=u-r[s]<<5|s;return[r,o]},l=f(u,2),d=(0,n.default)(l,2),h=d[0],p=d[1];h[28]=258,p[258]=28;for(var y=f(c,0),v=(0,n.default)(y,1)[0],b=new i(32768),m=0;m<32768;++m){var g=(43690&m)>>>1|(21845&m)<<1;g=(61680&(g=(52428&g)>>>2|(13107&g)<<2))>>>4|(3855&g)<<4,b[m]=((65280&g)>>>8|(255&g)<<8)>>>1}for(var w=function(e,t,r){for(var n=e.length,o=0,a=new i(t);o<n;++o)++a[e[o]-1];var s,u=new i(t);for(o=0;o<t;++o)u[o]=u[o-1]+a[o-1]<<1;if(r){s=new i(1<<t);var c=15-t;for(o=0;o<n;++o)if(e[o])for(var f=o<<4|e[o],l=t-e[o],d=u[e[o]-1]++<<l,h=d|(1<<l)-1;d<=h;++d)s[b[d]>>>c]=f}else for(s=new i(n),o=0;o<n;++o)s[o]=b[u[e[o]-1]++]>>>15-e[o];return s},x=new o(288),P=0;P<144;++P)x[P]=8;for(var j=144;j<256;++j)x[j]=9;for(var O=256;O<280;++O)x[O]=7;for(var M=280;M<288;++M)x[M]=8;for(var k=new o(32),T=0;T<32;++T)k[T]=5;var z=w(x,9,1),N=w(k,5,1),E=function(e,t,r){var n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},A=function(e,t){var r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},H=function(e){return(e>>>3)+(7&e&&1)},L=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t}},3493:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(5218);var n=r(3863);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},4415:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/wasm-crypto-wasm",path:"/",type:"cjs",version:"6.0.1"}},303:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.__bridge=void 0,t.allocString=function(e){return u((0,n.stringToU8a)(e))},t.allocU8a=u,t.getInt32=i,t.getString=function(e,t){return(0,n.u8aToString)(s(e,t))},t.getU8a=s,t.getUint8=a,t.getWasm=function(){return o.wasm},t.resultString=function(){return(0,n.u8aToString)(c())},t.resultU8a=c,t.withWasm=function(e){return function(){(0,n.assert)(o.wasm,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return e.apply(void 0,[o.wasm].concat(r))}};var n=r(9338),o={cachegetInt32:null,cachegetUint8:null,type:"wasm",wasm:null,wasmPromise:null,wasmPromiseFn:null};function i(){return null!==o.cachegetInt32&&o.cachegetInt32.buffer===o.wasm.memory.buffer||(o.cachegetInt32=new Int32Array(o.wasm.memory.buffer)),o.cachegetInt32}function a(){return null!==o.cachegetUint8&&o.cachegetUint8.buffer===o.wasm.memory.buffer||(o.cachegetUint8=new Uint8Array(o.wasm.memory.buffer)),o.cachegetUint8}function s(e,t){return a().subarray(e/1,e/1+t)}function u(e){var t=o.wasm.__wbindgen_malloc(1*e.length);return a().set(e,t/1),[t,e.length]}function c(){var e=i()[2],t=i()[3],r=s(e,t).slice();return o.wasm.__wbindgen_free(e,1*t),r}t.__bridge=o},3804:(e,t,r)=>{"use strict";var n=r(3049),o=n(r(6102)),i=n(r(7262)),a=n(r(136));Object.defineProperty(t,"__esModule",{value:!0}),t.hmacSha512=t.hmacSha256=t.ed25519Verify=t.ed25519Sign=t.ed25519KeypairFromSeed=t.blake2b=t.bip39Validate=t.bip39ToSeed=t.bip39ToMiniSecret=t.bip39ToEntropy=t.bip39Generate=void 0,t.isReady=I,t.keccak512=t.keccak256=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return c.packageInfo}}),t.vrfVerify=t.vrfSign=t.twox=t.sr25519Verify=t.sr25519Sign=t.sr25519KeypairFromSeed=t.sr25519DerivePublicSoft=t.sr25519DeriveKeypairSoft=t.sr25519DeriveKeypairHard=t.sr25519Agree=t.sha512=t.sha256=t.secp256k1Sign=t.secp256k1Recover=t.secp256k1FromSeed=t.secp256k1Expand=t.secp256k1Compress=t.scrypt=t.pbkdf2=void 0,t.waitReady=function(){return W.apply(this,arguments)};var s=r(303),u=r(5872),c=r(5344),f=(0,s.withWasm)((function(e,t){return e.ext_bip39_generate(8,t),(0,s.resultString)()}));t.bip39Generate=f;var l=(0,s.withWasm)((function(e,t){return e.ext_bip39_to_entropy.apply(e,[8].concat((0,a.default)((0,s.allocString)(t)))),(0,s.resultU8a)()}));t.bip39ToEntropy=l;var d=(0,s.withWasm)((function(e,t,r){return e.ext_bip39_to_mini_secret.apply(e,[8].concat((0,a.default)((0,s.allocString)(t)),(0,a.default)((0,s.allocString)(r)))),(0,s.resultU8a)()}));t.bip39ToMiniSecret=d;var h=(0,s.withWasm)((function(e,t,r){return e.ext_bip39_to_seed.apply(e,[8].concat((0,a.default)((0,s.allocString)(t)),(0,a.default)((0,s.allocString)(r)))),(0,s.resultU8a)()}));t.bip39ToSeed=h;var p=(0,s.withWasm)((function(e,t){return 0!==e.ext_bip39_validate.apply(e,(0,a.default)((0,s.allocString)(t)))}));t.bip39Validate=p;var y=(0,s.withWasm)((function(e,t){return e.ext_ed_from_seed.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.ed25519KeypairFromSeed=y;var v=(0,s.withWasm)((function(e,t,r,n){return e.ext_ed_sign.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n)))),(0,s.resultU8a)()}));t.ed25519Sign=v;var b=(0,s.withWasm)((function(e,t,r,n){return 0!==e.ext_ed_verify.apply(e,(0,a.default)((0,s.allocU8a)(t)).concat((0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n))))}));t.ed25519Verify=b;var m=(0,s.withWasm)((function(e,t){return e.ext_secp_from_seed.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.secp256k1FromSeed=m;var g=(0,s.withWasm)((function(e,t){return e.ext_secp_pub_compress.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.secp256k1Compress=g;var w=(0,s.withWasm)((function(e,t){return e.ext_secp_pub_expand.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.secp256k1Expand=w;var x=(0,s.withWasm)((function(e,t,r,n){return e.ext_secp_recover.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),[n])),(0,s.resultU8a)()}));t.secp256k1Recover=x;var P=(0,s.withWasm)((function(e,t,r){return e.ext_secp_sign.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.secp256k1Sign=P;var j=(0,s.withWasm)((function(e,t,r){return e.ext_sr_derive_keypair_hard.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.sr25519DeriveKeypairHard=j;var O=(0,s.withWasm)((function(e,t,r){return e.ext_sr_derive_keypair_soft.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.sr25519DeriveKeypairSoft=O;var M=(0,s.withWasm)((function(e,t,r){return e.ext_sr_derive_public_soft.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.sr25519DerivePublicSoft=M;var k=(0,s.withWasm)((function(e,t){return e.ext_sr_from_seed.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.sr25519KeypairFromSeed=k;var T=(0,s.withWasm)((function(e,t,r,n){return e.ext_sr_sign.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n)))),(0,s.resultU8a)()}));t.sr25519Sign=T;var z=(0,s.withWasm)((function(e,t,r,n){return 0!==e.ext_sr_verify.apply(e,(0,a.default)((0,s.allocU8a)(t)).concat((0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n))))}));t.sr25519Verify=z;var N=(0,s.withWasm)((function(e,t,r){return e.ext_sr_agree.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.sr25519Agree=N;var E=(0,s.withWasm)((function(e,t,r,n,o){return e.ext_vrf_sign.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n)),(0,a.default)((0,s.allocU8a)(o)))),(0,s.resultU8a)()}));t.vrfSign=E;var A=(0,s.withWasm)((function(e,t,r,n,o,i){return 0!==e.ext_vrf_verify.apply(e,(0,a.default)((0,s.allocU8a)(t)).concat((0,a.default)((0,s.allocU8a)(r)),(0,a.default)((0,s.allocU8a)(n)),(0,a.default)((0,s.allocU8a)(o)),(0,a.default)((0,s.allocU8a)(i))))}));t.vrfVerify=A;var H=(0,s.withWasm)((function(e,t,r,n){return e.ext_blake2b.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),[n])),(0,s.resultU8a)()}));t.blake2b=H;var L=(0,s.withWasm)((function(e,t,r){return e.ext_hmac_sha256.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.hmacSha256=L;var U=(0,s.withWasm)((function(e,t,r){return e.ext_hmac_sha512.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)))),(0,s.resultU8a)()}));t.hmacSha512=U;var X=(0,s.withWasm)((function(e,t){return e.ext_keccak256.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.keccak256=X;var S=(0,s.withWasm)((function(e,t){return e.ext_keccak512.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.keccak512=S;var B=(0,s.withWasm)((function(e,t,r,n){return e.ext_pbkdf2.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),[n])),(0,s.resultU8a)()}));t.pbkdf2=B;var Z=(0,s.withWasm)((function(e,t,r,n,o,i){return e.ext_scrypt.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),(0,a.default)((0,s.allocU8a)(r)),[n,o,i])),(0,s.resultU8a)()}));t.scrypt=Z;var R=(0,s.withWasm)((function(e,t){return e.ext_sha256.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.sha256=R;var F=(0,s.withWasm)((function(e,t){return e.ext_sha512.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)))),(0,s.resultU8a)()}));t.sha512=F;var D=(0,s.withWasm)((function(e,t,r){return e.ext_twox.apply(e,[8].concat((0,a.default)((0,s.allocU8a)(t)),[r])),(0,s.resultU8a)()}));function I(){return!!(0,s.getWasm)()}function W(){return(W=(0,i.default)(o.default.mark((function e(){return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s.__bridge.wasmPromise||(s.__bridge.wasmPromiseFn||(s.__bridge.wasmPromiseFn=u.initWasm),s.__bridge.wasmPromise=s.__bridge.wasmPromiseFn()),e.next=4,s.__bridge.wasmPromise;case 4:return e.abrupt("return",I());case 7:return e.prev=7,e.t0=e.catch(0),e.abrupt("return",!1);case 10:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}t.twox=D},9456:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(1572),o=r(4415),i=[n.packageInfo,o.packageInfo];t.default=i},6190:(e,t,r)=>{"use strict";var n=r(3049),o=r(9338),i=n(r(9456)),a=r(5344);(0,o.detectPackage)(a.packageInfo,null,i.default)},1943:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.__wbg_crypto_968f1772287e2df0=function(e){return f(i)},t.__wbg_getRandomValues_a3d34b4fee3c2869=function(e){return f(i.getRandomValues)},t.__wbg_getRandomValues_f5e14ab7ac8e995d=function(e,t,r){i.getRandomValues((0,o.getU8a)(t,r))},t.__wbg_randomFillSync_d5bd2d655fdf256a=function(e,t,r){throw new Error("randomFillsync is not available")},t.__wbg_require_604837428532a733=function(e,t){throw new Error("Unable to require ".concat((0,o.getString)(e,t)))},t.__wbg_self_1b7a39e3a92c949c=function(){return f(a)},t.__wbindgen_is_undefined=function(e){return void 0===c(e)},t.__wbindgen_object_drop_ref=function(e){!function(e){c(e);!function(e){e<36||(s[e]=u,u=e)}(e)}(e)},t.__wbindgen_throw=function(e,t){throw new Error((0,o.getString)(e,t))},t.abort=function(){throw new Error("abort")};var n=r(1649),o=r(303),i={getRandomValues:n.getRandomValues},a={crypto:i},s=new Array(32).fill(void 0).concat(void 0,null,!0,!1),u=s.length;function c(e){return s[e]}function f(e){u===s.length&&s.push(s.length+1);var t=u;return u=s[t],s[t]=e,t}},6431:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(6190);var n=r(3804);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}))},5872:(e,t,r)=>{"use strict";var n=r(3049),o=n(r(6102)),i=n(r(7262)),a=n(r(289));Object.defineProperty(t,"__esModule",{value:!0}),t.initWasm=function(){return h(u.wasmBytes,null)},t.setWasmPromise=h,t.setWasmPromiseFn=function(e){c.__bridge.wasmPromiseFn=e};var s=r(9338),u=r(3493),c=r(303),f=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!==(0,a.default)(e)&&"function"!=typeof e)return{default:e};var r=l(t);if(r&&r.has(e))return r.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var s=o?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}(r(1943));function l(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(l=function(e){return e?r:t})(e)}function d(){return(d=(0,i.default)(o.default.mark((function e(t,r){var n;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,(0,s.assert)("object"===("undefined"==typeof WebAssembly?"undefined":(0,a.default)(WebAssembly))&&"function"==typeof WebAssembly.instantiate&&t&&t.length,"WebAssembly is not available in your environment"),e.next=4,WebAssembly.instantiate(t,{wbg:f});case 4:n=e.sent,c.__bridge.wasm=n.instance.exports,e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),r?(c.__bridge.type="asm",c.__bridge.wasm=r(f)):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto:: ".concat(e.t0.message)),c.__bridge.wasm=null);case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}function h(e,t){return c.__bridge.wasmPromise=function(e,t){return d.apply(this,arguments)}(e,t),c.__bridge.wasmPromise}},5344:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/wasm-crypto",path:"/",type:"cjs",version:"6.0.1"}},8107:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BigInt=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}});var n=r(3137),o=r(6785),i="function"==typeof n.xglobal.BigInt&&"function"==typeof n.xglobal.BigInt.asIntN?n.xglobal.BigInt:function(){return Number.NaN};t.BigInt=i},6785:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/x-bigint",path:"/",type:"cjs",version:"9.1.1"}},9574:(e,t,r)=>{"use strict";var n=r(8107);(0,r(3137).exposeGlobal)("BigInt",n.BigInt)},3137:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exposeGlobal=function(e,t){void 0===o[e]&&(o[e]=t)},t.extractGlobal=function(e,t){return void 0===o[e]?t:o[e]},Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return n.packageInfo}}),t.xglobal=void 0;var n=r(8069),o="undefined"!=typeof globalThis?globalThis:void 0!==r.g?r.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");t.xglobal=o},8069:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/x-global",path:"/",type:"cjs",version:"9.1.1"}},1649:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=function(e){return n.xglobal.crypto.getRandomValues(e)},Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}});var n=r(3137),o=r(2762)},2762:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/x-randomvalues",path:"/",type:"cjs",version:"9.1.1"}},1984:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}});var n=r(3137),o=r(6796),i=r(6438),a=(0,n.extractGlobal)("TextDecoder",o.TextDecoder);t.TextDecoder=a},6796:(e,t,r)=>{"use strict";var n=r(2931),o=n(r(9002)),i=n(r(198));Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0;var a=function(){function e(t){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"decode",value:function(e){for(var t="",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}}]),e}();t.TextDecoder=a},6438:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/x-textdecoder",path:"/",type:"cjs",version:"9.1.1"}},5499:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}});var n=r(3137),o=r(7680),i=r(6645),a=(0,n.extractGlobal)("TextEncoder",o.TextEncoder);t.TextEncoder=a},7680:(e,t,r)=>{"use strict";var n=r(2200),o=n(r(4766)),i=n(r(296));Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0;var a=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"encode",value:function(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}}]),e}();t.TextEncoder=a},6645:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;t.packageInfo={name:"@polkadot/x-textencoder",path:"/",type:"cjs",version:"9.1.1"}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e=r(5318),t=e(r(7757)),n=e(r(8926)),o=r(398),i=r(2167),a=r(7118),s=e(r(9959));function u(e,t){window.location.href.match("js_as_extension")?console.log(e,t):Extension.postMessage(JSON.stringify({path:e,data:t}))}function c(){return(c=(0,n.default)(t.default.mark((function e(){return t.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.web3Enable)("my cool dapp");case 2:return u("log",e.sent),e.next=6,(0,a.web3Accounts)();case 6:u("log",e.sent);case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}u("log","main js loaded"),window.send=u,window.addEventListener("message",(function(e){var t=e.data;e.source===window&&("content"===t.origin?t.id?(0,o.handleResponse)(t):console.error("Missing id for response."):"page"===t.origin&&s.default.handleMsg(t))})),(0,i.injectExtension)(o.enable,{name:"polkawallet",version:"0.9.0"}),window.walletExtension={test:function(){return c.apply(this,arguments)},onAppResponse:s.default.onAppResponse}})()})();